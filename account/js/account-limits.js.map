{"version":3,"file":"account/js/account-limits.js","mappings":"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","sources":["webpack://@deriv/account/webpack/universalModuleDefinition","webpack://@deriv/account/./Components/icon-with-message/icon-with-message.tsx","webpack://@deriv/account/./Components/icon-with-message/index.ts","webpack://@deriv/account/./Components/demo-message/demo-message.tsx","webpack://@deriv/account/./Components/demo-message/index.ts","webpack://@deriv/account/./Components/icon-message-content/icon-message-content.tsx","webpack://@deriv/account/./Components/icon-message-content/index.ts","webpack://@deriv/account/./Components/load-error-message/load-error-message.tsx","webpack://@deriv/account/./Components/load-error-message/index.ts","webpack://@deriv/account/./Stores/connect.js","webpack://@deriv/account/../../../node_modules/classnames/index.js","webpack://@deriv/account/../../../node_modules/prop-types/factoryWithThrowingShims.js","webpack://@deriv/account/../../../node_modules/prop-types/index.js","webpack://@deriv/account/../../../node_modules/prop-types/lib/ReactPropTypesSecret.js","webpack://@deriv/account/external umd \"@deriv/components\"","webpack://@deriv/account/external umd \"@deriv/shared\"","webpack://@deriv/account/external umd \"@deriv/translations\"","webpack://@deriv/account/external umd \"mobx-react\"","webpack://@deriv/account/external umd \"react\"","webpack://@deriv/account/external umd \"react-dom\"","webpack://@deriv/account/webpack/bootstrap","webpack://@deriv/account/webpack/runtime/compat get default export","webpack://@deriv/account/webpack/runtime/define property getters","webpack://@deriv/account/webpack/runtime/hasOwnProperty shorthand","webpack://@deriv/account/./Components/article/article.tsx","webpack://@deriv/account/./Components/article/index.ts","webpack://@deriv/account/./Components/account-limits/account-limits-article.tsx","webpack://@deriv/account/./Components/account-limits/account-limits-context.tsx","webpack://@deriv/account/./Components/account-limits/account-limits-extra-info.tsx","webpack://@deriv/account/./Components/account-limits/account-limits-footer.tsx","webpack://@deriv/account/./Components/account-limits/account-limits-overlay.tsx","webpack://@deriv/account/./Components/account-limits/account-limits-table-cell.tsx","webpack://@deriv/account/./Components/account-limits/account-limits-table-header.tsx","webpack://@deriv/account/./Components/account-limits/account-limits-turnover-limit-row.tsx","webpack://@deriv/account/./Components/account-limits/account-limits.tsx","webpack://@deriv/account/./Components/account-limits/index.ts"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@deriv/components\"), require(\"@deriv/shared\"), require(\"@deriv/translations\"), require(\"mobx-react\"), require(\"react\"), require(\"react-dom\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@deriv/components\", \"@deriv/shared\", \"@deriv/translations\", \"mobx-react\", \"react\", \"react-dom\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@deriv/account\"] = factory(require(\"@deriv/components\"), require(\"@deriv/shared\"), require(\"@deriv/translations\"), require(\"mobx-react\"), require(\"react\"), require(\"react-dom\"));\n\telse\n\t\troot[\"@deriv/account\"] = factory(root[\"@deriv/components\"], root[\"@deriv/shared\"], root[\"@deriv/translations\"], root[\"mobx-react\"], root[\"react\"], root[\"react-dom\"]);\n})(self, (__WEBPACK_EXTERNAL_MODULE__deriv_components__, __WEBPACK_EXTERNAL_MODULE__deriv_shared__, __WEBPACK_EXTERNAL_MODULE__deriv_translations__, __WEBPACK_EXTERNAL_MODULE_mobx_react__, __WEBPACK_EXTERNAL_MODULE_react__, __WEBPACK_EXTERNAL_MODULE_react_dom__) => {\nreturn ","import React from 'react';\nimport classNames from 'classnames';\nimport { Icon, Text, Button } from '@deriv/components';\nimport { isMobile, PlatformContext } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { connect } from 'Stores/connect';\nimport RootStore from 'Stores/index';\n\ntype TIconWithMessage = {\n    icon: string;\n    has_button?: boolean;\n    has_real_account?: boolean;\n    message: string;\n    toggleAccountsDialog: (status?: boolean) => void;\n    toggleShouldShowRealAccountsList: (value: boolean) => void;\n};\n\nconst IconWithMessage = ({\n    has_button,\n    has_real_account,\n    icon,\n    message,\n    toggleAccountsDialog,\n    toggleShouldShowRealAccountsList,\n}: TIconWithMessage) => {\n    const { is_appstore } = React.useContext(PlatformContext);\n\n    return (\n        <div className={classNames('da-icon-with-message', { 'da-icon-with-message-full-width': is_appstore })}>\n            <Icon icon={icon} size={128} />\n            <Text\n                className='da-icon-with-message__text'\n                as='p'\n                color='general'\n                size={isMobile() ? 'xs' : 's'}\n                line_height='m'\n                weight='bold'\n            >\n                {message}\n            </Text>\n            {has_button && (\n                <Button\n                    primary\n                    onClick={() => {\n                        toggleShouldShowRealAccountsList(true);\n                        toggleAccountsDialog();\n                    }}\n                    className='account__demo-message-button'\n                    data-testid='icon-with-message-button'\n                >\n                    {has_real_account ? localize('Switch to real account') : localize('Add a real account')}\n                </Button>\n            )}\n        </div>\n    );\n};\n\nexport default connect(({ client, ui }: RootStore) => ({\n    has_real_account: client.has_any_real_account,\n    toggleAccountsDialog: ui.toggleAccountsDialog,\n    toggleShouldShowRealAccountsList: ui.toggleShouldShowRealAccountsList,\n}))(IconWithMessage);\n","import IconWithMessage from './icon-with-message';\nimport './icon-with-message.scss';\n\nexport default IconWithMessage;\n","import React from 'react';\nimport { localize } from '@deriv/translations';\nimport IconWithMessage from 'Components/icon-with-message';\n\ntype TDemoMessage = {\n    has_demo_icon?: boolean;\n    has_button?: boolean;\n};\n\nconst DemoMessage = ({ has_demo_icon, has_button }: TDemoMessage) => (\n    <IconWithMessage\n        icon={has_demo_icon ? 'IcPoaLockDemo' : 'IcPoaLock'}\n        message={localize('This feature is not available for demo accounts.')}\n        has_button={has_button}\n    />\n);\n\nexport default DemoMessage;\n","import DemoMessage from './demo-message';\n\nexport default DemoMessage;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Div100vhContainer, Text } from '@deriv/components';\nimport { isDesktop } from '@deriv/shared';\n\ntype TIconMessageContent = {\n    className?: string;\n    full_width?: boolean;\n    icon: React.ReactElement;\n    message: React.ReactNode;\n    text?: string | React.ReactElement;\n};\n\nconst IconMessageContent = ({\n    children,\n    className,\n    full_width,\n    icon,\n    message,\n    text,\n}: React.PropsWithChildren<TIconMessageContent>) => (\n    <Div100vhContainer\n        className={classNames('account-management__message-wrapper', {\n            'account-management__message-wrapper-full-width': full_width,\n        })}\n        is_disabled={isDesktop()}\n        height_offset='110px'\n    >\n        <div\n            className={classNames('account-management__message-content', {\n                [`${className}__message-content`]: className,\n            })}\n        >\n            {icon && (\n                <div\n                    className={classNames('account-management__message-icon', {\n                        [`${className}__message-icon`]: className,\n                    })}\n                >\n                    {icon}\n                </div>\n            )}\n            <Text\n                as='div'\n                color='general'\n                weight='bold'\n                size='s'\n                align='center'\n                className={classNames('account-management__message', {\n                    [`${className}__message`]: className,\n                })}\n            >\n                {message}\n            </Text>\n            {text && (\n                <div className='account-management__text-container'>\n                    <Text\n                        className={classNames({\n                            [`${className}__text`]: className,\n                        })}\n                        as='p'\n                        size='xs'\n                        align='center'\n                    >\n                        {text}\n                    </Text>\n                </div>\n            )}\n            {children}\n        </div>\n    </Div100vhContainer>\n);\n\nexport default IconMessageContent;\n","import IconMessageContent from './icon-message-content';\n\nexport default IconMessageContent;\n","import React from 'react';\nimport { Icon } from '@deriv/components';\nimport IconMessageContent from 'Components/icon-message-content';\n\ntype TLoadErrorMessage = {\n    error_message: React.ReactNode;\n};\n\nconst LoadErrorMessage = ({ error_message }: TLoadErrorMessage) => (\n    <IconMessageContent message={error_message} icon={<Icon icon='IcPoaLock' size={128} />} />\n);\n\nexport default LoadErrorMessage;\n","import LoadErrorMessage from './load-error-message';\n\nexport default LoadErrorMessage;\n","import { useObserver } from 'mobx-react';\nimport React from 'react';\n\nconst isClassComponent = Component =>\n    !!(typeof Component === 'function' && Component.prototype && Component.prototype.isReactComponent);\n\nexport const MobxContent = React.createContext(null);\n\nfunction injectStorePropsToComponent(propsToSelectFn, BaseComponent) {\n    const Component = own_props => {\n        const store = React.useContext(MobxContent);\n\n        let ObservedComponent = BaseComponent;\n\n        if (isClassComponent(BaseComponent)) {\n            const FunctionalWrapperComponent = props => <BaseComponent {...props} />;\n            ObservedComponent = FunctionalWrapperComponent;\n        }\n\n        return useObserver(() => ObservedComponent({ ...own_props, ...propsToSelectFn(store, own_props) }));\n    };\n\n    Component.displayName = BaseComponent.name;\n    return Component;\n}\n\nexport const MobxContentProvider = ({ store, children }) => {\n    return <MobxContent.Provider value={{ ...store, mobxStores: store }}>{children}</MobxContent.Provider>;\n};\n\nexport const connect = propsToSelectFn => Component => injectStorePropsToComponent(propsToSelectFn, Component);\n","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bigint: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_components__;","module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_shared__;","module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_translations__;","module.exports = __WEBPACK_EXTERNAL_MODULE_mobx_react__;","module.exports = __WEBPACK_EXTERNAL_MODULE_react__;","module.exports = __WEBPACK_EXTERNAL_MODULE_react_dom__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import React from 'react';\nimport { Icon, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport './article.scss';\nimport classNames from 'classnames';\n\ntype TDescriptionsItem = {\n    key: string;\n    component: React.ReactElement;\n};\n\nexport type TArticle = {\n    title: string;\n    descriptions: Array<TDescriptionsItem & React.ReactElement>;\n    onClickLearnMore?: () => void;\n    className?: string;\n};\n\nconst Article = ({ title, descriptions, onClickLearnMore, className }: TArticle) => {\n    const has_descriptions: boolean = descriptions?.length > 0;\n    const has_single_description: boolean = descriptions?.length === 1;\n\n    return (\n        <article className={classNames('da-article', className)}>\n            <Text as='h4' color='prominent' line_height='m' size='xs' weight='bold' className='da-article__header'>\n                {title}\n            </Text>\n            {has_descriptions && (\n                <React.Fragment>\n                    {has_single_description ? (\n                        <Text as='p' size='xxs' line_height='m'>\n                            {descriptions[0]}\n                        </Text>\n                    ) : (\n                        <ul className='da-article__list'>\n                            {descriptions.map((description, idx) => (\n                                <li key={idx}>\n                                    <Text size='xxs' line_height='xs'>\n                                        {'component' in description ? description.component : description}\n                                    </Text>\n                                </li>\n                            ))}\n                        </ul>\n                    )}\n                </React.Fragment>\n            )}\n            {onClickLearnMore && (\n                <div className='da-article__learn-more' onClick={onClickLearnMore}>\n                    <Text size='xxs' color='loss-danger' line_height='s'>\n                        <Localize i18n_default_text='Learn more' />\n                    </Text>\n                    <Icon icon='IcChevronRight' className='da-article__learn-more-icon' color='red' />\n                </div>\n            )}\n        </article>\n    );\n};\n\nexport default Article;\n","import AccountArticle from './article';\nimport './article.scss';\n\nexport default AccountArticle;\n","import PropTypes from 'prop-types';\nimport * as React from 'react';\nimport { StaticUrl } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\nimport AccountArticle from 'Components/article';\n\ntype TAccountLimitsArticle = {\n    is_from_derivgo?: boolean;\n};\n\nconst AccountLimitsArticle = ({ is_from_derivgo }: TAccountLimitsArticle) => {\n    const getDescription = () => {\n        const description = [\n            <Localize key={0} i18n_default_text='These are default limits that we apply to your accounts.' />,\n        ];\n\n        if (!is_from_derivgo) {\n            description.push(\n                <Localize\n                    key={1}\n                    i18n_default_text='To learn more about trading limits and how they apply, please go to the <0>Help Centre.</0>'\n                    components={[<StaticUrl key={0} className='link' href='/help-centre/trading/#trading-limits' />]}\n                />\n            );\n        }\n        return description;\n    };\n\n    return <AccountArticle title={localize('Account limits')} descriptions={getDescription()} />;\n};\n\nAccountLimitsArticle.propTypes = {\n    is_from_derivgo: PropTypes.bool,\n};\n\nexport default AccountLimitsArticle;\n","import * as React from 'react';\n\nexport type TAccountLimitsContext = {\n    currency: string;\n    footer_ref?: React.RefObject<HTMLElement>;\n    overlay_ref: HTMLDivElement;\n    toggleOverlay?: () => void;\n};\n\nconst AccountLimitsContext = React.createContext<TAccountLimitsContext>({\n    currency: '',\n    overlay_ref: document.createElement('div'),\n});\n\nexport default AccountLimitsContext;\n","import * as React from 'react';\nimport { Popover, Text } from '@deriv/components';\nimport { isMobile } from '@deriv/shared';\n\ntype TAccountLimitsExtraInfo = {\n    message: string;\n    className?: string;\n};\n\nconst AccountLimitsExtraInfo = ({ message, ...props }: TAccountLimitsExtraInfo) => {\n    if (isMobile()) {\n        return (\n            <Text color='less-prominent' line_height='s' size='xxxs'>\n                {message}\n            </Text>\n        );\n    }\n\n    return (\n        <Popover\n            data_testid='dt_acc_limits_popover'\n            alignment='right'\n            className='da-account-limits__popover'\n            icon='info'\n            is_bubble_hover_enabled\n            message={message}\n            zIndex='9999'\n            {...props}\n        />\n    );\n};\n\nexport default AccountLimitsExtraInfo;\n","import * as React from 'react';\nimport { createPortal } from 'react-dom';\nimport { Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport AccountLimitsContext, { TAccountLimitsContext } from './account-limits-context';\n\nconst AccountLimitsFooterPortal = () => {\n    const { footer_ref, toggleOverlay } = React.useContext<TAccountLimitsContext>(AccountLimitsContext);\n\n    return createPortal(\n        <a className='link link--prominent' onClick={toggleOverlay} data-testid='dt_footer_text'>\n            <Text size='xxs' line_height='m' weight='bold'>\n                <Localize i18n_default_text='Learn more about account limits' />\n            </Text>\n        </a>,\n        footer_ref?.current as HTMLElement\n    );\n};\n\nexport default AccountLimitsFooterPortal;\n","import * as React from 'react';\nimport { Popup, StaticUrl } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\nimport AccountLimitsContext from './account-limits-context';\n\nconst AccountLimitsOverlay = () => {\n    const { overlay_ref, toggleOverlay } = React.useContext(AccountLimitsContext);\n\n    return (\n        <Popup.Overlay\n            descriptions={[\n                {\n                    key: 'account_limits_desc_1',\n                    component: (\n                        <Localize i18n_default_text='These are default limits that we apply to your accounts.' />\n                    ),\n                },\n                {\n                    key: 'account_limits_desc_2',\n                    component: (\n                        <Localize\n                            i18n_default_text='To learn more about account limits and how they apply, please go to the <0>Help Centre</0>.'\n                            components={[<StaticUrl key={0} className='link' href='/help-centre' />]}\n                        />\n                    ),\n                },\n            ]}\n            done_text={localize('Done')}\n            overlay_ref={overlay_ref}\n            title={localize('Account limits')}\n            toggleOverlay={toggleOverlay}\n        />\n    );\n};\n\nexport default AccountLimitsOverlay;\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Text } from '@deriv/components';\n\ntype TAccountLimitsTableCell = {\n    align: 'right' | 'left';\n    is_hint: boolean;\n    level: string;\n    renderExtraInfo: () => React.ReactElement;\n};\n\nconst AccountLimitsTableCell = ({\n    align,\n    children,\n    is_hint,\n    level,\n    renderExtraInfo,\n}: React.PropsWithChildren<Partial<TAccountLimitsTableCell>>) => {\n    const text_size = is_hint ? 'xxxs' : 'xxs';\n\n    return (\n        <React.Fragment>\n            <td\n                className={classNames('da-account-limits__table-cell', {\n                    'da-account-limits__table-cell--left': align !== 'right',\n                    'da-account-limits__table-cell--right': align === 'right',\n                    'da-account-limits__table-cell--submarket': level === 'submarket',\n                })}\n                data-testid='account_limit_table_cell'\n            >\n                {children && (\n                    <Text\n                        align={align}\n                        as='p'\n                        color='prominent'\n                        size={text_size}\n                        line_height='m'\n                        data-testid='account_limit_table_cell_text'\n                    >\n                        {children}\n                    </Text>\n                )}\n                {renderExtraInfo && renderExtraInfo()}\n            </td>\n        </React.Fragment>\n    );\n};\n\nexport default AccountLimitsTableCell;\n","import * as React from 'react';\nimport classNames from 'classnames';\nimport { Text } from '@deriv/components';\n\ntype TAccountLimitsTableHeader = {\n    align: 'left' | 'right';\n    renderExtraInfo: () => React.ReactNode;\n};\n\nconst AccountLimitsTableHeader = ({\n    align,\n    children,\n    renderExtraInfo,\n}: React.PropsWithChildren<Partial<TAccountLimitsTableHeader>>) => {\n    return (\n        <th\n            className={classNames('da-account-limits__table-header', {\n                'da-account-limits__table-header--left': align !== 'right',\n                'da-account-limits__table-header--right': align === 'right',\n            })}\n            data-testid='account_limit_table_header'\n        >\n            {children && (\n                <Text\n                    align={align}\n                    as='p'\n                    color='prominent'\n                    size='xs'\n                    line_height='m'\n                    weight='bold'\n                    data-testid='account_limit_table_header_text'\n                >\n                    {children}\n                </Text>\n            )}\n            {renderExtraInfo && renderExtraInfo()}\n        </th>\n    );\n};\n\nexport default AccountLimitsTableHeader;\n","import * as React from 'react';\nimport { formatMoney } from '@deriv/shared';\nimport AccountLimitsTableCell from './account-limits-table-cell';\nimport AccountLimitsContext, { TAccountLimitsContext } from './account-limits-context';\n\nexport type TAccountLimitsCollection = {\n    level?: string;\n    name: string;\n    payout_limit: number;\n    profile_name: string;\n    turnover_limit: number;\n};\n\ntype TAccountLimitsTurnoverLimitRow = {\n    collection: TAccountLimitsCollection[];\n    title?: string;\n};\n\nconst AccountLimitsTurnoverLimitRow = ({ collection, title }: TAccountLimitsTurnoverLimitRow) => {\n    const { currency } = React.useContext<TAccountLimitsContext>(AccountLimitsContext);\n\n    return (\n        <React.Fragment>\n            {collection?.map(({ name, turnover_limit, level }) => (\n                <tr key={name} data-testid='account-limits-turnover-limit-row'>\n                    <AccountLimitsTableCell level={level}>\n                        {title && `${title} - `}\n                        {name}\n                    </AccountLimitsTableCell>\n                    <AccountLimitsTableCell align='right'>\n                        {formatMoney(currency, turnover_limit, true)}\n                    </AccountLimitsTableCell>\n                </tr>\n            ))}\n        </React.Fragment>\n    );\n};\n\nexport default AccountLimitsTurnoverLimitRow;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Loading, ThemedScrollbars, Text, ButtonLink } from '@deriv/components';\nimport { formatMoney, isDesktop, isMobile, useIsMounted, PlatformContext } from '@deriv/shared';\nimport { Localize, localize } from '@deriv/translations';\nimport LoadErrorMessage from 'Components/load-error-message';\nimport DemoMessage from 'Components/demo-message';\nimport AccountLimitsArticle from './account-limits-article';\nimport AccountLimitsContext, { TAccountLimitsContext } from './account-limits-context';\nimport AccountLimitsExtraInfo from './account-limits-extra-info';\nimport AccountLimitsFooter from './account-limits-footer';\nimport AccountLimitsOverlay from './account-limits-overlay';\nimport AccountLimitsTableCell from './account-limits-table-cell';\nimport AccountLimitsTableHeader from './account-limits-table-header';\nimport AccountLimitsTurnoverLimitRow, { TAccountLimitsCollection } from './account-limits-turnover-limit-row';\nimport { FormikValues } from 'formik';\n\ntype TAccountLimits = {\n    account_limits: {\n        api_initial_load_error?: string;\n        open_positions?: React.ReactNode;\n        account_balance: string | number;\n        daily_transfers?: object;\n        payout: string | number;\n        lifetime_limit?: number;\n        market_specific: {\n            commodities: TAccountLimitsCollection[];\n            cryptocurrency: TAccountLimitsCollection[];\n            forex: TAccountLimitsCollection[];\n            indices: TAccountLimitsCollection[];\n            synthetic_index: TAccountLimitsCollection[];\n        };\n        num_of_days?: number;\n        num_of_days_limit: string | number;\n        remainder: string | number;\n        withdrawal_for_x_days_monetary?: number;\n        withdrawal_since_inception_monetary: string | number;\n    };\n    currency: string;\n    footer_ref?: React.RefObject<HTMLElement>;\n    is_app_settings?: boolean;\n    getLimits: () => Promise<{ data: object }>;\n    is_fully_authenticated: boolean;\n    is_from_derivgo?: boolean;\n    is_switching: boolean;\n    is_virtual: boolean;\n    overlay_ref: HTMLDivElement;\n    setIsOverlayShown?: (is_overlay_shown?: boolean) => void;\n    setIsPopupOverlayShown?: (is_popup_overlay_shown: boolean) => void;\n    should_bypass_scrollbars?: boolean;\n    should_show_article?: boolean;\n};\n\nconst AccountLimits = ({\n    account_limits,\n    currency,\n    footer_ref,\n    getLimits,\n    is_app_settings,\n    is_fully_authenticated,\n    is_switching,\n    is_virtual,\n    overlay_ref,\n    is_from_derivgo,\n    setIsOverlayShown: setIsPopupOverlayShown,\n    should_bypass_scrollbars,\n    should_show_article,\n}: TAccountLimits) => {\n    const isMounted = useIsMounted();\n    const [is_loading, setLoading] = React.useState(false);\n    const [is_overlay_shown, setIsOverlayShown] = React.useState(false);\n    const { is_appstore } = React.useContext(PlatformContext);\n\n    React.useEffect(() => {\n        if (is_virtual) {\n            setLoading(false);\n        } else {\n            getLimits().then(() => {\n                if (isMounted()) setLoading(false);\n            });\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(() => {\n        if (!is_virtual && account_limits && is_loading) {\n            setLoading(false);\n        }\n    }, [account_limits, is_virtual, is_loading]);\n\n    React.useEffect(() => {\n        if (typeof setIsPopupOverlayShown === 'function') {\n            setIsPopupOverlayShown(is_overlay_shown);\n        }\n    }, [is_overlay_shown, setIsPopupOverlayShown]);\n\n    const toggleOverlay = () => setIsOverlayShown(!is_overlay_shown);\n\n    if (is_switching) {\n        return <Loading is_fullscreen={false} />;\n    }\n\n    if (is_virtual) {\n        return (\n            <div\n                data-testid='dt_account_demo_message_wrapper'\n                className={classNames('account__demo-message-wrapper', {\n                    'account__demo-message-wrapper-dashboard': is_appstore,\n                })}\n            >\n                <DemoMessage has_demo_icon={is_appstore} has_button={is_appstore} />\n            </div>\n        );\n    }\n\n    const {\n        api_initial_load_error,\n        open_positions,\n        account_balance,\n        payout,\n        market_specific,\n        num_of_days_limit,\n        remainder,\n        withdrawal_since_inception_monetary,\n    }: TAccountLimits['account_limits'] = account_limits;\n\n    if (api_initial_load_error) {\n        return <LoadErrorMessage error_message={api_initial_load_error} />;\n    }\n\n    if (is_switching || is_loading) {\n        return <Loading is_fullscreen={false} />;\n    }\n\n    const { commodities, forex, indices, synthetic_index } = { ...market_specific };\n    const forex_ordered = forex\n        ?.slice()\n        .sort((a: FormikValues, b: FormikValues) => (a.name > b.name ? 1 : b.name > a.name ? -1 : 0));\n    const derived_ordered = synthetic_index\n        ?.slice()\n        .sort((a: FormikValues, b: FormikValues) => (a.level > b.level ? 1 : -1));\n\n    const context_value: TAccountLimitsContext = {\n        currency,\n        footer_ref,\n        overlay_ref,\n        toggleOverlay,\n    };\n\n    return (\n        <AccountLimitsContext.Provider value={context_value}>\n            <section className='da-account-limits__wrapper' data-testid='account_limits_data'>\n                <div\n                    className={classNames('da-account-limits', {\n                        'da-account-limits--app-settings': is_app_settings,\n                    })}\n                >\n                    {should_show_article && isMobile() && <AccountLimitsArticle is_from_derivgo={is_from_derivgo} />}\n                    <div className='da-account-limits__table-wrapper'>\n                        <ThemedScrollbars is_bypassed={should_bypass_scrollbars || isMobile()}>\n                            <table className='da-account-limits__table' data-testid='trading_limit_item_table'>\n                                <thead>\n                                    <tr>\n                                        <AccountLimitsTableHeader>\n                                            <Localize i18n_default_text='Trading limits' />\n                                        </AccountLimitsTableHeader>\n                                        <AccountLimitsTableHeader align='right'>\n                                            <Localize i18n_default_text='Limit' />\n                                        </AccountLimitsTableHeader>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <tr>\n                                        <AccountLimitsTableCell\n                                            renderExtraInfo={() => (\n                                                <AccountLimitsExtraInfo\n                                                    message={localize(\n                                                        'Represents the maximum number of outstanding contracts in your portfolio. Each line in your portfolio counts for one open position. Once the maximum is reached, you will not be able to open new positions without closing an existing position first.'\n                                                    )}\n                                                />\n                                            )}\n                                        >\n                                            <Localize i18n_default_text='*Maximum number of open positions' />\n                                        </AccountLimitsTableCell>\n                                        <AccountLimitsTableCell align='right'>{open_positions}</AccountLimitsTableCell>\n                                    </tr>\n                                    <tr>\n                                        <AccountLimitsTableCell\n                                            renderExtraInfo={() => (\n                                                <AccountLimitsExtraInfo\n                                                    message={localize(\n                                                        'Represents the maximum amount of cash that you may hold in your account.  If the maximum is reached, you will be asked to withdraw funds.'\n                                                    )}\n                                                />\n                                            )}\n                                        >\n                                            <Localize i18n_default_text='*Maximum account cash balance' />\n                                        </AccountLimitsTableCell>\n                                        <AccountLimitsTableCell align='right'>\n                                            {/* null or 0 are expected form BE when max balance limit is not set */}\n                                            {account_balance ? (\n                                                formatMoney(currency, account_balance, true)\n                                            ) : (\n                                                <Localize i18n_default_text='Not set' />\n                                            )}\n                                        </AccountLimitsTableCell>\n                                    </tr>\n                                    <tr>\n                                        <AccountLimitsTableCell\n                                            renderExtraInfo={() => (\n                                                <AccountLimitsExtraInfo\n                                                    message={localize(\n                                                        'Represents the maximum aggregate payouts on outstanding contracts in your portfolio. If the maximum is attained, you may not purchase additional contracts without first closing out existing positions.'\n                                                    )}\n                                                />\n                                            )}\n                                        >\n                                            <Localize i18n_default_text='Maximum aggregate payouts on open positions' />\n                                        </AccountLimitsTableCell>\n                                        <AccountLimitsTableCell align='right'>\n                                            {formatMoney(currency, payout, true)}\n                                        </AccountLimitsTableCell>\n                                    </tr>\n                                    <tr>\n                                        <AccountLimitsTableCell is_hint>\n                                            <Localize i18n_default_text='*Any limits in your Self-exclusion settings will override these default limits.' />\n                                        </AccountLimitsTableCell>\n                                        <AccountLimitsTableCell />\n                                    </tr>\n                                </tbody>\n                            </table>\n                            <table className='da-account-limits__table' data-testid='trading_daily_turnover_table'>\n                                <thead>\n                                    <tr>\n                                        <AccountLimitsTableHeader\n                                            renderExtraInfo={() => (\n                                                <AccountLimitsExtraInfo\n                                                    message={localize(\n                                                        'Represents the maximum volume of contracts that you may purchase in any given trading day.'\n                                                    )}\n                                                />\n                                            )}\n                                        >\n                                            <Localize i18n_default_text='Maximum daily turnover' />\n                                        </AccountLimitsTableHeader>\n                                        <AccountLimitsTableHeader align='right'>\n                                            <Localize i18n_default_text='Limit' />\n                                        </AccountLimitsTableHeader>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    <AccountLimitsTurnoverLimitRow collection={commodities} />\n                                    <AccountLimitsTurnoverLimitRow collection={forex_ordered} />\n                                    <AccountLimitsTurnoverLimitRow collection={indices} />\n                                    <AccountLimitsTurnoverLimitRow collection={derived_ordered} />\n                                </tbody>\n                            </table>\n                            {/* We only show \"Withdrawal Limits\" on account-wide settings pages. */}\n                            {!is_app_settings && (\n                                <React.Fragment>\n                                    <table className='da-account-limits__table' data-testid='withdrawal_limits_table'>\n                                        <thead>\n                                            <tr>\n                                                <AccountLimitsTableHeader>\n                                                    <Localize i18n_default_text='Withdrawal limits' />\n                                                </AccountLimitsTableHeader>\n                                                {is_fully_authenticated && (\n                                                    <AccountLimitsTableHeader align='right'>\n                                                        <Localize i18n_default_text='Limit' />\n                                                    </AccountLimitsTableHeader>\n                                                )}\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {is_fully_authenticated ? (\n                                                <tr>\n                                                    <AccountLimitsTableCell>\n                                                        <React.Fragment>\n                                                            <Text size='xxs' color='prominent'>\n                                                                {localize(\n                                                                    'Your account is fully authenticated and your withdrawal limits have been lifted.'\n                                                                )}\n                                                            </Text>\n                                                        </React.Fragment>\n                                                    </AccountLimitsTableCell>\n                                                    <AccountLimitsTableCell />\n                                                </tr>\n                                            ) : (\n                                                <React.Fragment>\n                                                    <tr>\n                                                        <AccountLimitsTableCell>\n                                                            {is_appstore ? (\n                                                                <Localize i18n_default_text='Total withdrawal limit' />\n                                                            ) : (\n                                                                <Localize i18n_default_text='Total withdrawal allowed' />\n                                                            )}\n                                                            {is_appstore && !is_fully_authenticated && (\n                                                                <React.Fragment>\n                                                                    <Text\n                                                                        size={isMobile() ? 'xxxs' : 'xxs'}\n                                                                        className='account-management-table__verify'\n                                                                        color='less-prominent'\n                                                                        line_height='xs'\n                                                                    >\n                                                                        {localize(\n                                                                            'To increase limit please verify your identity'\n                                                                        )}\n                                                                    </Text>\n                                                                    <ButtonLink\n                                                                        to='/account/proof-of-identity'\n                                                                        size='small'\n                                                                        className='account-management-table__verify-button'\n                                                                    >\n                                                                        <Text\n                                                                            weight='bold'\n                                                                            color='colored-background'\n                                                                            size={isMobile() ? 'xxxs' : 'xxs'}\n                                                                        >\n                                                                            {localize('Verify')}\n                                                                        </Text>\n                                                                    </ButtonLink>\n                                                                </React.Fragment>\n                                                            )}\n                                                        </AccountLimitsTableCell>\n                                                        <AccountLimitsTableCell align='right'>\n                                                            {formatMoney(currency, num_of_days_limit, true)}\n                                                        </AccountLimitsTableCell>\n                                                    </tr>\n                                                    <tr>\n                                                        <AccountLimitsTableCell>\n                                                            <Localize i18n_default_text='Total withdrawn' />\n                                                        </AccountLimitsTableCell>\n                                                        <AccountLimitsTableCell align='right'>\n                                                            {formatMoney(\n                                                                currency,\n                                                                withdrawal_since_inception_monetary,\n                                                                true\n                                                            )}\n                                                        </AccountLimitsTableCell>\n                                                    </tr>\n                                                    <tr>\n                                                        <AccountLimitsTableCell>\n                                                            <Localize i18n_default_text='Maximum withdrawal remaining' />\n                                                        </AccountLimitsTableCell>\n                                                        <AccountLimitsTableCell align='right'>\n                                                            {formatMoney(currency, remainder, true)}\n                                                        </AccountLimitsTableCell>\n                                                    </tr>\n                                                </React.Fragment>\n                                            )}\n                                        </tbody>\n                                    </table>\n                                    {(!is_appstore || isMobile()) && (\n                                        <div className='da-account-limits__text-container'>\n                                            <Text as='p' size='xxs' color='less-prominent' line_height='xs'>\n                                                {is_fully_authenticated ? (\n                                                    <Localize i18n_default_text='Your account is fully authenticated and your withdrawal limits have been lifted.' />\n                                                ) : (\n                                                    <Localize i18n_default_text='Stated limits are subject to change without prior notice.' />\n                                                )}\n                                            </Text>\n                                        </div>\n                                    )}\n                                </React.Fragment>\n                            )}\n                        </ThemedScrollbars>\n                    </div>\n                    {should_show_article && isDesktop() && <AccountLimitsArticle />}\n                    {footer_ref && <AccountLimitsFooter />}\n                    {is_overlay_shown && overlay_ref && <AccountLimitsOverlay />}\n                </div>\n            </section>\n        </AccountLimitsContext.Provider>\n    );\n};\n\nexport default AccountLimits;\n","import AccountLimits from './account-limits';\n\nexport default AccountLimits;\n"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__deriv_components__","__WEBPACK_EXTERNAL_MODULE__deriv_shared__","__WEBPACK_EXTERNAL_MODULE__deriv_translations__","__WEBPACK_EXTERNAL_MODULE_mobx_react__","__WEBPACK_EXTERNAL_MODULE_react__","__WEBPACK_EXTERNAL_MODULE_react_dom__","connect","client","ui","has_real_account","has_any_real_account","toggleAccountsDialog","toggleShouldShowRealAccountsList","has_button","icon","message","is_appstore","React","PlatformContext","className","classNames","Icon","size","Text","as","color","isMobile","line_height","weight","Button","primary","onClick","localize","has_demo_icon","children","full_width","text","Div100vhContainer","is_disabled","isDesktop","height_offset","align","error_message","MobxContent","propsToSelectFn","Component","BaseComponent","own_props","store","ObservedComponent","prototype","isReactComponent","isClassComponent","props","useObserver","displayName","name","injectStorePropsToComponent","hasOwn","hasOwnProperty","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","includes","key","call","join","default","ReactPropTypesSecret","emptyFunction","emptyFunctionWithReset","resetWarningCache","shim","propName","componentName","location","propFullName","secret","err","Error","getShim","isRequired","ReactPropTypes","array","bigint","bool","func","number","object","string","symbol","any","arrayOf","element","elementType","instanceOf","node","objectOf","oneOf","oneOfType","shape","exact","checkPropTypes","PropTypes","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","obj","prop","title","descriptions","onClickLearnMore","has_descriptions","has_single_description","map","description","idx","component","Localize","i18n_default_text","AccountLimitsArticle","is_from_derivgo","components","StaticUrl","href","propTypes","currency","overlay_ref","document","createElement","Popover","data_testid","alignment","is_bubble_hover_enabled","zIndex","AccountLimitsContext","footer_ref","toggleOverlay","createPortal","current","Popup","done_text","is_hint","level","renderExtraInfo","text_size","collection","turnover_limit","formatMoney","account_limits","getLimits","is_app_settings","is_fully_authenticated","is_switching","is_virtual","setIsPopupOverlayShown","setIsOverlayShown","should_bypass_scrollbars","should_show_article","isMounted","useIsMounted","is_loading","setLoading","is_overlay_shown","then","Loading","is_fullscreen","api_initial_load_error","open_positions","account_balance","payout","market_specific","num_of_days_limit","remainder","withdrawal_since_inception_monetary","commodities","forex","indices","synthetic_index","forex_ordered","slice","sort","b","derived_ordered","context_value","value","ThemedScrollbars","is_bypassed","ButtonLink","to"],"sourceRoot":""}