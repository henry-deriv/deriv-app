{"version":3,"file":"trader/js/trader.screen-small.063ea5d11f675cd46ba1.js","mappings":"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","sources":["webpack://@deriv/trader/./src/Modules/Trading/Containers/allow-equals.jsx","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/preview-proposal.js","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/amount-mobile.jsx","webpack://@deriv/trader/./src/Modules/Trading/Containers/Multiplier/multiplier-amount-modal.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/RadioGroupWithInfoMobile/radio-group-with-info-mobile.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/RadioGroupWithInfoMobile/index.js","webpack://@deriv/trader/./src/Modules/Trading/Containers/Multiplier/multiplier-options.jsx","webpack://@deriv/trader/./src/Modules/Trading/Containers/radio-group-options-modal.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Multiplier/expiration-modal.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Multiplier/widgets.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Accumulator/accumulators-amount-mobile.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Duration/duration-mobile.jsx","webpack://@deriv/trader/./src/Modules/Trading/Containers/trade-params-mobile.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Elements/mobile-widget.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Elements/Multiplier/cancel-deal-mobile.jsx","webpack://@deriv/trader/./src/Modules/Trading/Containers/Multiplier/risk-management-dialog.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Elements/Multiplier/risk-management-info.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/screen-small.jsx"],"sourcesContent":["import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer } from '@deriv/stores';\nimport React from 'react';\nimport { Checkbox, Text } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\n\nconst AllowEquals = ({ onChange, is_allow_equal, has_equals_only, className }) => {\n    const handleOnChange = e => {\n        e.persist();\n        const { name, checked } = e.target;\n        onChange({ target: { name, value: Number(checked) } });\n    };\n\n    return (\n        <div className={classNames('allow-equals', 'mobile-widget', className)}>\n            <Checkbox\n                label={localize('Equals')}\n                value={is_allow_equal}\n                name='is_equal'\n                onChange={handleOnChange}\n                disabled={has_equals_only}\n            />\n            <Text as='p' size='xxxs'>\n                <Localize i18n_default_text='Win payout if exit spot is also equal to entry spot.' />\n            </Text>\n        </div>\n    );\n};\n\nAllowEquals.propTypes = {\n    className: PropTypes.string,\n    is_allow_equal: PropTypes.bool,\n    has_equals_only: PropTypes.bool,\n    onChange: PropTypes.func,\n};\n\nexport default observer(() => {\n    const { is_equal, has_equals_only, onChange } = useTraderStore();\n    const allow_equals_props = {\n        is_allow_equal: !!is_equal,\n        has_equals_only,\n        onChange,\n    };\n    return <AllowEquals {...allow_equals_props} />;\n});\n","import debounce from 'lodash.debounce';\nimport { isEmptyObject, WS } from '@deriv/shared';\nimport { createProposalRequests } from './proposal';\n\nexport const requestPreviewProposal = debounce((store, override = {}, onProposalResponse) => {\n    const new_store = { ...store, ...override };\n    const requests = createProposalRequests(new_store);\n    const subscription_map = {};\n\n    const onResponse = response => {\n        if (response.error) return;\n\n        subscription_map[response.subscription.id] = true;\n        onProposalResponse(response);\n    };\n\n    if (!isEmptyObject(requests)) {\n        const proposal_requests = requests;\n\n        Object.keys(proposal_requests).forEach(type => {\n            WS.subscribeProposal(proposal_requests[type], onResponse);\n        });\n    }\n\n    return () => {\n        Object.keys(subscription_map).forEach(id => {\n            WS.forget(id);\n            delete subscription_map[id];\n        });\n    };\n}, 700);\n","import { Localize, localize } from '@deriv/translations';\nimport { Money, Numpad, Tabs, Text } from '@deriv/components';\nimport { getDecimalPlaces, isEmptyObject } from '@deriv/shared';\n\nimport React from 'react';\nimport classNames from 'classnames';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst Basis = observer(\n    ({\n        basis,\n        duration_unit,\n        duration_value,\n        toggleModal,\n        has_duration_error,\n        selected_basis,\n        setSelectedAmount,\n        setAmountError,\n    }) => {\n        const { ui, client } = useStore();\n        const { addToast, vanilla_trade_type } = ui;\n        const { currency } = client;\n        const {\n            onChangeMultiple,\n            trade_amount,\n            trade_basis,\n            trade_duration_unit,\n            trade_duration,\n            contract_type,\n            stake_boundary,\n        } = useTraderStore();\n        const user_currency_decimal_places = getDecimalPlaces(currency);\n        const onNumberChange = num => {\n            setSelectedAmount(basis, num);\n            validateAmount(num);\n        };\n        const formatAmount = value =>\n            !isNaN(value) && value !== '' ? Number(value).toFixed(user_currency_decimal_places) : value;\n        const setBasisAndAmount = amount => {\n            const on_change_obj = {};\n\n            // Check for any duration changes in Duration trade params Tab before sending onChange object\n            if (duration_unit !== trade_duration_unit && !has_duration_error)\n                on_change_obj.duration_unit = duration_unit;\n            if (duration_value !== trade_duration && !has_duration_error) on_change_obj.duration = duration_value;\n\n            if (amount !== trade_amount || basis !== trade_basis) {\n                on_change_obj.basis = basis;\n                on_change_obj.amount = amount;\n            }\n\n            if (!isEmptyObject(on_change_obj)) onChangeMultiple(on_change_obj);\n            toggleModal();\n        };\n        const zero_decimals = Number('0').toFixed(getDecimalPlaces(currency));\n        const min_amount = parseFloat(zero_decimals.toString().replace(/.$/, '1'));\n\n        const validateAmount = value => {\n            const localized_message = <Localize i18n_default_text='Should not be 0 or empty' />;\n            const selected_value = parseFloat(value.toString());\n\n            if (value.toString() === '0.' || selected_value === 0) {\n                addToast({ key: 'amount_error', content: localized_message, type: 'error', timeout: 2000 });\n                setAmountError(true);\n                return 'error';\n            } else if (isNaN(selected_value) || selected_value < min_amount || value.toString().length < 1) {\n                addToast({ key: 'amount_error', content: localized_message, type: 'error', timeout: 2000 });\n                setAmountError(true);\n                return false;\n            }\n            setAmountError(false);\n            return true;\n        };\n\n        return (\n            <div className='trade-params__strike'>\n                {contract_type === 'vanilla' && (\n                    <section className='trade-container__stake-field'>\n                        <div className='trade-container__stake-field--min'>\n                            <Text size='xxs'>{localize('Min. stake')}</Text>\n                            <Text size='xxs'>\n                                {stake_boundary[vanilla_trade_type].min_stake} {currency}\n                            </Text>\n                        </div>\n                        <div className='trade-container__stake-field--max'>\n                            <Text size='xxs'>{localize('Max. stake')}</Text>\n                            <Text size='xxs'>\n                                {stake_boundary[vanilla_trade_type].max_stake} {currency}\n                            </Text>\n                        </div>\n                    </section>\n                )}\n                <div\n                    className={classNames('trade-params__amount-keypad', { strike__pos: contract_type === 'vanilla' })}\n                >\n                    <Numpad\n                        value={selected_basis}\n                        format={formatAmount}\n                        onSubmit={setBasisAndAmount}\n                        currency={currency}\n                        min={min_amount}\n                        is_currency\n                        render={({ value: v, className }) => {\n                            return (\n                                <div className={className}>\n                                    {parseFloat(v) > 0 ? (\n                                        <Money currency={currency} amount={v} should_format={false} />\n                                    ) : (\n                                        v\n                                    )}\n                                </div>\n                            );\n                        }}\n                        reset_press_interval={450}\n                        reset_value=''\n                        pip_size={user_currency_decimal_places}\n                        onValidate={validateAmount}\n                        submit_label={localize('OK')}\n                        onValueChange={onNumberChange}\n                    />\n                </div>\n            </div>\n        );\n    }\n);\n\nconst Amount = observer(\n    ({\n        toggleModal,\n        duration_value,\n        duration_unit,\n        has_duration_error,\n        amount_tab_idx,\n        setAmountError,\n        setAmountTabIdx,\n        setSelectedAmount,\n        stake_value,\n        payout_value,\n    }) => {\n        const { basis, basis_list } = useTraderStore();\n        const has_selected_tab_idx = typeof amount_tab_idx !== 'undefined';\n        const active_index = has_selected_tab_idx ? amount_tab_idx : basis_list.findIndex(b => b.value === basis);\n\n        if (basis_list.length === 1) {\n            return (\n                <Basis\n                    toggleModal={toggleModal}\n                    duration_value={duration_value}\n                    duration_unit={duration_unit}\n                    has_duration_error={has_duration_error}\n                    basis={basis_list[0].value}\n                    setAmountError={setAmountError}\n                    selected_basis={basis_list[0].value === 'stake' ? stake_value : payout_value}\n                    setSelectedAmount={setSelectedAmount}\n                />\n            );\n        }\n\n        return (\n            <div>\n                <Tabs active_index={active_index} onTabItemClick={setAmountTabIdx} top>\n                    {basis_list.map(basis_option => {\n                        switch (basis_option.value) {\n                            case 'stake':\n                                return (\n                                    <div label={basis_option.text} key={basis_option.value}>\n                                        <Basis\n                                            toggleModal={toggleModal}\n                                            duration_value={duration_value}\n                                            duration_unit={duration_unit}\n                                            has_duration_error={has_duration_error}\n                                            basis={basis_option.value}\n                                            setAmountError={setAmountError}\n                                            selected_basis={stake_value}\n                                            setSelectedAmount={setSelectedAmount}\n                                        />\n                                    </div>\n                                );\n                            case 'payout':\n                                return (\n                                    <div label={basis_option.text} key={basis_option.value}>\n                                        <Basis\n                                            toggleModal={toggleModal}\n                                            duration_value={duration_value}\n                                            duration_unit={duration_unit}\n                                            has_duration_error={has_duration_error}\n                                            basis={basis_option.value}\n                                            setAmountError={setAmountError}\n                                            selected_basis={payout_value}\n                                            setSelectedAmount={setSelectedAmount}\n                                        />\n                                    </div>\n                                );\n                            default:\n                                return null;\n                        }\n                    })}\n                </Tabs>\n            </div>\n        );\n    }\n);\n\nexport default Amount;\n","import React from 'react';\nimport { Div100vhContainer, Modal, Money, Popover, usePreventIOSZoom } from '@deriv/components';\nimport { useIsMounted, WS } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\nimport { requestPreviewProposal } from 'Stores/Modules/Trading/Helpers/preview-proposal';\nimport AmountMobile from 'Modules/Trading/Components/Form/TradeParams/amount-mobile.jsx';\nimport MultipliersInfo from 'Modules/Trading/Components/Form/TradeParams/Multiplier/info.jsx';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst MultiplierAmountModal = observer(({ is_open, toggleModal }) => {\n    // Fix to prevent iOS from zooming in erratically on quick taps\n    usePreventIOSZoom();\n    const {\n        ui: { enableApp, disableApp },\n    } = useStore();\n\n    return (\n        <React.Fragment>\n            <Modal\n                id='dt_trade_parameters_mobile'\n                className='trade-params'\n                enableApp={enableApp}\n                is_open={is_open}\n                is_title_centered\n                should_header_stick_body={false}\n                disableApp={disableApp}\n                toggleModal={toggleModal}\n                height='auto'\n                width='calc(100vw - 32px)'\n                title={localize('Stake')}\n            >\n                <Div100vhContainer className='mobile-widget-dialog__wrapper' max_autoheight_offset='48px'>\n                    <TradeParamsMobile toggleModal={toggleModal} />\n                </Div100vhContainer>\n            </Modal>\n        </React.Fragment>\n    );\n});\n\nexport default MultiplierAmountModal;\n\nconst TradeParamsMobile = observer(({ toggleModal }) => {\n    const { amount, currency, trade_stop_out, trade_store } = useTraderStore();\n\n    const [stake_value, setStakeValue] = React.useState(amount);\n    const [commission, setCommission] = React.useState(null);\n    const [stop_out, setStopOut] = React.useState(null);\n    const stake_ref = React.useRef(amount);\n    const isMounted = useIsMounted();\n\n    React.useEffect(() => {\n        if (stake_value === amount) return undefined;\n\n        const onProposalResponse = response => {\n            const { proposal, echo_req, subscription } = response;\n            if (\n                isMounted() &&\n                proposal &&\n                echo_req.contract_type === 'MULTUP' &&\n                Number(echo_req.amount) === Number(stake_ref.current)\n            ) {\n                setCommission(proposal.commission);\n                setStopOut(proposal.limit_order?.stop_out?.order_amount);\n            } else if (subscription?.id) {\n                WS.forget(subscription.id);\n            }\n        };\n        const dispose = requestPreviewProposal(trade_store, { amount: stake_value }, onProposalResponse);\n\n        return () => {\n            dispose?.();\n        };\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [stake_value]);\n\n    const setSelectedAmount = (basis, stake) => {\n        setStakeValue(stake);\n        stake_ref.current = stake;\n    };\n\n    return (\n        <React.Fragment>\n            <div className='trade-params__multiplier-ic-info-wrapper'>\n                <Popover\n                    alignment='right'\n                    icon='info'\n                    id='dt_multiplier-stake__tooltip'\n                    zIndex={9999}\n                    is_bubble_hover_enabled\n                    message={\n                        <Localize\n                            i18n_default_text='To ensure your loss does not exceed your stake, your contract will be closed automatically when your loss equals to <0/>.'\n                            components={[\n                                <Money key={0} amount={stop_out || trade_stop_out} currency={currency} show_currency />,\n                            ]}\n                        />\n                    }\n                />\n            </div>\n            <AmountMobile\n                toggleModal={toggleModal}\n                amount_tab_idx={0}\n                setSelectedAmount={setSelectedAmount}\n                setAmountError={() => {}}\n                stake_value={stake_value}\n            />\n            <MultipliersInfo\n                className='trade-params__multiplier-trade-info'\n                should_show_tooltip\n                commission={commission}\n                stop_out={stop_out}\n                amount={stake_value}\n            />\n        </React.Fragment>\n    );\n});\n","import React from 'react';\nimport { RadioGroup, Popover } from '@deriv/components';\n\nconst RadioGroupWithInfoMobile = ({\n    items_list,\n    contract_name,\n    current_value_object,\n    onChange,\n    info,\n    is_tooltip_disabled = false,\n    popover_alignment = 'right',\n    toggleModal,\n}) => {\n    const onValueChange = e => {\n        onChange({\n            target: {\n                name: current_value_object.name,\n                value: Number(e.target.value),\n            },\n        });\n        toggleModal();\n    };\n\n    return (\n        <>\n            <div className={`trade-params__${contract_name}-ic-info-wrapper`}>\n                <Popover\n                    alignment={popover_alignment}\n                    disable_target_icon={is_tooltip_disabled}\n                    icon='info'\n                    id={`dt_${contract_name}-stake__tooltip`}\n                    is_bubble_hover_enabled\n                    zIndex={9999}\n                    message={info}\n                />\n            </div>\n            <RadioGroup\n                className={`trade-params__${contract_name}-radio-group`}\n                name={`trade-params__${contract_name}-radio`}\n                selected={!Number.isNaN(current_value_object.value) ? current_value_object.value?.toString() : ''}\n                onToggle={onValueChange}\n            >\n                {items_list.map(({ text, value }) => (\n                    <RadioGroup.Item key={value} id={text} label={text} value={value?.toString()} />\n                ))}\n            </RadioGroup>\n        </>\n    );\n};\n\nexport default RadioGroupWithInfoMobile;\n","import RadioGroupWithInfoMobile from './radio-group-with-info-mobile.jsx';\n\nexport default RadioGroupWithInfoMobile;\n","import React from 'react';\nimport MultipliersInfo from 'Modules/Trading/Components/Form/TradeParams/Multiplier/info.jsx';\nimport RadioGroupWithInfoMobile from 'Modules/Trading/Components/Form/RadioGroupWithInfoMobile';\nimport { requestPreviewProposal } from 'Stores/Modules/Trading/Helpers/preview-proposal';\nimport { localize } from '@deriv/translations';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { useIsMounted, WS } from '@deriv/shared';\n\nconst MultiplierOptions = observer(() => {\n    const { amount, multiplier, multiplier_range_list, onChange, toggleModal, trade_store } = useTraderStore();\n\n    const [commission, setCommission] = React.useState(null);\n    const [stop_out, setStopOut] = React.useState(null);\n    const isMounted = useIsMounted();\n\n    React.useEffect(() => {\n        if (!amount) return undefined;\n\n        const onProposalResponse = ({ echo_req, proposal, subscription }) => {\n            if (isMounted() && proposal && echo_req.contract_type === 'MULTUP' && Number(echo_req.amount) === amount) {\n                setCommission(proposal.commission);\n                setStopOut(proposal.limit_order?.stop_out?.order_amount);\n            } else if (subscription?.id) {\n                WS.forget(subscription.id);\n            }\n        };\n        const dispose = requestPreviewProposal(trade_store, { amount }, onProposalResponse);\n\n        return () => {\n            dispose?.();\n        };\n\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [amount]);\n\n    return (\n        <React.Fragment>\n            <RadioGroupWithInfoMobile\n                contract_name='multiplier'\n                current_value_object={{ name: 'multiplier', value: multiplier }}\n                info={localize(\n                    'Your gross profit is the percentage change in market price times your stake and the multiplier chosen here.'\n                )}\n                items_list={multiplier_range_list}\n                onChange={onChange}\n                toggleModal={toggleModal}\n            />\n            <MultipliersInfo\n                className='trade-params__multiplier-trade-info'\n                should_show_tooltip\n                commission={commission}\n                stop_out={stop_out}\n                amount={amount}\n            />\n        </React.Fragment>\n    );\n});\n\nexport default MultiplierOptions;\n","import React from 'react';\nimport { Div100vhContainer, Modal, usePreventIOSZoom } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { getGrowthRatePercentage, getTickSizeBarrierPercentage, isEmptyObject } from '@deriv/shared';\nimport MultiplierOptions from 'Modules/Trading/Containers/Multiplier/multiplier-options.jsx';\nimport RadioGroupWithInfoMobile from 'Modules/Trading/Components/Form/RadioGroupWithInfoMobile';\nimport { observer, useStore } from '@deriv/stores';\n\nconst RadioGroupOptionsModal = observer(({ is_open, modal_title, toggleModal }) => {\n    const { accumulator_range_list, growth_rate, onChange, tick_size_barrier, proposal_info } = useTraderStore();\n    const {\n        ui: { enableApp, disableApp },\n    } = useStore();\n\n    // Fix to prevent iOS from zooming in erratically on quick taps\n    usePreventIOSZoom();\n    const has_error_or_not_loaded =\n        proposal_info?.ACCU?.has_error || !proposal_info?.ACCU?.id || isEmptyObject(proposal_info);\n\n    return (\n        <React.Fragment>\n            <Modal\n                id='dt_trade_parameters_mobile'\n                className='trade-params'\n                enableApp={enableApp}\n                is_open={is_open}\n                is_title_centered\n                should_header_stick_body={false}\n                disableApp={disableApp}\n                toggleModal={toggleModal}\n                height='auto'\n                width='calc(100vw - 32px)'\n                title={modal_title}\n            >\n                <Div100vhContainer className='mobile-widget-dialog__wrapper' max_autoheight_offset='48px'>\n                    {modal_title === localize('Multiplier') ? (\n                        <MultiplierOptions toggleModal={toggleModal} />\n                    ) : (\n                        <RadioGroupWithInfoMobile\n                            contract_name='accumulator'\n                            current_value_object={{ name: 'growth_rate', value: growth_rate }}\n                            info={localize(\n                                'Your stake will grow at {{growth_rate}}% per tick as long as the current spot price remains within ±{{tick_size_barrier}} from the previous spot price.',\n                                {\n                                    growth_rate: getGrowthRatePercentage(growth_rate),\n                                    tick_size_barrier: getTickSizeBarrierPercentage(tick_size_barrier),\n                                }\n                            )}\n                            is_tooltip_disabled={has_error_or_not_loaded}\n                            items_list={accumulator_range_list.map(value => ({\n                                text: `${getGrowthRatePercentage(value)}%`,\n                                value,\n                            }))}\n                            onChange={onChange}\n                            popover_alignment='bottom'\n                            toggleModal={toggleModal}\n                        />\n                    )}\n                </Div100vhContainer>\n            </Modal>\n        </React.Fragment>\n    );\n});\n\nexport default RadioGroupOptionsModal;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Div100vhContainer, Modal, Text } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport Expiration from './expiration.jsx';\nimport { observer, useStore } from '@deriv/stores';\n\nconst MultipliersExpirationModal = observer(({ is_open, toggleModal }) => {\n    const { ui } = useStore();\n    const { enableApp, disableApp } = ui;\n    return (\n        <React.Fragment>\n            <Modal\n                enableApp={enableApp}\n                is_open={is_open}\n                disableApp={disableApp}\n                toggleModal={toggleModal}\n                has_close_icon={false}\n                should_header_stick_body={false}\n                height='auto'\n                width='calc(100vw - 3.2rem)'\n                title={localize('Expiration')}\n            >\n                <Div100vhContainer className='mobile-widget-dialog__wrapper' max_autoheight_offset='48px'>\n                    <div style={{ minHeight: '120px', padding: '1.6rem' }}>\n                        <Text size='xs' color='general'>\n                            <Localize\n                                i18n_default_text='Your contract will be closed automatically at the next available asset price on <0></0>.'\n                                components={[<Expiration key={0} is_text_only text_size='xs' />]}\n                            />\n                        </Text>\n                    </div>\n                    <Modal.Footer has_separator>\n                        <Button\n                            style={{ width: '100%', height: '4rem' }}\n                            large\n                            primary\n                            has_effect\n                            text={localize('OK')}\n                            onClick={toggleModal}\n                        />\n                    </Modal.Footer>\n                </Div100vhContainer>\n            </Modal>\n        </React.Fragment>\n    );\n});\n\nMultipliersExpirationModal.propTypes = {\n    is_open: PropTypes.bool,\n    toggleModal: PropTypes.func,\n};\n\nexport default MultipliersExpirationModal;\n","import React from 'react';\nimport { Money, Text } from '@deriv/components';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer } from '@deriv/stores';\nimport MultiplierAmountModal from 'Modules/Trading/Containers/Multiplier/multiplier-amount-modal.jsx';\nimport RadioGroupOptionsModal from 'Modules/Trading/Containers/radio-group-options-modal.jsx';\nimport MultipliersExpiration from 'Modules/Trading/Components/Form/TradeParams/Multiplier/expiration.jsx';\nimport MultipliersExpirationModal from 'Modules/Trading/Components/Form/TradeParams/Multiplier/expiration-modal.jsx';\nimport MultipliersInfo from 'Modules/Trading/Components/Form/TradeParams/Multiplier/info.jsx';\nimport { localize } from '@deriv/translations';\nimport { getGrowthRatePercentage } from '@deriv/shared';\n\nconst AmountWidget = ({ amount, currency, expiration, is_crypto_multiplier }) => {\n    const [is_open, setIsOpen] = React.useState(false);\n    const [is_expiration_modal_open, setIsExpirationModalOpen] = React.useState(false);\n\n    const toggleModal = () => {\n        setIsOpen(!is_open);\n    };\n\n    const toggleExpirationModal = () => {\n        setIsExpirationModalOpen(!is_expiration_modal_open);\n    };\n\n    return (\n        <React.Fragment>\n            <MultiplierAmountModal is_open={is_open} toggleModal={toggleModal} />\n            <div className='mobile-widget mobile-widget__multiplier' onClick={toggleModal}>\n                <div className='mobile-widget__multiplier-amount'>\n                    <div className='mobile-widget__item'>\n                        <Text weight='bold' size='xxs'>\n                            <Money amount={amount} currency={currency} show_currency />\n                        </Text>\n                    </div>\n                </div>\n                <MultipliersInfo\n                    className='mobile-widget__multiplier-trade-info'\n                    commission_text_size='xxxxs'\n                    stop_out_text_size='xxxxs'\n                />\n            </div>\n            {is_crypto_multiplier && (\n                <div className='mobile-widget' onClick={expiration ? toggleExpirationModal : null}>\n                    <div className='mobile-widget__multiplier-expiration'>\n                        <Text size='xxs'>{localize('Expires on')}</Text>\n                        <MultipliersExpiration is_text_only text_size='xxs' />\n                    </div>\n                    <MultipliersExpirationModal\n                        is_open={is_expiration_modal_open}\n                        toggleModal={toggleExpirationModal}\n                    />\n                </div>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport const MultiplierAmountWidget = observer(() => {\n    const { amount, expiration, currency, is_crypto_multiplier, multiplier } = useTraderStore();\n    const amount_widget_props = {\n        amount,\n        expiration,\n        currency,\n        is_crypto_multiplier,\n        multiplier,\n    };\n    return <AmountWidget {...amount_widget_props} />;\n});\n\nconst RadioGroupOptionsWidget = ({ displayed_trade_param, modal_title }) => {\n    const [is_open, setIsOpen] = React.useState(false);\n\n    const toggleModal = () => {\n        setIsOpen(!is_open);\n    };\n\n    return (\n        <React.Fragment>\n            <RadioGroupOptionsModal is_open={is_open} toggleModal={toggleModal} modal_title={modal_title} />\n            <div className='mobile-widget mobile-widget__multiplier-options' onClick={toggleModal}>\n                <div className='mobile-widget__item'>\n                    <span className='mobile-widget__item-value'>{displayed_trade_param}</span>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n};\n\nexport const MultiplierOptionsWidget = observer(() => {\n    const { multiplier } = useTraderStore();\n    const displayed_trade_param = `x${multiplier}`;\n    const modal_title = localize('Multiplier');\n    return <RadioGroupOptionsWidget displayed_trade_param={displayed_trade_param} modal_title={modal_title} />;\n});\n\nexport const AccumulatorOptionsWidget = observer(() => {\n    const { growth_rate } = useTraderStore();\n    const displayed_trade_param = `${getGrowthRatePercentage(growth_rate)}%`;\n    const modal_title = localize('Growth rate');\n    return <RadioGroupOptionsWidget displayed_trade_param={displayed_trade_param} modal_title={modal_title} />;\n});\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { AMOUNT_MAX_LENGTH, getDecimalPlaces } from '@deriv/shared';\nimport { MobileWrapper } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport LabeledQuantityInputMobile from '../../LabeledQuantityInputMobile';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst AccumulatorsAmountMobile = observer(({ is_nativepicker }) => {\n    const { ui, client } = useStore();\n    const { current_focus, setCurrentFocus } = ui;\n    const { is_single_currency } = client;\n    const { amount, currency, onChange } = useTraderStore();\n    return (\n        <>\n            <MobileWrapper>\n                <LabeledQuantityInputMobile\n                    input_label={localize('Stake')}\n                    className={classNames('trade-container__amount', 'trade-container__amount--accumulator')}\n                    classNameInlinePrefix='trade-container__currency'\n                    classNameInput={classNames('trade-container__input', 'trade-container__input--accumulator')}\n                    currency={currency}\n                    current_focus={current_focus}\n                    fractional_digits={getDecimalPlaces(currency)}\n                    id='dt_amount_input'\n                    inline_prefix={is_single_currency ? currency : null}\n                    is_autocomplete_disabled\n                    is_float\n                    is_hj_whitelisted\n                    is_incrementable\n                    is_nativepicker={is_nativepicker}\n                    is_negative_disabled\n                    max_length={AMOUNT_MAX_LENGTH}\n                    name='amount'\n                    onChange={onChange}\n                    type='tel'\n                    value={amount}\n                    ariaLabel={localize('Amount')}\n                    setCurrentFocus={setCurrentFocus}\n                />\n            </MobileWrapper>\n        </>\n    );\n});\n\nAccumulatorsAmountMobile.propTypes = {\n    is_nativepicker: PropTypes.bool,\n};\n\nexport default AccumulatorsAmountMobile;\n","import React from 'react';\nimport { Tabs, TickPicker, Numpad, RelativeDatepicker } from '@deriv/components';\nimport { isEmptyObject, addComma, getDurationMinMaxValues } from '@deriv/shared';\nimport { Localize, localize } from '@deriv/translations';\n\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst submit_label = localize('OK');\n\nconst updateAmountChanges = (obj, stake_value, payout_value, basis, trade_basis, trade_amount) => {\n    // TODO: Move onChangeMultiple outside of duration and amount\n    //  and unify all trade parameter components to use same onMultipleChange func onSubmit\n    // Checks if Amount tab was changed to stake and stake value was updated\n    if (basis === 'stake' && stake_value !== trade_amount) {\n        obj.basis = 'stake';\n        obj.amount = stake_value;\n        // Checks if Amount tab was changed to payout and payout value was updated\n    } else if (basis === 'payout' && payout_value !== trade_amount) {\n        obj.basis = 'payout';\n        obj.amount = payout_value;\n        // Checks if Amount tab was changed but payout or stake value was not updated\n    } else if (trade_basis !== basis) {\n        obj.basis = basis;\n        obj.amount = trade_amount;\n    }\n};\n\nconst Ticks = observer(\n    ({\n        setDurationError,\n        basis_option,\n        toggleModal,\n        has_amount_error,\n        payout_value,\n        stake_value,\n        selected_duration,\n        setSelectedDuration,\n    }) => {\n        const {\n            duration_min_max,\n            duration: trade_duration,\n            duration_unit: trade_duration_unit,\n            basis: trade_basis,\n            amount: trade_amount,\n            onChangeMultiple,\n        } = useTraderStore();\n        React.useEffect(() => {\n            setDurationError(false);\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, []);\n\n        const [min_tick, max_tick] = getDurationMinMaxValues(duration_min_max, 'tick', 't');\n\n        const setTickDuration = value => {\n            const { value: duration } = value.target;\n            const on_change_obj = {};\n\n            // check for any amount changes from Amount trade params tab before submitting onChange object\n            if (!has_amount_error)\n                updateAmountChanges(on_change_obj, stake_value, payout_value, basis_option, trade_basis, trade_amount);\n\n            if (trade_duration !== duration || trade_duration_unit !== 't') {\n                on_change_obj.duration_unit = 't';\n                on_change_obj.duration = duration;\n            }\n\n            if (!isEmptyObject(on_change_obj)) onChangeMultiple(on_change_obj);\n            toggleModal();\n        };\n\n        const onTickChange = tick => setSelectedDuration('t', tick);\n        const tick_duration = trade_duration < min_tick && selected_duration < min_tick ? min_tick : selected_duration;\n        return (\n            <div className='trade-params__duration-tickpicker'>\n                <TickPicker\n                    default_value={tick_duration}\n                    submit_label={submit_label}\n                    max_value={max_tick}\n                    min_value={min_tick}\n                    onSubmit={setTickDuration}\n                    onValueChange={onTickChange}\n                    singular_label={localize('Tick')}\n                    plural_label={localize('Ticks')}\n                />\n            </div>\n        );\n    }\n);\n\nconst Numbers = observer(\n    ({\n        setDurationError,\n        basis_option,\n        toggleModal,\n        duration_unit_option,\n        has_amount_error,\n        contract_expiry = 'intraday',\n        payout_value,\n        stake_value,\n        selected_duration,\n        setSelectedDuration,\n    }) => {\n        const { ui } = useStore();\n        const { addToast } = ui;\n        const {\n            duration_min_max,\n            duration: trade_duration,\n            duration_unit: trade_duration_unit,\n            basis: trade_basis,\n            amount: trade_amount,\n            onChangeMultiple,\n        } = useTraderStore();\n        const { value: duration_unit } = duration_unit_option;\n        const [min, max] = getDurationMinMaxValues(duration_min_max, contract_expiry, duration_unit);\n\n        const validateDuration = value => {\n            const localized_message = (\n                <Localize\n                    i18n_default_text='Should be between {{min}} and {{max}}'\n                    values={{\n                        min,\n                        max: addComma(max, 0, false),\n                    }}\n                />\n            );\n            if (parseInt(value) < min || parseInt(selected_duration) > max) {\n                addToast({ key: 'duration_error', content: localized_message, type: 'error', timeout: 2000 });\n                setDurationError(true);\n                return 'error';\n            } else if (parseInt(value) > max) {\n                addToast({ key: 'duration_error', content: localized_message, type: 'error', timeout: 2000 });\n                return 'error';\n            } else if (value.toString().length < 1) {\n                addToast({ key: 'duration_error', content: localized_message, type: 'error', timeout: 2000 });\n                setDurationError(true);\n                return false;\n            }\n\n            setDurationError(false);\n            return true;\n        };\n\n        const setDuration = duration => {\n            const on_change_obj = {};\n\n            // check for any amount changes from Amount trade params tab before submitting onChange object\n            if (!has_amount_error)\n                updateAmountChanges(on_change_obj, stake_value, payout_value, basis_option, trade_basis, trade_amount);\n\n            if (trade_duration !== duration || trade_duration_unit !== duration_unit) {\n                on_change_obj.duration_unit = duration_unit;\n                on_change_obj.duration = duration;\n                on_change_obj.expiry_type = 'duration';\n            }\n\n            if (!isEmptyObject(on_change_obj)) onChangeMultiple(on_change_obj);\n            toggleModal();\n        };\n\n        const onNumberChange = num => {\n            setSelectedDuration(duration_unit, num);\n            validateDuration(num);\n        };\n\n        return (\n            <div className='trade-params__amount-keypad'>\n                <Numpad\n                    value={selected_duration}\n                    onSubmit={setDuration}\n                    render={({ value: v, className }) => {\n                        return <div className={className}>{v}</div>;\n                    }}\n                    pip_size={0}\n                    submit_label={submit_label}\n                    min={min}\n                    max={max}\n                    reset_press_interval={350}\n                    reset_value=''\n                    onValidate={validateDuration}\n                    onValueChange={onNumberChange}\n                />\n            </div>\n        );\n    }\n);\n\nconst Duration = observer(\n    ({\n        amount_tab_idx,\n        toggleModal,\n        duration_tab_idx,\n        has_amount_error,\n        setDurationTabIdx,\n        setDurationError,\n        t_duration,\n        s_duration,\n        m_duration,\n        h_duration,\n        d_duration,\n        setSelectedDuration,\n        stake_value,\n        payout_value,\n    }) => {\n        const { duration_units_list, duration_min_max, duration_unit, basis: trade_basis } = useTraderStore();\n        const duration_values = {\n            t_duration,\n            s_duration,\n            m_duration,\n            h_duration,\n            d_duration,\n        };\n        const has_selected_tab_idx = typeof duration_tab_idx !== 'undefined';\n        const active_index = has_selected_tab_idx\n            ? duration_tab_idx\n            : duration_units_list.findIndex(d => d.value === duration_unit);\n        const [min, max] = getDurationMinMaxValues(duration_min_max, 'daily', 'd');\n        const handleRelativeChange = date => {\n            setSelectedDuration('d', date);\n        };\n        const selected_basis_option = () => {\n            if (amount_tab_idx === 0) {\n                return 'stake';\n            } else if (amount_tab_idx === 1) {\n                return 'payout';\n            }\n            return trade_basis;\n        };\n\n        const onTabChange = index => {\n            setDurationTabIdx(index);\n            const { value: unit } = duration_units_list[index];\n            setSelectedDuration(unit, duration_values[`${unit}_duration`]);\n        };\n\n        return (\n            <div>\n                <Tabs active_index={active_index} onTabItemClick={num => onTabChange(num)} single_tab_has_no_label top>\n                    {duration_units_list.map(duration_unit_option => {\n                        switch (duration_unit_option.value) {\n                            case 't':\n                                return (\n                                    <div label={duration_unit_option.text} key={duration_unit_option.value}>\n                                        <Ticks\n                                            basis_option={selected_basis_option()}\n                                            has_amount_error={has_amount_error}\n                                            toggleModal={toggleModal}\n                                            selected_duration={t_duration}\n                                            setDurationError={setDurationError}\n                                            setSelectedDuration={setSelectedDuration}\n                                            stake_value={stake_value}\n                                            payout_value={payout_value}\n                                        />\n                                    </div>\n                                );\n                            case 's':\n                                return (\n                                    <div label={duration_unit_option.text} key={duration_unit_option.value}>\n                                        <Numbers\n                                            basis_option={selected_basis_option()}\n                                            has_amount_error={has_amount_error}\n                                            toggleModal={toggleModal}\n                                            duration_unit_option={duration_unit_option}\n                                            selected_duration={s_duration}\n                                            setDurationError={setDurationError}\n                                            setSelectedDuration={setSelectedDuration}\n                                            stake_value={stake_value}\n                                            payout_value={payout_value}\n                                        />\n                                    </div>\n                                );\n                            case 'm':\n                                return (\n                                    <div label={duration_unit_option.text} key={duration_unit_option.value}>\n                                        <Numbers\n                                            basis_option={selected_basis_option()}\n                                            has_amount_error={has_amount_error}\n                                            toggleModal={toggleModal}\n                                            duration_unit_option={duration_unit_option}\n                                            selected_duration={m_duration}\n                                            setDurationError={setDurationError}\n                                            setSelectedDuration={setSelectedDuration}\n                                            stake_value={stake_value}\n                                            payout_value={payout_value}\n                                        />\n                                    </div>\n                                );\n                            case 'h':\n                                return (\n                                    <div label={duration_unit_option.text} key={duration_unit_option.value}>\n                                        <Numbers\n                                            basis_option={selected_basis_option()}\n                                            has_amount_error={has_amount_error}\n                                            toggleModal={toggleModal}\n                                            duration_unit_option={duration_unit_option}\n                                            selected_duration={h_duration}\n                                            setDurationError={setDurationError}\n                                            setSelectedDuration={setSelectedDuration}\n                                            stake_value={stake_value}\n                                            payout_value={payout_value}\n                                        />\n                                    </div>\n                                );\n                            case 'd':\n                                return (\n                                    <div label={duration_unit_option.text} key={duration_unit_option.value}>\n                                        <Numbers\n                                            basis_option={selected_basis_option()}\n                                            has_amount_error={has_amount_error}\n                                            toggleModal={toggleModal}\n                                            duration_unit_option={duration_unit_option}\n                                            contract_expiry='daily'\n                                            selected_duration={d_duration}\n                                            setDurationError={setDurationError}\n                                            setSelectedDuration={setSelectedDuration}\n                                            stake_value={stake_value}\n                                            payout_value={payout_value}\n                                        />\n                                        <RelativeDatepicker\n                                            onChange={handleRelativeChange}\n                                            min_date={min}\n                                            max_date={max}\n                                            title={localize('Pick an end date')}\n                                        />\n                                    </div>\n                                );\n                            default:\n                                return null;\n                        }\n                    })}\n                </Tabs>\n            </div>\n        );\n    }\n);\n\nexport default Duration;\n","import 'Sass/app/modules/trading-mobile.scss';\n\nimport { Div100vhContainer, Modal, Money, Tabs, ThemedScrollbars, usePreventIOSZoom, Popover } from '@deriv/components';\n\nimport AmountMobile from 'Modules/Trading/Components/Form/TradeParams/amount-mobile.jsx';\nimport Barrier from 'Modules/Trading/Components/Form/TradeParams/barrier.jsx';\nimport DurationMobile from 'Modules/Trading/Components/Form/TradeParams/Duration/duration-mobile.jsx';\nimport LastDigit from 'Modules/Trading/Components/Form/TradeParams/last-digit.jsx';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { localize, Localize } from '@deriv/translations';\n\nconst DEFAULT_DURATION = Object.freeze({\n    t: 5,\n    s: 15,\n    m: 3,\n    h: 1,\n    d: 1,\n});\n\nconst reducer = (state, payload) => {\n    return {\n        ...state,\n        ...payload,\n    };\n};\n\nconst makeGetDefaultDuration = (trade_duration, trade_duration_unit) => duration_unit =>\n    trade_duration_unit === duration_unit ? trade_duration : DEFAULT_DURATION[duration_unit];\n\nconst TradeParamsModal = observer(({ is_open, toggleModal }) => {\n    const { client, ui } = useStore();\n    const { currency } = client;\n    const { enableApp, disableApp } = ui;\n    const { amount, form_components, duration, duration_unit, duration_units_list, is_vanilla } = useTraderStore();\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    const getDefaultDuration = React.useCallback(makeGetDefaultDuration(duration, duration_unit), []);\n\n    const [state, dispatch] = React.useReducer(reducer, {\n        trade_param_tab_idx: 0,\n        duration_tab_idx: undefined,\n        amount_tab_idx: undefined,\n        has_amount_error: false,\n        has_duration_error: false,\n        // duration unit values\n        curr_duration_unit: duration_unit,\n        curr_duration_value: duration,\n        t_duration: getDefaultDuration('t'),\n        s_duration: getDefaultDuration('s'),\n        m_duration: getDefaultDuration('m'),\n        h_duration: getDefaultDuration('h'),\n        d_duration: getDefaultDuration('d'),\n        // amount values\n        stake_value: amount,\n        payout_value: amount,\n    });\n\n    usePreventIOSZoom();\n\n    React.useEffect(() => {\n        setSelectedDuration(duration_unit, duration);\n        setDurationTabIdx(undefined);\n        // duration and duration_unit can be changed in trade-store when contract type is changed\n    }, [duration, duration_unit]);\n\n    const setTradeParamTabIdx = trade_param_tab_idx => dispatch({ trade_param_tab_idx });\n\n    const setDurationTabIdx = duration_tab_idx => dispatch({ duration_tab_idx });\n\n    const setAmountTabIdx = amount_tab_idx => dispatch({ amount_tab_idx });\n\n    const setSelectedAmount = (basis, selected_basis_value) => dispatch({ [`${basis}_value`]: selected_basis_value });\n\n    const setSelectedDuration = (selected_duration_unit, selected_duration) => {\n        dispatch({\n            [`${selected_duration_unit}_duration`]: selected_duration,\n            curr_duration_unit: selected_duration_unit,\n            curr_duration_value: selected_duration,\n        });\n    };\n\n    const setAmountError = has_error => {\n        dispatch({ has_amount_error: has_error });\n    };\n    const setDurationError = has_error => {\n        dispatch({ has_duration_error: has_error });\n    };\n\n    const isVisible = component_key => form_components.includes(component_key);\n\n    const setTooltipContent = () => {\n        if (is_vanilla && state.trade_param_tab_idx === 1)\n            return (\n                <div className='trade-params__vanilla-ic-info-wrapper'>\n                    <Popover\n                        alignment='bottom'\n                        icon='info'\n                        id='dt_vanilla-stake__tooltip'\n                        zIndex={9999}\n                        is_bubble_hover_enabled\n                        arrow_styles={{ top: '-9px' }}\n                        message={\n                            <Localize i18n_default_text='Your stake is a non-refundable one-time premium to purchase this contract. Your total profit/loss equals the contract value minus your stake.' />\n                        }\n                        classNameWrapper='trade-params--modal-wrapper'\n                        classNameBubble='trade-params--modal-wrapper__content--vanilla'\n                    />\n                </div>\n            );\n        return null;\n    };\n\n    return (\n        <React.Fragment>\n            <Modal\n                id='dt_trade_parameters_mobile'\n                className='trade-params'\n                enableApp={enableApp}\n                is_open={is_open}\n                header={<div />}\n                disableApp={disableApp}\n                toggleModal={toggleModal}\n                height='auto'\n                width='calc(100vw - 32px)'\n                renderTitle={setTooltipContent}\n            >\n                <ThemedScrollbars>\n                    <Div100vhContainer className='mobile-widget-dialog__wrapper' max_autoheight_offset='120px'>\n                        <TradeParamsMobile\n                            currency={currency}\n                            toggleModal={toggleModal}\n                            isVisible={isVisible}\n                            setTradeParamTabIdx={setTradeParamTabIdx}\n                            trade_param_tab_idx={state.trade_param_tab_idx}\n                            setDurationTabIdx={setDurationTabIdx}\n                            duration_tab_idx={state.duration_tab_idx}\n                            setAmountTabIdx={setAmountTabIdx}\n                            amount_tab_idx={state.amount_tab_idx}\n                            // amount\n                            setSelectedAmount={setSelectedAmount}\n                            stake_value={state.stake_value}\n                            payout_value={state.payout_value}\n                            duration_unit={state.curr_duration_unit}\n                            duration_value={state.curr_duration_value}\n                            duration_units_list={duration_units_list}\n                            has_amount_error={state.has_amount_error}\n                            setAmountError={setAmountError}\n                            // duration\n                            setSelectedDuration={setSelectedDuration}\n                            has_duration_error={state.has_duration_error}\n                            setDurationError={setDurationError}\n                            t_duration={state.t_duration}\n                            s_duration={state.s_duration}\n                            m_duration={state.m_duration}\n                            h_duration={state.h_duration}\n                            d_duration={state.d_duration}\n                        />\n                    </Div100vhContainer>\n                </ThemedScrollbars>\n            </Modal>\n        </React.Fragment>\n    );\n});\n\nexport default TradeParamsModal;\n\nconst TradeParamsMobile = observer(\n    ({\n        currency,\n        toggleModal,\n        isVisible,\n        setAmountTabIdx,\n        amount_tab_idx,\n        setTradeParamTabIdx,\n        trade_param_tab_idx,\n        setDurationTabIdx,\n        duration_unit,\n        duration_units_list,\n        duration_value,\n        duration_tab_idx,\n        has_amount_error,\n        has_duration_error,\n        // amount\n        setAmountError,\n        setSelectedAmount,\n        stake_value,\n        payout_value,\n        // duration\n        setDurationError,\n        setSelectedDuration,\n        t_duration,\n        s_duration,\n        m_duration,\n        h_duration,\n        d_duration,\n    }) => {\n        const { basis_list, basis, is_vanilla } = useTraderStore();\n        const getDurationText = () => {\n            const duration = duration_units_list.find(d => d.value === duration_unit);\n            return `${duration_value} ${\n                duration && (duration_value > 1 ? localize(duration.text) : localize(duration.text.slice(0, -1)))\n            }`;\n        };\n\n        const getAmountText = () => {\n            const has_selected_tab_idx = typeof amount_tab_idx !== 'undefined';\n            const active_index = has_selected_tab_idx ? amount_tab_idx : basis_list.findIndex(b => b.value === basis);\n\n            return <Money currency={currency} show_currency amount={active_index === 1 ? payout_value : stake_value} />;\n        };\n\n        const getHeaderContent = tab_key => {\n            switch (tab_key) {\n                case 'duration':\n                    return (\n                        <div className='trade-params__header'>\n                            <div className='trade-params__header-label'>{localize('Duration')}</div>\n                            <div\n                                className={classNames('trade-params__header-value', {\n                                    'trade-params__header-value--has-error': has_duration_error,\n                                })}\n                            >\n                                {has_duration_error ? localize('Error') : getDurationText()}\n                            </div>\n                        </div>\n                    );\n                case 'amount':\n                    return (\n                        <div className='trade-params__header'>\n                            <div className='trade-params__header-label'>\n                                {is_vanilla ? localize('Stake') : localize('Amount')}\n                            </div>\n                            <div\n                                className={classNames('trade-params__header-value', {\n                                    'trade-params__header-value--has-error': has_amount_error,\n                                })}\n                            >\n                                {has_amount_error ? localize('Error') : getAmountText()}\n                            </div>\n                        </div>\n                    );\n                default:\n                    return null;\n            }\n        };\n        return (\n            <Tabs\n                active_index={trade_param_tab_idx}\n                className='trade-params-duration-amount'\n                onTabItemClick={setTradeParamTabIdx}\n                top\n            >\n                {isVisible('duration') && (\n                    <div data-header-content={getHeaderContent('duration')}>\n                        <DurationMobile\n                            toggleModal={toggleModal}\n                            amount_tab_idx={amount_tab_idx}\n                            duration_tab_idx={duration_tab_idx}\n                            setDurationTabIdx={setDurationTabIdx}\n                            setSelectedDuration={setSelectedDuration}\n                            setDurationError={setDurationError}\n                            has_amount_error={has_amount_error}\n                            t_duration={t_duration}\n                            s_duration={s_duration}\n                            m_duration={m_duration}\n                            h_duration={h_duration}\n                            d_duration={d_duration}\n                            stake_value={stake_value}\n                            payout_value={payout_value}\n                        />\n                    </div>\n                )}\n                {isVisible('amount') && (\n                    <div data-header-content={getHeaderContent('amount')}>\n                        <AmountMobile\n                            duration_unit={duration_unit}\n                            duration_value={duration_value}\n                            toggleModal={toggleModal}\n                            amount_tab_idx={amount_tab_idx}\n                            setAmountTabIdx={setAmountTabIdx}\n                            has_duration_error={has_duration_error}\n                            setSelectedAmount={setSelectedAmount}\n                            setAmountError={setAmountError}\n                            stake_value={stake_value}\n                            payout_value={payout_value}\n                        />\n                    </div>\n                )}\n            </Tabs>\n        );\n    }\n);\n\nexport const LastDigitMobile = observer(() => {\n    const { form_components } = useTraderStore();\n    return form_components.includes('last_digit') && <LastDigit />;\n});\n\nexport const BarrierMobile = observer(() => {\n    const { form_components } = useTraderStore();\n    return form_components.includes('barrier') && <Barrier />;\n});\n","import React from 'react';\nimport { Money } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { getExpiryType, getDurationMinMaxValues, getLocalizedBasis } from '@deriv/shared';\nimport { MultiplierAmountWidget } from 'Modules/Trading/Components/Form/TradeParams/Multiplier/widgets.jsx';\nimport TradeParamsModal from '../../Containers/trade-params-mobile.jsx';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst MobileWidget = observer(({ toggleDigitsWidget, is_collapsed }) => {\n    const { ui } = useStore();\n    const { onChangeUiStore } = ui;\n    const trade_store = useTraderStore();\n    const {\n        amount,\n        basis,\n        currency,\n        duration,\n        duration_min_max,\n        duration_unit,\n        form_components,\n        is_multiplier,\n        last_digit,\n        onChange,\n    } = trade_store;\n\n    const [is_open, setIsOpen] = React.useState(false);\n\n    React.useEffect(() => {\n        assertDurationIsWithinBoundary();\n    });\n\n    const assertDurationIsWithinBoundary = () => {\n        const contract_expiry_type = getExpiryType(trade_store);\n        const [min_value, max_value] = getDurationMinMaxValues(duration_min_max, contract_expiry_type, duration_unit);\n\n        if (contract_expiry_type === 'tick' && duration < min_value) {\n            onChangeUiStore({ name: `duration_${duration_unit}`, value: min_value });\n            onChange({ target: { name: 'duration', value: min_value } });\n        }\n        if (!(duration < min_value) && duration > max_value) {\n            onChangeUiStore({ name: `duration_${duration_unit}`, value: max_value });\n            onChange({ target: { name: 'duration', value: max_value } });\n        }\n    };\n\n    const toggleWidget = () => setIsOpen(!is_open);\n\n    const getHumanReadableDuration = () => {\n        if (!duration_unit) return '';\n        const lookup = {\n            t: [localize('tick'), localize('ticks')],\n            s: [localize('second'), localize('seconds')],\n            m: [localize('min'), localize('mins')],\n            h: [localize('hour'), localize('hours')],\n            d: [localize('day'), localize('days')],\n        };\n\n        try {\n            if (!duration_unit) return '';\n            const formatted_duration_unit = +duration === 1 ? lookup[duration_unit][0] : lookup[duration_unit][1];\n\n            return `${duration} ${formatted_duration_unit}`;\n        } catch (e) {\n            return '';\n        }\n    };\n\n    const isVisible = component => {\n        return form_components.includes(component);\n    };\n\n    const localized_basis = getLocalizedBasis();\n\n    const stakeOrPayout = () => {\n        switch (basis) {\n            case 'stake':\n                return localized_basis.stake;\n            case 'payout':\n                return localized_basis.payout;\n            default:\n                return basis;\n        }\n    };\n\n    return (\n        <div className='mobile-widget__wrapper'>\n            {is_multiplier ? (\n                <MultiplierAmountWidget />\n            ) : (\n                <div id='duration_amount_selector' className='mobile-widget' onClick={toggleWidget}>\n                    <div className='mobile-widget__duration'>{getHumanReadableDuration()}</div>\n                    <div className='mobile-widget__amount'>\n                        <Money amount={amount} currency={currency} show_currency />\n                    </div>\n                    <div className='mobile-widget__type'>{stakeOrPayout()}</div>\n                </div>\n            )}\n            <TradeParamsModal is_open={is_open} toggleModal={toggleWidget} />\n            {isVisible('last_digit') && is_collapsed && (\n                <div className='mobile-widget' onClick={toggleDigitsWidget}>\n                    <div className='mobile-widget__amount'>\n                        <Localize i18n_default_text='Digit: {{last_digit}} ' values={{ last_digit }} />\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n});\n\nexport default MobileWidget;\n","import React from 'react';\nimport { Checkbox, RadioGroup, Dialog, Popover, Text } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { onToggleCancellation, onChangeCancellationDuration } from 'Stores/Modules/Trading/Helpers/multiplier';\nimport Fieldset from 'App/Components/Form/fieldset.jsx';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst DealCancellationWarningDialog = observer(({ is_visible, onConfirm, onCancel }) => {\n    const { ui } = useStore();\n    const { disableApp, enableApp, should_show_cancellation_warning, toggleCancellationWarning } = ui;\n    return (\n        <Dialog\n            className='trade-params__multiplier-deal-cancellation-dialog'\n            title={localize('About deal cancellation')}\n            confirm_button_text={localize('Got it')}\n            cancel_button_text={localize('Cancel')}\n            onConfirm={onConfirm}\n            onCancel={onCancel}\n            is_mobile_full_width={false}\n            is_visible={is_visible}\n            disableApp={disableApp}\n            enableApp={enableApp}\n            portal_element_id='modal_root'\n        >\n            <Text size='xxxs' color='general'>\n                <Localize i18n_default_text='Take profit and/or stop loss are not available while deal cancellation is active.' />\n            </Text>\n            <Checkbox\n                defaultChecked={!should_show_cancellation_warning}\n                onChange={() => toggleCancellationWarning()}\n                name={'should_show_cancellation_warning'}\n                label={localize(\"Don't show this again\")}\n            />\n        </Dialog>\n    );\n});\n\nconst CancelDeal = observer(\n    ({ has_cancellation, has_take_profit, has_stop_loss, onChangeMultiple, cancellation_duration }) => {\n        const { ui } = useStore();\n        const { should_show_cancellation_warning } = ui;\n        const { cancellation_range_list } = useTraderStore();\n        const [is_deal_cancel_warning_visible, setDealCancelWarningVisibility] = React.useState(false);\n\n        const canToggleDealCancel = () => {\n            const should_show_popover = (has_take_profit || has_stop_loss) && should_show_cancellation_warning;\n            if (should_show_popover) setDealCancelWarningVisibility(should_show_popover);\n            return !should_show_popover;\n        };\n\n        return (\n            <React.Fragment>\n                <DealCancellationWarningDialog\n                    is_visible={is_deal_cancel_warning_visible}\n                    onCancel={() => setDealCancelWarningVisibility(false)}\n                    onConfirm={() => {\n                        setDealCancelWarningVisibility(false);\n                        onToggleCancellation({ has_cancellation, onChangeMultiple });\n                    }}\n                />\n                <Fieldset className='trade-container__fieldset'>\n                    <div className='dc-input-wrapper--inline'>\n                        <Checkbox\n                            id='dt_cancellation-checkbox_input'\n                            onChange={() => {\n                                if (canToggleDealCancel()) {\n                                    onToggleCancellation({ has_cancellation, onChangeMultiple });\n                                }\n                            }}\n                            name='has_cancellation'\n                            label={localize('Deal cancellation')}\n                            defaultChecked={has_cancellation}\n                        />\n                        <Popover\n                            alignment='left'\n                            icon='info'\n                            id='dt_multiplier-stake__tooltip'\n                            is_bubble_hover_enabled\n                            classNameBubble='trade-container__deal-cancellation-popover'\n                            zIndex={9999}\n                            message={localize(\n                                'Cancel your trade anytime within a chosen time-frame. Triggered automatically if your trade reaches the stop out level within the chosen time-frame.'\n                            )}\n                        />\n                    </div>\n                    {has_cancellation && (\n                        <React.Fragment>\n                            <RadioGroup\n                                className='trade-params__multiplier-radio-group'\n                                name='trade-params__multiplier-radio'\n                                selected={cancellation_duration}\n                                onToggle={event => onChangeCancellationDuration({ event, onChangeMultiple })}\n                            >\n                                {cancellation_range_list.map(({ text, value }) => (\n                                    <RadioGroup.Item key={value} id={text} label={text} value={value.toString()} />\n                                ))}\n                            </RadioGroup>\n                        </React.Fragment>\n                    )}\n                </Fieldset>\n            </React.Fragment>\n        );\n    }\n);\n\nexport default CancelDeal;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { MobileDialog, Button, Div100vhContainer } from '@deriv/components';\nimport { isDeepEqual, pick } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport StopLoss from 'Modules/Trading/Components/Form/TradeParams/Multiplier/stop-loss.jsx';\nimport TakeProfit from 'Modules/Trading/Components/Form/TradeParams/Multiplier/take-profit.jsx';\nimport CancelDeal from 'Modules/Trading/Components/Elements/Multiplier/cancel-deal-mobile.jsx';\n\nconst RiskManagementDialog = observer(({ is_open, onClose, toggleDialog }) => {\n    const {\n        take_profit,\n        has_take_profit,\n        has_stop_loss,\n        stop_loss,\n        has_cancellation,\n        cancellation_range_list,\n        cancellation_duration,\n        onChangeMultiple,\n    } = useTraderStore();\n    const applied_risk_management_state = {\n        take_profit,\n        stop_loss,\n        has_take_profit,\n        has_stop_loss,\n        has_cancellation,\n        cancellation_duration,\n    };\n    const [state, setState] = React.useState(applied_risk_management_state);\n\n    const [validation_errors, setValidationErrors] = React.useState({});\n\n    const should_show_deal_cancellation = cancellation_range_list?.length > 0;\n\n    const getStateToCompare = _state => {\n        const props_to_pick = [\n            'has_take_profit',\n            'has_stop_loss',\n            'has_cancellation',\n            _state.has_take_profit && 'take_profit',\n            _state.has_stop_loss && 'stop_loss',\n            _state.has_cancellation && 'cancellation_duration',\n        ];\n\n        return pick(_state, props_to_pick);\n    };\n\n    const isStateUnchanged = () => {\n        return isDeepEqual(getStateToCompare(state), getStateToCompare(applied_risk_management_state));\n    };\n\n    const validate = new_state => {\n        setValidationErrors({\n            take_profit:\n                new_state.has_take_profit && !new_state.take_profit\n                    ? [localize('Please enter a take profit amount.')]\n                    : [],\n            stop_loss:\n                new_state.has_stop_loss && !new_state.stop_loss ? [localize('Please enter a stop loss amount.')] : [],\n        });\n    };\n\n    const onChange = e => {\n        const { name, value } = e.target;\n        const new_state = { ...state };\n        new_state[name] = value;\n        setState(new_state);\n        validate(new_state);\n    };\n\n    const onChangeMultipleLocal = props => {\n        const new_state = { ...state };\n        Object.assign(new_state, props);\n        setState(new_state);\n        validate(new_state);\n    };\n\n    const apply = () => {\n        onChangeMultiple(state);\n        toggleDialog();\n    };\n\n    const resetAndClose = (...args) => {\n        setState(applied_risk_management_state);\n        onClose(...args);\n    };\n\n    return (\n        <React.Fragment>\n            <MobileDialog portal_element_id='modal_root' visible={is_open} has_content_scroll onClose={resetAndClose}>\n                <Div100vhContainer\n                    className={classNames('trade-params__multiplier-risk-management-dialog', {\n                        'trade-params__multiplier-risk-management-dialog--no-cancel': !should_show_deal_cancellation,\n                    })}\n                    height_offset='54px'\n                >\n                    <TakeProfit\n                        take_profit={state.take_profit}\n                        has_take_profit={state.has_take_profit}\n                        onChange={onChange}\n                        onChangeMultiple={onChangeMultipleLocal}\n                        validation_errors={validation_errors}\n                    />\n                    <StopLoss\n                        stop_loss={state.stop_loss}\n                        has_stop_loss={state.has_stop_loss}\n                        onChange={onChange}\n                        onChangeMultiple={onChangeMultipleLocal}\n                        validation_errors={validation_errors}\n                    />\n                    {should_show_deal_cancellation && (\n                        <CancelDeal\n                            has_take_profit={state.has_take_profit}\n                            has_stop_loss={state.has_stop_loss}\n                            has_cancellation={state.has_cancellation}\n                            cancellation_duration={state.cancellation_duration}\n                            onChangeMultiple={onChangeMultipleLocal}\n                        />\n                    )}\n                    <div className='trade-params__multiplier-risk-management-dialog-bottom-separator' />\n                    <div className='trade-params__multiplier-risk-management-dialog-apply-button'>\n                        <Button\n                            text={localize('Apply')}\n                            onClick={apply}\n                            primary\n                            is_disabled={\n                                validation_errors.take_profit?.length > 0 ||\n                                validation_errors.stop_loss?.length > 0 ||\n                                isStateUnchanged()\n                            }\n                        />\n                    </div>\n                </Div100vhContainer>\n            </MobileDialog>\n        </React.Fragment>\n    );\n});\n\nexport default RiskManagementDialog;\n","import React from 'react';\nimport { Money } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport RiskManagementDialog from 'Modules/Trading/Containers/Multiplier/risk-management-dialog.jsx';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst RiskManagementInfo = observer(() => {\n    const {\n        currency,\n        stop_loss,\n        take_profit,\n        has_take_profit,\n        has_stop_loss,\n        cancellation_duration,\n        cancellation_range_list,\n        has_cancellation,\n    } = useTraderStore();\n    const [is_dialog_open, setDialogOpen] = React.useState(false);\n    const has_risk_management = has_take_profit || has_stop_loss || has_cancellation;\n    const toggleDialog = () => {\n        setDialogOpen(!is_dialog_open);\n    };\n    const cancellation_label = cancellation_range_list.find(r => r.value === cancellation_duration)?.text;\n\n    return (\n        <React.Fragment>\n            <RiskManagementDialog\n                is_open={is_dialog_open}\n                toggleDialog={toggleDialog}\n                onClose={() => setDialogOpen(false)}\n            />\n            <div\n                className='mobile-widget mobile-widget__multiplier-risk-management'\n                onClick={() => setDialogOpen(!is_dialog_open)}\n            >\n                {!has_risk_management && (\n                    <div className='mobile-widget__item'>\n                        <div className='mobile-widget__item-label'>{localize('Risk management')}</div>\n                        <div className='mobile-widget__item-value'>{localize('Not set')}</div>\n                    </div>\n                )}\n                {has_take_profit && (\n                    <div className='mobile-widget__item'>\n                        <div className='mobile-widget__item-label'>{localize('Take profit')}</div>\n                        <div className='mobile-widget__item-value'>\n                            <Money amount={take_profit} currency={currency} show_currency />\n                        </div>\n                    </div>\n                )}\n                {has_stop_loss && (\n                    <div className='mobile-widget__item'>\n                        <div className='mobile-widget__item-label'>{localize('Stop loss')}</div>\n                        <div className='mobile-widget__item-value'>\n                            <Money amount={stop_loss} currency={currency} show_currency />\n                        </div>\n                    </div>\n                )}\n                {has_cancellation && (\n                    <div className='mobile-widget__item'>\n                        <div className='mobile-widget__item-label'>{localize('Deal Cancellation')}</div>\n                        <div className='mobile-widget__item-value'>{cancellation_label}</div>\n                    </div>\n                )}\n            </div>\n        </React.Fragment>\n    );\n});\n\nexport default RiskManagementInfo;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Collapsible } from '@deriv/components';\nimport { TradeParamsLoader } from 'App/Components/Elements/ContentLoader';\nimport AllowEqualsMobile from 'Modules/Trading/Containers/allow-equals.jsx';\nimport {\n    hasCallPutEqual,\n    hasDurationForCallPutEqual,\n    isRiseFallEqual,\n} from 'Stores/Modules/Trading/Helpers/allow-equals';\nimport {\n    AccumulatorOptionsWidget,\n    MultiplierOptionsWidget,\n} from 'Modules/Trading/Components/Form/TradeParams/Multiplier/widgets.jsx';\nimport AccumulatorsAmountMobile from 'Modules/Trading/Components/Form/TradeParams/Accumulator/accumulators-amount-mobile.jsx';\nimport AccumulatorsInfoDisplay from 'Modules/Trading/Components/Form/TradeParams/Accumulator/accumulators-info-display.jsx';\nimport { BarrierMobile, LastDigitMobile } from 'Modules/Trading/Containers/trade-params-mobile.jsx';\nimport ContractType from 'Modules/Trading/Containers/contract-type.jsx';\nimport MobileWidget from 'Modules/Trading/Components/Elements/mobile-widget.jsx';\nimport Purchase from 'Modules/Trading/Containers/purchase.jsx';\nimport RiskManagementInfo from 'Modules/Trading/Components/Elements/Multiplier/risk-management-info.jsx';\nimport TakeProfit from 'Modules/Trading/Components/Form/TradeParams/Multiplier/take-profit.jsx';\nimport 'Sass/app/_common/mobile-widget.scss';\nimport classNames from 'classnames';\nimport AccumulatorsStats from 'Modules/Contract/Components/AccumulatorsStats';\nimport Strike from 'Modules/Trading/Components/Form/TradeParams/strike.jsx';\nimport VanillaTradeTypes from 'Modules/Trading/Components/Form/TradeParams/vanilla-trade-types.jsx';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst CollapsibleTradeParams = ({\n    form_components,\n    has_allow_equals,\n    has_take_profit,\n    previous_symbol,\n    is_allow_equal,\n    is_accumulator,\n    is_trade_params_expanded,\n    is_multiplier,\n    is_vanilla,\n    onChange,\n    take_profit,\n    setIsTradeParamsExpanded,\n}) => {\n    React.useEffect(() => {\n        if (previous_symbol && is_allow_equal && has_allow_equals) setIsTradeParamsExpanded(true);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [previous_symbol]);\n\n    const is_collapsed = !is_trade_params_expanded;\n\n    const onClick = e => {\n        setIsTradeParamsExpanded(e);\n    };\n\n    const toggleDigitsWidget = () => {\n        setIsTradeParamsExpanded(true);\n    };\n\n    const isVisible = component => form_components.includes(component);\n\n    return (\n        <Collapsible position='top' is_collapsed={is_collapsed} onClick={onClick}>\n            {is_accumulator && is_collapsed && <AccumulatorsStats />}\n            <div className='trade-params__contract-type-container'>\n                <ContractType />\n                {is_multiplier && <MultiplierOptionsWidget />}\n                {is_accumulator && <AccumulatorOptionsWidget />}\n                {is_vanilla && <VanillaTradeTypes />}\n            </div>\n            {isVisible('last_digit') && (\n                <div data-collapsible='true'>\n                    <LastDigitMobile />\n                </div>\n            )}\n            {isVisible('barrier') && (\n                <div data-collapsible='true'>\n                    <BarrierMobile />\n                </div>\n            )}\n            {isVisible('strike') && (\n                <div data-collapsible='true'>\n                    <Strike />\n                </div>\n            )}\n\n            {!is_accumulator && <MobileWidget is_collapsed={is_collapsed} toggleDigitsWidget={toggleDigitsWidget} />}\n            {has_allow_equals && (\n                <div data-collapsible='true'>\n                    <AllowEqualsMobile />\n                </div>\n            )}\n            {is_multiplier && (\n                <div data-collapsible='true'>\n                    <RiskManagementInfo />\n                </div>\n            )}\n            {is_accumulator && [\n                <AccumulatorsAmountMobile key='accu_amount' />,\n                <div\n                    data-collapsible='true'\n                    key='accu_take_profit'\n                    className={classNames('take-profit', 'mobile-widget')}\n                >\n                    <TakeProfit\n                        take_profit={take_profit}\n                        has_take_profit={has_take_profit}\n                        onChange={onChange}\n                        has_info={false}\n                    />\n                </div>,\n                <div data-collapsible='true' key='accu_info'>\n                    <AccumulatorsInfoDisplay />\n                </div>,\n            ]}\n            {is_vanilla ? (\n                <Purchase />\n            ) : (\n                <div className={`purchase-container${is_accumulator ? '--accumulator' : ''}`}>\n                    <Purchase />\n                </div>\n            )}\n        </Collapsible>\n    );\n};\n\nconst ScreenSmall = observer(({ is_trade_enabled }) => {\n    const trade_store = useTraderStore();\n    const {\n        is_accumulator,\n        is_multiplier,\n        is_vanilla,\n        duration_unit,\n        contract_types_list,\n        contract_type,\n        expiry_type,\n        contract_start_type,\n        form_components,\n        has_take_profit,\n        onChange,\n        previous_symbol,\n        is_trade_params_expanded,\n        setIsTradeParamsExpanded,\n        take_profit,\n    } = trade_store;\n    const is_allow_equal = !!trade_store.is_equal;\n\n    const collapsible_trade_params_props = {\n        is_accumulator,\n        is_multiplier,\n        is_vanilla,\n        form_components,\n        has_take_profit,\n        onChange,\n        previous_symbol,\n        is_trade_params_expanded,\n        setIsTradeParamsExpanded,\n        take_profit,\n        is_allow_equal,\n    };\n\n    const has_callputequal_duration = hasDurationForCallPutEqual(\n        contract_types_list,\n        duration_unit,\n        contract_start_type\n    );\n\n    const has_callputequal = hasCallPutEqual(contract_types_list);\n    const has_allow_equals =\n        isRiseFallEqual(contract_type) && (has_callputequal_duration || expiry_type === 'endtime') && has_callputequal;\n\n    return !is_trade_enabled ? (\n        <div className='mobile-wrapper__content-loader'>\n            <TradeParamsLoader speed={2} />\n        </div>\n    ) : (\n        <CollapsibleTradeParams has_allow_equals={has_allow_equals} {...collapsible_trade_params_props} />\n    );\n});\n\nScreenSmall.propTypes = {\n    is_trade_enabled: PropTypes.bool,\n};\n\nexport default ScreenSmall;\n"],"names":["AllowEquals","onChange","is_allow_equal","has_equals_only","className","classNames","Checkbox","label","localize","value","name","e","persist","target","checked","Number","disabled","Text","as","size","Localize","i18n_default_text","propTypes","PropTypes","observer","useTraderStore","allow_equals_props","is_equal","requestPreviewProposal","debounce","store","override","onProposalResponse","new_store","requests","createProposalRequests","subscription_map","onResponse","response","error","subscription","id","isEmptyObject","proposal_requests","Object","keys","forEach","type","WS","Basis","basis","duration_unit","duration_value","toggleModal","has_duration_error","selected_basis","setSelectedAmount","setAmountError","useStore","ui","client","addToast","vanilla_trade_type","currency","onChangeMultiple","trade_amount","trade_basis","trade_duration_unit","trade_duration","contract_type","stake_boundary","user_currency_decimal_places","getDecimalPlaces","zero_decimals","toFixed","min_amount","parseFloat","toString","replace","validateAmount","localized_message","selected_value","key","content","timeout","isNaN","length","min_stake","max_stake","strike__pos","Numpad","format","onSubmit","amount","on_change_obj","duration","min","is_currency","render","v","Money","should_format","reset_press_interval","reset_value","pip_size","onValidate","submit_label","onValueChange","num","amount_tab_idx","setAmountTabIdx","stake_value","payout_value","basis_list","active_index","findIndex","b","Tabs","onTabItemClick","top","map","basis_option","text","is_open","usePreventIOSZoom","enableApp","disableApp","Modal","is_title_centered","should_header_stick_body","height","width","title","Div100vhContainer","max_autoheight_offset","TradeParamsMobile","trade_stop_out","trade_store","React","setStakeValue","commission","setCommission","stop_out","setStopOut","stake_ref","isMounted","useIsMounted","dispose","proposal","echo_req","current","limit_order","order_amount","Popover","alignment","icon","zIndex","is_bubble_hover_enabled","message","components","show_currency","stake","should_show_tooltip","items_list","contract_name","current_value_object","info","is_tooltip_disabled","popover_alignment","disable_target_icon","RadioGroup","selected","onToggle","MultiplierOptions","multiplier","multiplier_range_list","modal_title","accumulator_range_list","growth_rate","tick_size_barrier","proposal_info","has_error_or_not_loaded","ACCU","has_error","getGrowthRatePercentage","getTickSizeBarrierPercentage","MultipliersExpirationModal","has_close_icon","style","minHeight","padding","color","is_text_only","text_size","has_separator","Button","large","primary","has_effect","onClick","AmountWidget","expiration","is_crypto_multiplier","setIsOpen","is_expiration_modal_open","setIsExpirationModalOpen","toggleExpirationModal","weight","commission_text_size","stop_out_text_size","MultiplierAmountWidget","amount_widget_props","RadioGroupOptionsWidget","displayed_trade_param","MultiplierOptionsWidget","AccumulatorOptionsWidget","AccumulatorsAmountMobile","is_nativepicker","current_focus","setCurrentFocus","is_single_currency","MobileWrapper","LabeledQuantityInputMobile","input_label","classNameInlinePrefix","classNameInput","fractional_digits","inline_prefix","is_autocomplete_disabled","is_float","is_hj_whitelisted","is_incrementable","is_negative_disabled","max_length","AMOUNT_MAX_LENGTH","ariaLabel","updateAmountChanges","obj","Ticks","setDurationError","has_amount_error","selected_duration","setSelectedDuration","duration_min_max","getDurationMinMaxValues","min_tick","max_tick","tick_duration","TickPicker","default_value","max_value","min_value","tick","singular_label","plural_label","Numbers","duration_unit_option","contract_expiry","max","validateDuration","values","addComma","parseInt","expiry_type","duration_tab_idx","setDurationTabIdx","t_duration","s_duration","m_duration","h_duration","d_duration","duration_units_list","duration_values","d","handleRelativeChange","date","selected_basis_option","index","unit","onTabChange","single_tab_has_no_label","RelativeDatepicker","min_date","max_date","DEFAULT_DURATION","freeze","t","s","m","h","reducer","state","payload","form_components","is_vanilla","getDefaultDuration","trade_param_tab_idx","undefined","curr_duration_unit","curr_duration_value","dispatch","selected_duration_unit","header","renderTitle","arrow_styles","classNameWrapper","classNameBubble","ThemedScrollbars","isVisible","component_key","includes","setTradeParamTabIdx","selected_basis_value","getHeaderContent","tab_key","find","slice","LastDigitMobile","BarrierMobile","MobileWidget","toggleDigitsWidget","is_collapsed","onChangeUiStore","is_multiplier","last_digit","assertDurationIsWithinBoundary","component","contract_expiry_type","getExpiryType","toggleWidget","localized_basis","getLocalizedBasis","lookup","formatted_duration_unit","getHumanReadableDuration","payout","stakeOrPayout","DealCancellationWarningDialog","is_visible","onConfirm","onCancel","should_show_cancellation_warning","toggleCancellationWarning","Dialog","confirm_button_text","cancel_button_text","is_mobile_full_width","portal_element_id","defaultChecked","has_cancellation","has_take_profit","has_stop_loss","cancellation_duration","cancellation_range_list","is_deal_cancel_warning_visible","setDealCancelWarningVisibility","onToggleCancellation","should_show_popover","event","onChangeCancellationDuration","onClose","toggleDialog","take_profit","stop_loss","applied_risk_management_state","setState","validation_errors","setValidationErrors","should_show_deal_cancellation","getStateToCompare","_state","props_to_pick","pick","validate","new_state","onChangeMultipleLocal","props","assign","MobileDialog","visible","has_content_scroll","height_offset","is_disabled","isDeepEqual","is_dialog_open","setDialogOpen","has_risk_management","cancellation_label","r","CollapsibleTradeParams","has_allow_equals","previous_symbol","is_accumulator","is_trade_params_expanded","setIsTradeParamsExpanded","Collapsible","position","AccumulatorsStats","has_info","ScreenSmall","is_trade_enabled","contract_types_list","contract_start_type","collapsible_trade_params_props","has_callputequal_duration","hasDurationForCallPutEqual","has_callputequal","hasCallPutEqual","isRiseFallEqual","speed"],"sourceRoot":""}