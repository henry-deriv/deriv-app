{"version":3,"file":"trader/js/trader.src_Modules_Trading_Components_Form_TradeParams_Accumulator_accumulators-info-display_jsx-src-6c3160.2ce36913ffd4285d6bb1.js","mappings":"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","sources":["webpack://@deriv/trader/./src/App/Components/Form/fieldset.jsx","webpack://@deriv/trader/./src/App/Components/Form/number-selector.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/LabeledQuantityInputMobile/labeled-quantity-input-mobile.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/LabeledQuantityInputMobile/index.js","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/Purchase/cancel-deal-info.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/Purchase/contract-info.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Accumulator/accumulators-info-display.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Multiplier/expiration.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Multiplier/info.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Multiplier/stop-loss.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Multiplier/take-profit.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/barrier.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/last-digit.jsx","webpack://@deriv/trader/./src/Modules/Trading/Containers/strike-param-modal.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/strike.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/vanilla-trade-types.jsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/accumulator-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/trade-categories.jsx","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-asian.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-close-to-low.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-ends-in-out.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-even-odd.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-high-low.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-high-to-close.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-high-to-low.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-match-diff.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-multiplier.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-over-under.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-reset.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-rise-fall.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-run-high-low.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-spread.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-tick-high-low.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-touch.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-vanilla.svg","webpack://@deriv/trader/./src/Assets/Trading/Categories/accumulator-description-video.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/trade-categories-gif.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/ContractTypeInfo/contract-type-glossary.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/ContractTypeInfo/contract-type-info.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/ContractTypeInfo/contract-type-info-header.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/ContractTypeInfo/index.js","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/ContractTypeMenu/search-input.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/ContractTypeMenu/no-results-message.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/ContractTypeMenu/contract-type-menu.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/ContractTypeMenu/index.js","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/contract-type-dialog.jsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/icon-trade-categories.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/contract-type-display.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/contract-type-item.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/contract-type-list.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/contract-type.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/contract-type-widget.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/index.js","webpack://@deriv/trader/./src/Modules/Trading/Containers/contract-type.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Elements/purchase-buttons-overlay.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Elements/purchase-button.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Elements/purchase-fieldset.jsx","webpack://@deriv/trader/./src/Modules/Trading/Containers/purchase.jsx","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/allow-equals.js","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/multiplier.js"],"sourcesContent":["import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Popover } from '@deriv/components';\n\nconst Fieldset = ({\n    children,\n    className,\n    header,\n    header_tooltip,\n    is_center,\n    is_tooltip_disabled,\n    onMouseEnter,\n    onMouseLeave,\n}) => {\n    const fieldset_header_class = classNames('trade-container__fieldset-header', {\n        'center-text': is_center,\n        'trade-container__fieldset-header--inline': header_tooltip,\n    });\n    const fieldset_info_class = classNames(\n        'trade-container__fieldset-info',\n        !is_center && 'trade-container__fieldset-info--left'\n    );\n\n    return (\n        <fieldset className={className} onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n            {!!header && (\n                <div className={fieldset_header_class}>\n                    <span className={fieldset_info_class}>{header}</span>\n                    {header_tooltip && (\n                        <span\n                            className={classNames('', {\n                                'trade-container__fieldset-header--tooltip-disabled': is_tooltip_disabled,\n                            })}\n                        >\n                            <Popover\n                                alignment='left'\n                                icon='info'\n                                is_bubble_hover_enabled\n                                message={header_tooltip}\n                                margin={216}\n                                relative_render\n                            />\n                        </span>\n                    )}\n                </div>\n            )}\n            {children}\n        </fieldset>\n    );\n};\n\n// ToDo:\n// - Refactor Last Digit to keep the children as array type.\n//   Currently last_digit.jsx returns object (React-Element) as 'children'\n//   props type.\nFieldset.propTypes = {\n    children: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n    className: PropTypes.string,\n    header: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    header_tooltip: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n    is_center: PropTypes.bool,\n    is_tooltip_disabled: PropTypes.bool,\n    onMouseEnter: PropTypes.func,\n    onMouseLeave: PropTypes.func,\n};\n\nexport default Fieldset;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\n// arr_arr_numbers is an array of arrays where each nested array indicates one row\n// for example [[1, 2, 3]] will be a single row of these three numbers\n// but [[1, 2, 3], [4, 5, 6]] will be two rows:\n// first row with the first three numbers and second row with the last three numbers\nconst NumberSelector = ({ arr_arr_numbers, name, onChange, selected_number, should_show_in_percents }) => {\n    const handleSelect = item => {\n        if (+item.target.getAttribute('data-value') !== selected_number) {\n            onChange({ target: { name, value: +item.target.getAttribute('data-value') } });\n        }\n    };\n\n    return (\n        <div className='number-selector'>\n            {arr_arr_numbers.map((arr_numbers, idx) => (\n                <div className='number-selector__row' key={idx}>\n                    {arr_numbers.map(i => (\n                        <span\n                            key={i}\n                            className={classNames('number-selector__selection', {\n                                'number-selector__selection--selected': selected_number === i,\n                                'number-selector__selection--percentage': should_show_in_percents,\n                            })}\n                            data-value={i}\n                            onClick={handleSelect}\n                        >\n                            {should_show_in_percents ? `${i * 100}%` : i}\n                        </span>\n                    ))}\n                </div>\n            ))}\n        </div>\n    );\n};\n\nNumberSelector.propTypes = {\n    arr_arr_numbers: PropTypes.arrayOf(PropTypes.array),\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n    selected_number: PropTypes.number,\n    should_show_in_percents: PropTypes.bool,\n};\n\nexport default NumberSelector;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { InputField } from '@deriv/components';\nimport Fieldset from 'App/Components/Form/fieldset.jsx';\n\nconst LabeledQuantityInputMobile = ({ input_label, ...props }) => (\n    <div\n        className={`${props.name}__widget ${props.wrapper_classname && props.wrapper_classname}`}\n        data-testid={`dt_${props.name}_widget`}\n    >\n        <Fieldset className={`${props.name}__fields`}>\n            <InputField {...props} />\n        </Fieldset>\n        <h2 className={`${props.name}__widget-title`}>{input_label}</h2>\n    </div>\n);\n\nLabeledQuantityInputMobile.propTypes = {\n    input_label: PropTypes.string,\n    ...InputField.propTypes,\n};\n\nexport default React.memo(LabeledQuantityInputMobile);\n","import LabeledQuantityInputMobile from './labeled-quantity-input-mobile.jsx';\n\nexport default LabeledQuantityInputMobile;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Money } from '@deriv/components';\nimport { isDesktop, isMobile, getDecimalPlaces } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst CancelDealInfo = observer(({ proposal_info }) => {\n    const { currency, has_cancellation } = useTraderStore();\n    const { id, cancellation, has_error } = proposal_info;\n    const error = has_error || !id;\n    const [is_row_layout, setIsRowLayout] = React.useState(false);\n\n    const ref = React.useRef(null);\n\n    React.useEffect(() => {\n        if (ref.current) {\n            const el_height = ref.current.parentElement?.clientHeight;\n            if ((el_height > 21 && isDesktop()) || ((el_height > 21 || getDecimalPlaces(currency) > 2) && isMobile())) {\n                setIsRowLayout(true);\n            } else {\n                setIsRowLayout(false);\n            }\n        }\n    }, [cancellation, currency, is_row_layout, setIsRowLayout]);\n\n    if (!has_cancellation) return null;\n\n    return (\n        <div\n            className={classNames('trade-container__cancel-deal-info', {\n                'trade-container__cancel-deal-info--row-layout': is_row_layout,\n            })}\n        >\n            {cancellation && (\n                <React.Fragment>\n                    <div className='trade-container__price-info-basis' ref={ref}>\n                        {localize('Deal cancel. fee')}\n                    </div>\n                    <div className='trade-container__price-info-value'>\n                        {!error && (\n                            <Money\n                                amount={cancellation.ask_price}\n                                className='trade-container__price-info-currency'\n                                currency={currency}\n                                show_currency\n                            />\n                        )}\n                    </div>\n                </React.Fragment>\n            )}\n        </div>\n    );\n});\n\nexport default CancelDealInfo;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { DesktopWrapper, Icon, MobileWrapper, Money, Popover, Text } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\nimport { getCurrencyDisplayCode, getLocalizedBasis, isMobile, getGrowthRatePercentage } from '@deriv/shared';\nimport CancelDealInfo from './cancel-deal-info.jsx';\n\nexport const ValueMovement = ({\n    has_error_or_not_loaded,\n    proposal_info,\n    currency,\n    has_increased,\n    is_vanilla,\n    value,\n    show_currency = true,\n}) => (\n    <div className='strike--value-container'>\n        <div className={classNames('trade-container__price-info-value', { 'strike--info': is_vanilla })}>\n            {!has_error_or_not_loaded && (\n                <Money\n                    amount={proposal_info?.obj_contract_basis?.value || value}\n                    className={classNames('trade-container__price-info-currency', {\n                        'strike--info__value': is_vanilla,\n                    })}\n                    currency={currency}\n                    show_currency={show_currency}\n                />\n            )}\n        </div>\n        <div className='trade-container__price-info-movement'>\n            {!has_error_or_not_loaded && has_increased !== null && has_increased ? (\n                <Icon icon='IcProfit' />\n            ) : (\n                <Icon icon='IcLoss' />\n            )}\n        </div>\n    </div>\n);\n\nconst ContractInfo = ({\n    basis,\n    currency,\n    growth_rate,\n    has_increased,\n    is_loading,\n    is_accumulator,\n    is_multiplier,\n    is_vanilla,\n    should_fade,\n    proposal_info,\n    type,\n}) => {\n    const localized_basis = getLocalizedBasis();\n\n    const stakeOrPayout = () => {\n        switch (basis) {\n            case 'stake': {\n                if (is_vanilla) {\n                    return localize('Payout per point');\n                }\n                return localized_basis.payout;\n            }\n            case 'payout': {\n                return localized_basis.stake;\n            }\n            default:\n                return basis;\n        }\n    };\n\n    const setBasisText = () => {\n        if (is_vanilla) {\n            return localize('Payout per point');\n        }\n        return proposal_info.obj_contract_basis.text;\n    };\n\n    const has_error_or_not_loaded = proposal_info.has_error || !proposal_info.id;\n\n    const basis_text = has_error_or_not_loaded ? stakeOrPayout() : setBasisText();\n\n    const { message, obj_contract_basis, stake } = proposal_info;\n\n    const setHintMessage = () => {\n        if (['VANILLALONGCALL', 'VANILLALONGPUT'].includes(type)) {\n            return (\n                <Localize\n                    i18n_default_text='<0>For {{title}}:</0> Your payout will grow by this amount for every point {{trade_type}} your strike price. You will start making a profit when the payout is higher than your stake.'\n                    components={[<strong key={0} />]}\n                    values={{\n                        trade_type: type === 'VANILLALONGCALL' ? localize('above') : localize('below'),\n                        title: type === 'VANILLALONGCALL' ? localize('Call') : localize('Put'),\n                    }}\n                />\n            );\n        }\n        return message;\n    };\n\n    return (\n        <div className='trade-container__price'>\n            <div\n                id={`dt_purchase_${type.toLowerCase()}_price`}\n                className={classNames('trade-container__price-info', {\n                    'trade-container__price-info--disabled': has_error_or_not_loaded,\n                    'trade-container__price-info--slide': is_loading && !should_fade,\n                    'trade-container__price-info--fade': is_loading && should_fade,\n                })}\n            >\n                {(is_multiplier || is_accumulator) && (\n                    <React.Fragment>\n                        {!is_accumulator && (\n                            <DesktopWrapper>\n                                <CancelDealInfo proposal_info={proposal_info} />\n                            </DesktopWrapper>\n                        )}\n                        <MobileWrapper>\n                            <div className='trade-container__price-info-wrapper'>\n                                <div className='btn-purchase__text_wrapper'>\n                                    <Text size='xs' weight='bold' color='colored-background'>\n                                        {!is_accumulator ? (\n                                            <Money amount={stake} currency={currency} show_currency />\n                                        ) : (\n                                            !is_loading && `${getGrowthRatePercentage(growth_rate)}%`\n                                        )}\n                                    </Text>\n                                </div>\n                            </div>\n                        </MobileWrapper>\n                    </React.Fragment>\n                )}\n                {is_vanilla && isMobile() && (\n                    <React.Fragment>\n                        <MobileWrapper>\n                            <div\n                                className={classNames('trade-container__price-info-basis', {\n                                    'trade-container__price-info-strike': is_vanilla,\n                                })}\n                            >\n                                {basis_text}\n                                <div className='trade-container__price-info-vanilla'>\n                                    <div\n                                        className={classNames('trade-container__price-info-wrapper', {\n                                            'strike--info__wrapper': is_vanilla,\n                                        })}\n                                    >\n                                        <ValueMovement\n                                            has_error_or_not_loaded={has_error_or_not_loaded}\n                                            proposal_info={proposal_info}\n                                            currency={getCurrencyDisplayCode(currency)}\n                                            has_increased={has_increased}\n                                            is_vanilla={is_vanilla}\n                                        />\n                                    </div>\n                                    <Popover\n                                        alignment='left'\n                                        classNameBubble='trade-container__price-info-modal--vanilla'\n                                        classNameWrapper='trade-container__price-info-modal-wrapper'\n                                        icon='info'\n                                        id='dt_vanilla-stake__tooltip'\n                                        zIndex={9999}\n                                        message={\n                                            <Localize\n                                                i18n_default_text='<0>For {{title}}:</0> Your payout will grow by this amount for every point {{trade_type}} your strike price. You will start making a profit when the payout is higher than your stake.'\n                                                components={[<strong key={0} />]}\n                                                values={{\n                                                    trade_type:\n                                                        type === 'VANILLALONGCALL'\n                                                            ? localize('above')\n                                                            : localize('below'),\n                                                    title:\n                                                        type === 'VANILLALONGCALL' ? localize('Call') : localize('Put'),\n                                                }}\n                                            />\n                                        }\n                                    />\n                                </div>\n                            </div>\n                        </MobileWrapper>\n                    </React.Fragment>\n                )}\n                {!is_multiplier && !is_accumulator && !(is_vanilla && isMobile()) && obj_contract_basis && (\n                    <React.Fragment>\n                        <div\n                            className={classNames('trade-container__price-info-basis', {\n                                'trade-container__price-info-strike': is_vanilla,\n                            })}\n                        >\n                            {basis_text}\n                        </div>\n                        <DesktopWrapper>\n                            <ValueMovement\n                                has_error_or_not_loaded={has_error_or_not_loaded}\n                                proposal_info={proposal_info}\n                                currency={getCurrencyDisplayCode(currency)}\n                                has_increased={has_increased}\n                                is_vanilla={is_vanilla}\n                            />\n                        </DesktopWrapper>\n                        <MobileWrapper>\n                            <div\n                                className={classNames('trade-container__price-info-wrapper', {\n                                    'strike--info': is_vanilla,\n                                })}\n                            >\n                                <ValueMovement\n                                    has_error_or_not_loaded={has_error_or_not_loaded}\n                                    proposal_info={proposal_info}\n                                    currency={getCurrencyDisplayCode(currency)}\n                                    has_increased={has_increased}\n                                    is_vanilla={is_vanilla}\n                                />\n                            </div>\n                        </MobileWrapper>\n                    </React.Fragment>\n                )}\n            </div>\n            {!is_multiplier && !is_accumulator && (\n                <DesktopWrapper>\n                    <Popover\n                        alignment='left'\n                        icon='info'\n                        id={`dt_purchase_${type.toLowerCase()}_info`}\n                        is_bubble_hover_enabled\n                        margin={216}\n                        message={has_error_or_not_loaded ? '' : setHintMessage()}\n                        relative_render\n                    />\n                </DesktopWrapper>\n            )}\n        </div>\n    );\n};\n\nContractInfo.propTypes = {\n    basis: PropTypes.string,\n    currency: PropTypes.string,\n    growth_rate: PropTypes.number,\n    has_increased: PropTypes.bool,\n    is_accumulator: PropTypes.bool,\n    is_multiplier: PropTypes.bool,\n    is_vanilla: PropTypes.bool,\n    is_loading: PropTypes.bool,\n    proposal_info: PropTypes.object,\n    should_fade: PropTypes.bool,\n    type: PropTypes.string,\n};\n\nexport default ContractInfo;\n","import React from 'react';\nimport { localize } from '@deriv/translations';\nimport Fieldset from 'App/Components/Form/fieldset.jsx';\nimport { Money, Text, Popover } from '@deriv/components';\nimport classNames from 'classnames';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { isMobile } from '@deriv/shared';\n\nconst AccumulatorsInfoDisplay = observer(() => {\n    const { currency, maximum_payout, maximum_ticks } = useTraderStore();\n\n    const content = [\n        {\n            label: localize('Max. payout'),\n            value: <Money amount={maximum_payout} show_currency currency={currency} />,\n            tooltip_text: localize('Your contract will be automatically closed when your payout reaches this amount.'),\n        },\n        {\n            label: localize('Max. ticks'),\n            value: `${maximum_ticks || 0} ${maximum_ticks === 1 ? localize('tick') : localize('ticks')}`,\n            tooltip_text: localize('Your contract will be automatically closed upon reaching this number of ticks.'),\n        },\n    ];\n\n    return (\n        <Fieldset className={classNames('trade-container__fieldset', 'accu-info-display')}>\n            {content.map(({ label, value, tooltip_text }) => (\n                <div key={label} className='accu-info-display__row'>\n                    <Text size='xxs' weight='bold' line_height='xxs'>\n                        {label}\n                    </Text>\n                    <Text size='xxs' align='right' as='div'>\n                        {value}\n                        <Popover\n                            alignment='left'\n                            icon='info'\n                            is_bubble_hover_enabled\n                            message={tooltip_text}\n                            margin={isMobile() ? 0 : 216}\n                            zIndex='9999'\n                        />\n                    </Text>\n                </div>\n            ))}\n        </Fieldset>\n    );\n});\n\nexport default AccumulatorsInfoDisplay;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { localize } from '@deriv/translations';\nimport { formatDuration, getDiffDuration, getDateFromNow } from '@deriv/shared';\nimport { Text } from '@deriv/components';\nimport Fieldset from 'App/Components/Form/fieldset.jsx';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst Expiration = observer(({ is_text_only, text_size }) => {\n    const { expiration } = useTraderStore();\n    const { common } = useStore();\n    const { server_time: start_time } = common;\n    const { days, timestamp } = formatDuration(getDiffDuration(start_time.unix(), expiration), 'HH:mm');\n    const date = getDateFromNow(days, 'day', 'DD MMM YYYY');\n\n    if (is_text_only) {\n        return (\n            <React.Fragment>\n                {expiration ? (\n                    <Text size={text_size} align='center'>\n                        {date} at {timestamp}\n                    </Text>\n                ) : (\n                    '-'\n                )}\n            </React.Fragment>\n        );\n    }\n\n    return (\n        <Fieldset\n            className='trade-container__fieldset trade-container__fieldset__multiplier'\n            is_center\n            header={localize('Expires on')}\n            header_tooltip={\n                expiration\n                    ? localize(\n                          'Your contract will be closed automatically at the next available asset price on {{date}} at {{timestamp}}.',\n                          { date, timestamp }\n                      )\n                    : null\n            }\n        >\n            <div style={{ display: 'flex', alignItems: 'center', justifyContent: 'center', marginRight: '1.6rem' }}>\n                {expiration ? (\n                    <Text size='xs' align='center'>\n                        {date} at {timestamp}\n                    </Text>\n                ) : (\n                    '-'\n                )}\n            </div>\n        </Fieldset>\n    );\n});\n\nExpiration.propTypes = {\n    is_text_only: PropTypes.bool,\n    text_size: PropTypes.string,\n};\n\nexport default Expiration;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Popover, Money, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst commission_tooltip_margin = 30;\nconst stop_out_tooltip_margin = 160;\n\nconst MultipliersInfo = observer(\n    ({ className, commission_text_size, stop_out_text_size, is_tooltip_relative, should_show_tooltip, ...props }) => {\n        const trade = useTraderStore();\n        const { currency, has_stop_loss } = trade;\n        const multiplier = props.multiplier ?? (trade.multiplier || 0);\n        const amount = props.amount ?? (trade.amount || 0);\n        const commission = props.commission ?? (trade.commission || 0);\n        const stop_out = props.stop_out ?? (trade.stop_out || 0);\n\n        const commission_text = (\n            <Text\n                as='p'\n                line_height='s'\n                size={commission_text_size || 'xxxs'}\n                className={classNames({\n                    [`${className}-tooltip-text`]: className,\n                })}\n            >\n                <Localize\n                    i18n_default_text='Commission <0/>'\n                    components={[<Money key={0} amount={commission} currency={currency} show_currency />]}\n                />\n            </Text>\n        );\n\n        const stop_out_text = (\n            <Text\n                as='p'\n                line_height='s'\n                size={stop_out_text_size || 'xxxs'}\n                className={classNames({\n                    [`${className}-tooltip-text`]: className,\n                })}\n            >\n                <Localize\n                    i18n_default_text='Stop out <0/>'\n                    components={[<Money key={0} amount={stop_out} currency={currency} show_currency />]}\n                />\n            </Text>\n        );\n\n        const commission_tooltip = (\n            <Localize\n                i18n_default_text='<0>{{commission_percentage}}%</0> of (<1/> * {{multiplier}})'\n                values={{\n                    commission_percentage: Number((commission * 100) / (multiplier * amount)).toFixed(4),\n                    multiplier,\n                }}\n                components={[\n                    <Text size='xxs' weight='bold' key={0} />,\n                    <Money key={1} amount={amount} currency={currency} />,\n                ]}\n            />\n        );\n\n        const stop_out_tooltip = (\n            <Localize\n                i18n_default_text='When your current loss equals or exceeds {{stop_out_percentage}}% of your stake, your contract will be closed at the nearest available asset price.'\n                values={{\n                    stop_out_percentage: Math.floor(Math.abs(Number((stop_out * 100) / amount))),\n                }}\n            />\n        );\n\n        const getInfo = ({ text, message, margin }) => {\n            return should_show_tooltip ? (\n                <Popover\n                    message={message}\n                    {...(is_tooltip_relative\n                        ? { alignment: 'left', relative_render: true, margin }\n                        : { alignment: 'top', zIndex: 9999 })}\n                >\n                    {text}\n                </Popover>\n            ) : (\n                text\n            );\n        };\n\n        return (\n            <div\n                className={classNames('multipliers-trade-info', className, {\n                    'mobile-widget__multiplier-trade-info--no-stop-out': has_stop_loss,\n                })}\n            >\n                {getInfo({\n                    text: commission_text,\n                    message: commission_tooltip,\n                    margin: commission_tooltip_margin,\n                })}\n                {!has_stop_loss &&\n                    getInfo({\n                        text: stop_out_text,\n                        message: stop_out_tooltip,\n                        margin: stop_out_tooltip_margin,\n                    })}\n            </div>\n        );\n    }\n);\n\nMultipliersInfo.propTypes = {\n    className: PropTypes.string,\n    commission_text_size: PropTypes.string,\n    is_tooltip_relative: PropTypes.bool,\n    should_show_tooltip: PropTypes.bool,\n    stop_out_text_size: PropTypes.string,\n};\n\nexport default MultipliersInfo;\n","import React from 'react';\nimport { InputWithCheckbox } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport Fieldset from 'App/Components/Form/fieldset.jsx';\nimport { isDesktop } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst StopLoss = observer(props => {\n    const { ui, client } = useStore();\n    const trade = useTraderStore();\n\n    const { addToast, removeToast, current_focus, setCurrentFocus } = ui;\n    const { is_single_currency } = client;\n    const { amount, currency } = trade;\n\n    const validation_errors = props.validation_errors ?? trade.validation_errors;\n    const stop_loss = props.stop_loss ?? trade.stop_loss;\n    const has_stop_loss = props.has_stop_loss ?? trade.has_stop_loss;\n    const onChangeMultiple = props.onChangeMultiple ?? trade.onChangeMultiple;\n    const onChange = props.onChange ?? trade.onChange;\n\n    const changeValue = e => {\n        if (e.target.name === 'has_stop_loss') {\n            const new_val = e.target.value;\n            onChangeMultiple({\n                [e.target.name]: new_val,\n                ...(new_val ? { has_cancellation: false } : {}),\n            });\n        } else {\n            onChange(e);\n        }\n    };\n\n    return (\n        <Fieldset className='trade-container__fieldset'>\n            <InputWithCheckbox\n                addToast={addToast}\n                removeToast={removeToast}\n                classNameInlinePrefix='trade-container__currency'\n                classNameInput='trade-container__input'\n                className={isDesktop() ? 'trade-container__amount trade-container__amount--multipliers' : null}\n                currency={currency}\n                current_focus={current_focus}\n                defaultChecked={has_stop_loss}\n                error_messages={has_stop_loss ? validation_errors.stop_loss : undefined}\n                is_single_currency={is_single_currency}\n                is_negative_disabled={true}\n                is_input_hidden={!has_stop_loss}\n                label={localize('Stop loss')}\n                max_value={+amount}\n                name='stop_loss'\n                onChange={changeValue}\n                setCurrentFocus={setCurrentFocus}\n                tooltip_label={localize('Your contract will be closed automatically if your loss reaches this amount.')}\n                tooltip_alignment='left'\n                error_message_alignment='left'\n                value={stop_loss}\n            />\n        </Fieldset>\n    );\n});\n\nexport default StopLoss;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { InputWithCheckbox } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { isDesktop } from '@deriv/shared';\nimport Fieldset from 'App/Components/Form/fieldset.jsx';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst TakeProfit = observer(props => {\n    const { ui, client } = useStore();\n    const trade = useTraderStore();\n\n    const { addToast, removeToast, current_focus, setCurrentFocus } = ui;\n    const { is_single_currency } = client;\n    const { is_accumulator, currency } = trade;\n\n    const validation_errors = props.validation_errors ?? trade.validation_errors;\n    const take_profit = props.take_profit ?? trade.take_profit;\n    const has_take_profit = props.has_take_profit ?? trade.has_take_profit;\n    const onChangeMultiple = props.onChangeMultiple ?? trade.onChangeMultiple;\n    const onChange = props.onChange ?? trade.onChange;\n\n    const changeValue = e => {\n        if (e.target.name === 'has_take_profit') {\n            const new_val = e.target.value;\n            onChangeMultiple({\n                [e.target.name]: new_val,\n                ...(new_val ? { has_cancellation: false } : {}),\n            });\n        } else {\n            onChange(e);\n        }\n    };\n\n    return (\n        <Fieldset className='trade-container__fieldset'>\n            <InputWithCheckbox\n                addToast={addToast}\n                removeToast={removeToast}\n                classNameInlinePrefix='trade-container__currency'\n                classNameInput={classNames('trade-container__input', {\n                    'trade-container__input--accumulator': is_accumulator,\n                })}\n                className={isDesktop() ? 'trade-container__amount trade-container__amount--multipliers' : null}\n                currency={currency}\n                current_focus={current_focus}\n                defaultChecked={has_take_profit}\n                error_messages={has_take_profit ? validation_errors.take_profit : undefined}\n                is_single_currency={is_single_currency}\n                is_negative_disabled={true}\n                is_input_hidden={!has_take_profit}\n                label={localize('Take profit')}\n                name='take_profit'\n                onChange={changeValue}\n                setCurrentFocus={setCurrentFocus}\n                tooltip_label={localize(\n                    'Your contract will be closed automatically if your profit reaches this amount.'\n                )}\n                tooltip_alignment='left'\n                error_message_alignment='left'\n                value={take_profit}\n            />\n        </Fieldset>\n    );\n});\n\nexport default TakeProfit;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { DesktopWrapper, Icon, InputField, MobileWrapper, Modal, Text, usePrevious } from '@deriv/components';\nimport Fieldset from 'App/Components/Form/fieldset.jsx';\nimport { ValueMovement } from '../Purchase/contract-info';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { localize } from '@deriv/translations';\nimport LabeledQuantityInputMobile from '../LabeledQuantityInputMobile';\n\nconst Barrier = observer(({ is_minimized, is_absolute_only }) => {\n    const { ui } = useStore();\n    const { current_focus, setCurrentFocus } = ui;\n    const {\n        barrier_1,\n        barrier_2,\n        barrier_count,\n        barrier_pipsize,\n        duration_unit,\n        onChange,\n        validation_errors,\n        proposal_info,\n        trade_types,\n    } = useTraderStore();\n    const [show_modal, setShowModal] = React.useState(false);\n    const type_with_current_spot = Object.keys(trade_types).find(type => proposal_info?.[type]?.spot);\n    const contract_info = proposal_info?.[type_with_current_spot];\n    const current_spot = contract_info?.spot || '';\n    const current_barrier_price = contract_info?.barrier || '';\n    const previous_spot = usePrevious(current_spot);\n    const has_spot_increased = current_spot > previous_spot;\n    const barrier_title = barrier_count === 1 ? localize('Barrier') : localize('Barriers');\n    const has_error_or_not_loaded = contract_info?.has_error || !contract_info?.id;\n\n    if (is_minimized) {\n        return barrier_count !== 2 ? (\n            <div className='fieldset-minimized fieldset-minimized__barrier1'>{barrier_1}</div>\n        ) : (\n            <React.Fragment>\n                <div className='fieldset-minimized fieldset-minimized__barrier1'>{barrier_1}</div>\n                <div className='fieldset-minimized fieldset-minimized__barrier2'>{barrier_2}</div>\n            </React.Fragment>\n        );\n    }\n\n    const input_class = barrier_count === 2 ? 'multiple' : 'single';\n    const is_day_duration = duration_unit === 'd';\n    // TODO: Some contracts yet to be implemented in app.deriv.com allow only absolute barrier, hence the prop\n    const is_absolute_barrier = is_day_duration || is_absolute_only;\n\n    const format = value => {\n        const float_value = parseFloat(value);\n        let final_value;\n        if (Math.sign(float_value) === -1) {\n            final_value = float_value.toFixed(barrier_pipsize).toString();\n        } else {\n            final_value = `+${float_value.toFixed(barrier_pipsize)}`;\n        }\n        return final_value;\n    };\n\n    const onClick = () => {\n        setShowModal(!show_modal);\n    };\n\n    return (\n        <React.Fragment>\n            <DesktopWrapper>\n                <Fieldset\n                    className='trade-container__fieldset trade-container__barriers'\n                    header={barrier_title}\n                    is_center\n                >\n                    <div>\n                        <InputField\n                            id='dt_barrier_1_input'\n                            type='number'\n                            name='barrier_1'\n                            value={barrier_1}\n                            className={`trade-container__barriers-${input_class}`}\n                            classNameInput={classNames(\n                                'trade-container__input',\n                                'trade-container__barriers-input',\n                                `trade-container__barriers-${input_class}-input`\n                            )}\n                            current_focus={current_focus}\n                            onChange={onChange}\n                            error_messages={validation_errors.barrier_1 || []}\n                            is_float\n                            is_signed\n                            setCurrentFocus={setCurrentFocus}\n                        />\n\n                        {barrier_count === 2 && (\n                            <React.Fragment>\n                                <InputField\n                                    id='dt_barrier_2_input'\n                                    type='number'\n                                    name='barrier_2'\n                                    value={barrier_2}\n                                    className='multiple'\n                                    classNameInput='trade-container__input'\n                                    current_focus={current_focus}\n                                    onChange={onChange}\n                                    error_messages={validation_errors.barrier_2}\n                                    is_float\n                                    is_signed\n                                    setCurrentFocus={setCurrentFocus}\n                                />\n                                <Icon icon='IcArrowUp' className='trade-container__barriers--up' />\n                                <Icon icon='IcArrowDown' className='trade-container__barriers--down' />\n                            </React.Fragment>\n                        )}\n                    </div>\n                </Fieldset>\n            </DesktopWrapper>\n            <MobileWrapper>\n                <Modal\n                    id='dt_input_barrier_mobile'\n                    className='barrier'\n                    is_open={show_modal}\n                    should_header_stick_body\n                    toggleModal={onClick}\n                    height='auto'\n                    width='calc(100vw - 32px)'\n                    title={localize('Barrier')}\n                >\n                    <div className='barrier__modal-container'>\n                        <Text className='barrier__modal-text' as='span' color='less-prominent' size='xs'>\n                            {localize('Current Price')}\n                        </Text>\n                        {current_spot && (\n                            <ValueMovement\n                                has_error_or_not_loaded={has_error_or_not_loaded}\n                                value={current_spot}\n                                has_increased={has_spot_increased}\n                                show_currency={false}\n                            />\n                        )}\n                    </div>\n                    <LabeledQuantityInputMobile\n                        id='dt_barrier_input'\n                        input_label={localize('Barrier')}\n                        type='number'\n                        name={barrier_count === 1 ? 'barrier_1' : 'barrier_2'}\n                        wrapper_classname='barrier__modal-input'\n                        value={barrier_count === 1 ? barrier_1 : barrier_2}\n                        className={`barrier__fields-${input_class}`}\n                        classNameInput={classNames(\n                            'barrier__fields-input',\n                            'barrier__fields-barriers-input',\n                            `barrier__fields-barriers-${input_class}-input`\n                        )}\n                        current_focus={current_focus}\n                        onChange={onChange}\n                        error_messages={\n                            (barrier_count === 1 ? validation_errors.barrier_1 : validation_errors.barrier_2) || []\n                        }\n                        error_message_alignment='top'\n                        is_float\n                        is_signed\n                        setCurrentFocus={setCurrentFocus}\n                    />\n                    <Text className='barrier__modal-price' as='div' color='less-prominent' size='xs'>\n                        {localize('Barrier Price:')} {current_barrier_price}\n                    </Text>\n                </Modal>\n                <LabeledQuantityInputMobile\n                    input_label={barrier_count === 2 ? localize('Barrier 1') : localize('Barrier')}\n                    id='dt_barrier_1_input'\n                    type='number'\n                    name='barrier_1'\n                    value={barrier_1}\n                    is_incrementable={!is_absolute_barrier}\n                    is_incrementable_on_long_press={!is_absolute_barrier}\n                    is_negative_disabled={is_absolute_barrier}\n                    className={`barrier__fields-${input_class}`}\n                    classNameInput={classNames(\n                        'barrier__fields-input',\n                        'barrier__fields-barriers-input',\n                        `barrier__fields-barriers-${input_class}-input`\n                    )}\n                    format={format}\n                    onChange={onChange}\n                    onClick={onClick}\n                    is_float\n                    is_signed\n                    setCurrentFocus={setCurrentFocus}\n                    is_read_only\n                />\n                {barrier_count === 2 && (\n                    <LabeledQuantityInputMobile\n                        input_label={localize('Barrier 2')}\n                        id='dt_barrier_2_input'\n                        type='number'\n                        name='barrier_2'\n                        value={barrier_2}\n                        is_incrementable={!is_absolute_barrier}\n                        is_incrementable_on_long_press={!is_absolute_barrier}\n                        is_negative_disabled={is_absolute_barrier}\n                        className={`barrier__fields-${input_class}`}\n                        classNameInput={classNames(\n                            'barrier__fields-input',\n                            'barrier__fields-barriers-input',\n                            `barrier__fields-barriers-${input_class}-input`\n                        )}\n                        format={format}\n                        onChange={onChange}\n                        onClick={onClick}\n                        is_float\n                        is_signed\n                        setCurrentFocus={setCurrentFocus}\n                        is_read_only\n                    />\n                )}\n            </MobileWrapper>\n        </React.Fragment>\n    );\n});\n\nBarrier.propTypes = {\n    is_absolute_only: PropTypes.bool,\n    is_minimized: PropTypes.bool,\n};\n\nexport default Barrier;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { isDesktop } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport NumberSelector from 'App/Components/Form/number-selector.jsx';\nimport Fieldset from 'App/Components/Form/fieldset.jsx';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst LastDigit = observer(({ is_minimized }) => {\n    const { onChange, last_digit } = useTraderStore();\n    if (is_minimized) {\n        return <div className='fieldset-minimized'>{`${localize('Last Digit')}: ${last_digit}`}</div>;\n    }\n    const arr_five = [...Array(5).keys()];\n    return (\n        <Fieldset\n            className='trade-container__fieldset'\n            header={isDesktop() ? localize('Last Digit Prediction') : null}\n            is_center\n        >\n            <NumberSelector\n                arr_arr_numbers={[arr_five, arr_five.map(i => i + 5)]}\n                name='last_digit'\n                onChange={onChange}\n                selected_number={+last_digit}\n            />\n        </Fieldset>\n    );\n});\n\nLastDigit.propTypes = {\n    is_minimized: PropTypes.bool,\n    last_digit: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    onChange: PropTypes.func,\n};\n\nexport default LastDigit;\n","import React from 'react';\nimport { Localize, localize } from '@deriv/translations';\nimport { Div100vhContainer, Modal, Popover, RadioGroup } from '@deriv/components';\nimport classNames from 'classnames';\n\nconst StrikeParamModal = ({ is_open, toggleModal, strike, onChange, name, strike_price_list, vanilla_trade_type }) => (\n    <Modal\n        className='trade-params'\n        is_open={is_open}\n        should_header_stick_body={false}\n        is_title_centered\n        toggleModal={toggleModal}\n        height='auto'\n        width='calc(100vw - 32px)'\n        title={localize('Strike')}\n    >\n        <Div100vhContainer className='mobile-widget-dialog__wrapper' max_autoheight_offset='48px'>\n            <div className='trade-params__multiplier-ic-info-wrapper'>\n                <Popover\n                    alignment='bottom'\n                    icon='info'\n                    id='dt_multiplier-stake__tooltip'\n                    zIndex={9999}\n                    is_bubble_hover_enabled\n                    message={\n                        <Localize\n                            i18n_default_text='<0>{{trade_type}}:</0> You will get a payout if the market is {{payout_status}} this price <0>at the expiry time.</0> Otherwise, your payout will be zero.'\n                            components={[<strong key={0} />]}\n                            values={{\n                                trade_type:\n                                    vanilla_trade_type === 'VANILLALONGCALL'\n                                        ? localize('For Call')\n                                        : localize('For Put'),\n                                payout_status:\n                                    vanilla_trade_type === 'VANILLALONGCALL' ? localize('above') : localize('below'),\n                            }}\n                        />\n                    }\n                    classNameWrapper='trade-params--modal-wrapper'\n                    classNameBubble='trade-params--modal-wrapper__content'\n                />\n            </div>\n            <div className={classNames('trade-params__amount-keypad', 'trade-params--mobile-strike')}>\n                <RadioGroup name={name} className='trade-params__amount--mobile' onToggle={onChange} selected={strike}>\n                    {strike_price_list.map(item => (\n                        <RadioGroup.Item key={item.key} value={String(item.value)} label={item.value} />\n                    ))}\n                </RadioGroup>\n            </div>\n        </Div100vhContainer>\n    </Modal>\n);\n\nexport default StrikeParamModal;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { DesktopWrapper, InputField, MobileWrapper, Dropdown, Text, Icon } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { toMoment } from '@deriv/shared';\nimport Fieldset from 'App/Components/Form/fieldset.jsx';\nimport StrikeParamModal from 'Modules/Trading/Containers/strike-param-modal';\nimport './strike-field.scss';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst Strike = observer(() => {\n    const { ui, common } = useStore();\n    const { barrier_1, onChange, validation_errors, strike_price_choices, expiry_type, expiry_date } = useTraderStore();\n    const { current_focus, setCurrentFocus, advanced_duration_unit, vanilla_trade_type } = ui;\n    const { server_time } = common;\n\n    const [is_open, setIsOpen] = React.useState(false);\n    const [should_open_dropdown, setShouldOpenDropdown] = React.useState(false);\n    const [selected_value, setSelectedValue] = React.useState(barrier_1);\n\n    React.useEffect(() => {\n        setSelectedValue(barrier_1);\n    }, [barrier_1]);\n\n    const toggleWidget = () => setIsOpen(!is_open);\n\n    const is_24_hours_contract = expiry_date ? toMoment(expiry_date).isSame(toMoment(server_time), 'day') : false;\n\n    const is_relative_strike_applicable =\n        expiry_type === 'endtime' ? is_24_hours_contract : advanced_duration_unit !== 'd';\n\n    const strike_price_list = strike_price_choices.map(strike_price => ({\n        text: strike_price,\n        value: strike_price,\n    }));\n\n    if (should_open_dropdown) {\n        return (\n            <section className='strike-field'>\n                <div className='strike-field--header'>\n                    <Text weight='bold' size='xs'>\n                        {localize('Strike Prices')}\n                    </Text>\n                    <Icon icon='IcCross' onClick={() => setShouldOpenDropdown(false)} />\n                </div>\n                <div className='strike-field--body'>\n                    {strike_price_list.map(strike => (\n                        <Text\n                            size='xs'\n                            line_height='xl'\n                            key={strike.key}\n                            className={classNames('strike-field--body-item', {\n                                'dc-list__item--selected': selected_value === strike.value,\n                            })}\n                            onClick={() => {\n                                setSelectedValue(strike.value);\n                                setShouldOpenDropdown(false);\n                                onChange({ target: { name: 'barrier_1', value: strike.value } });\n                            }}\n                        >\n                            {strike.value}\n                        </Text>\n                    ))}\n                </div>\n            </section>\n        );\n    }\n\n    return (\n        <React.Fragment>\n            <DesktopWrapper>\n                <Fieldset\n                    className='trade-container__fieldset trade-container__barriers'\n                    header={localize('Strike price')}\n                    header_tooltip={\n                        <Localize\n                            i18n_default_text='<0>{{trade_type}}:</0> You will get a payout if the market price is {{payout_status}} this price <0>at the expiry time.</0> Otherwise, your payout will be zero.'\n                            components={[<strong key={0} />]}\n                            values={{\n                                trade_type:\n                                    vanilla_trade_type === 'VANILLALONGCALL'\n                                        ? localize('For Call')\n                                        : localize('For Put'),\n                                payout_status:\n                                    vanilla_trade_type === 'VANILLALONGCALL' ? localize('above') : localize('below'),\n                            }}\n                        />\n                    }\n                >\n                    {!is_relative_strike_applicable ? (\n                        <InputField\n                            type='number'\n                            name='barrier_1'\n                            value={selected_value}\n                            className='trade-container__barriers-single'\n                            classNameInput={classNames(\n                                'trade-container__input',\n                                'trade-container__barriers-input',\n                                'trade-container__barriers-single-input'\n                            )}\n                            current_focus={current_focus}\n                            error_messages={validation_errors?.barrier_1 || []}\n                            is_float\n                            is_signed\n                            is_read_only\n                            setCurrentFocus={setCurrentFocus}\n                            onClick={() => setShouldOpenDropdown(true)}\n                        />\n                    ) : (\n                        <div className='trade-container__strike-field'>\n                            <Text size='s' className='strike-field--text'>\n                                {localize('Spot')}\n                            </Text>\n                            <Dropdown\n                                classNameDisplay='dc-dropdown__display--duration'\n                                disabled={false}\n                                id='strike'\n                                is_alignment_left\n                                is_nativepicker={false}\n                                list={strike_price_list}\n                                name='barrier_1'\n                                no_border={true}\n                                onChange={onChange}\n                                value={barrier_1}\n                            />\n                        </div>\n                    )}\n                </Fieldset>\n            </DesktopWrapper>\n            <MobileWrapper>\n                <div className='mobile-widget__wrapper'>\n                    <div className='strike-widget' onClick={toggleWidget}>\n                        <div className='mobile-widget__spot'>{<Text size='xs'>{localize('Spot')}</Text>}</div>\n                        <div className='mobile-widget__amount'>{barrier_1}</div>\n                        <div className='mobile-widget__type'>{localize('Strike price')}</div>\n                    </div>\n                    <StrikeParamModal\n                        is_open={is_open}\n                        toggleModal={toggleWidget}\n                        strike={barrier_1}\n                        onChange={onChange}\n                        name='barrier_1'\n                        strike_price_list={strike_price_list}\n                        vanilla_trade_type={vanilla_trade_type}\n                    />\n                </div>\n            </MobileWrapper>\n        </React.Fragment>\n    );\n});\n\nexport default Strike;\n","import React from 'react';\nimport { ButtonToggle } from '@deriv/components';\nimport Fieldset from 'App/Components/Form/fieldset.jsx';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst VanillaTradeTypes = observer(() => {\n    const { ui } = useStore();\n    const { onChange } = useTraderStore();\n    const { onChangeUiStore, vanilla_trade_type } = ui;\n\n    const changeTradeType = ({ target }) => {\n        const { name, value } = target;\n\n        onChange({ target: { name, value } });\n        onChangeUiStore({ name, value });\n    };\n\n    return (\n        <Fieldset className='trade-container__fieldset'>\n            <ButtonToggle\n                buttons_arr={[\n                    { text: 'Call', value: 'VANILLALONGCALL' },\n                    { text: 'Put', value: 'VANILLALONGPUT' },\n                ]}\n                id='dt_vanilla_trade_types_toggle'\n                is_animated={true}\n                name='vanilla_trade_type'\n                onChange={changeTradeType}\n                value={vanilla_trade_type}\n            />\n        </Fieldset>\n    );\n});\n\nexport default VanillaTradeTypes;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { Text } from '@deriv/components';\n\nconst AccumulatorTradeDescription = ({ onClick }: { onClick: () => void }) => {\n    const content = [\n        'Accumulators allow you to express a view on the range of movement of an index and grow your stake exponentially at a fixed <0>growth rate</0>.',\n        'Your <0>payout</0> is the sum of your inital stake and profit.',\n        'Your stake will continue to grow as long as the current spot price remains within a specified <0>range</0> from the <0>previous spot price</0>. Otherwise, you lose your stake and the trade is terminated.',\n        'You can close your trade anytime. However, be aware of <0>slippage risk<0/>.',\n    ];\n\n    return (\n        <React.Fragment>\n            {content.map(text => (\n                <Text as='p' key={text.substring(0, 6)}>\n                    <Localize\n                        i18n_default_text={text}\n                        components={[\n                            <span className='contract-type-info__content-definition' onClick={onClick} key={0} />,\n                        ]}\n                    />\n                </Text>\n            ))}\n        </React.Fragment>\n    );\n};\n\nexport default AccumulatorTradeDescription;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Text } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport AccumulatorTradeDescription from './accumulator-trade-description';\n\n// Templates are from Binary 1.0, it should be checked if they need change or not and add all of trade types\n// TODO: refactor the rest of descriptions to use them as components like AccumulatorTradeDescription\nconst TradeCategories = ({ category, onClick }) => {\n    let TradeTypeTemplate;\n    if (category) {\n        switch (category) {\n            case 'accumulator':\n                TradeTypeTemplate = <AccumulatorTradeDescription onClick={onClick} />;\n                break;\n            case 'rise_fall':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Rise\", you win the payout if the exit spot is strictly higher than the entry spot.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Fall\", you win the payout if the exit spot is strictly lower than the entry spot.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Allow equals\", you win the payout if exit spot is higher than or equal to entry spot for \"Rise\". Similarly, you win the payout if exit spot is lower than or equal to entry spot for \"Fall\".'\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'rise_fall_equal':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Rise\", you win the payout if the exit spot is strictly higher than the entry spot.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Fall\", you win the payout if the exit spot is strictly lower than the entry spot.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Allow equals\", you win the payout if exit spot is higher than or equal to entry spot for \"Rise\". Similarly, you win the payout if exit spot is lower than or equal to entry spot for \"Fall\".'\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'high_low':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Higher\", you win the payout if the exit spot is strictly higher than the barrier.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Lower\", you win the payout if the exit spot is strictly lower than the barrier.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\"If the exit spot is equal to the barrier, you don't win the payout.\")}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'end':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Ends Between\", you win the payout if the exit spot is strictly higher than the Low barrier AND strictly lower than the High barrier.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Ends Outside\", you win the payout if the exit spot is EITHER strictly higher than the High barrier, OR strictly lower than the Low barrier.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                \"If the exit spot is equal to either the Low barrier or the High barrier, you don't win the payout.\"\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'stay':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Stays Between\", you win the payout if the market stays between (does not touch) either the High barrier or the Low barrier at any time during the contract period'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Goes Outside\", you win the payout if the market touches either the High barrier or the Low barrier at any time during the contract period.'\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'match_diff':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Matches\", you will win the payout if the last digit of the last tick is the same as your prediction.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Differs\", you will win the payout if the last digit of the last tick is not the same as your prediction.'\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'even_odd':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Even\", you will win the payout if the last digit of the last tick is an even number (i.e., 2, 4, 6, 8, or 0).'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Odd\", you will win the payout if the last digit of the last tick is an odd number (i.e., 1, 3, 5, 7, or 9).'\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'over_under':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Over\", you will win the payout if the last digit of the last tick is greater than your prediction.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Under\", you will win the payout if the last digit of the last tick is less than your prediction.'\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'touch':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Touch\", you win the payout if the market touches the barrier at any time during the contract period.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"No Touch\", you win the payout if the market never touches the barrier at any time during the contract period.'\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'asian':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'Asian options settle by comparing the last tick with the average spot over the period.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Asian Rise\", you will win the payout if the last tick is higher than the average of the ticks.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Asian Fall\", you will win the payout if the last tick is lower than the average of the ticks.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                \"If the last tick is equal to the average of the ticks, you don't win the payout.\"\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'run_high_low':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Only Ups\", you win the payout if consecutive ticks rise successively after the entry spot. No payout if any tick falls or is equal to any of the previous ticks.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Only Downs\", you win the payout if consecutive ticks fall successively after the entry spot. No payout if any tick rises or is equal to any of the previous ticks.'\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'reset':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Reset-Up”, you win the payout if the exit spot is strictly higher than either the entry spot or the spot at reset time.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Reset-Down”, you win the payout if the exit spot is strictly lower than either the entry spot or the spot at reset time.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                \"If the exit spot is equal to the barrier or the new barrier (if a reset occurs), you don't win the payout.\"\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'callputspread':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <h2>{localize('Spread Up')}</h2>\n                        <Text as='p'>\n                            {localize(\n                                'Win maximum payout if the exit spot is higher than or equal to the upper barrier.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'Win up to maximum payout if exit spot is between lower and upper barrier, in proportion to the difference between exit spot and lower barrier.'\n                            )}\n                        </Text>\n                        <Text as='p'>{localize('No payout if exit spot is below or equal to the lower barrier.')}</Text>\n                        <h2>{localize('Spread Down')}</h2>\n                        <Text as='p'>\n                            {localize(\n                                'Win maximum payout if the exit spot is lower than or equal to the lower barrier.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'Win up to maximum payout if exit spot is between lower and upper barrier, in proportion to the difference between upper barrier and exit spot.'\n                            )}\n                        </Text>\n                        <Text as='p'>{localize('No payout if exit spot is above or equal to the upper barrier.')}</Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'tick_high_low':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"High Tick\", you win the payout if the selected tick is the highest among the next five ticks.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select \"Low Tick\", you win the payout if the selected tick is the lowest among the next five ticks.'\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'lb_high_low':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'By purchasing the \"High-to-Low\" contract, you\\'ll win the multiplier times the difference between the high and low over the duration of the contract.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'The high is the highest point ever reached by the market during the contract period.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'The low is the lowest point ever reached by the market during the contract period.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'The close is the latest tick at or before the end time. If you selected a specific end time, the end time is the selected time.'\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'lb_put':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'By purchasing the \"High-to-Close\" contract, you\\'ll win the multiplier times the difference between the high and close over the duration of the contract.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'The high is the highest point ever reached by the market during the contract period.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'The low is the lowest point ever reached by the market during the contract period.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'The close is the latest tick at or before the end time. If you selected a specific end time, the end time is the selected time.'\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'lb_call':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'By purchasing the \"Close-to-Low\" contract, you\\'ll win the multiplier times the difference between the close and low over the duration of the contract.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'The high is the highest point ever reached by the market during the contract period.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'The low is the lowest point ever reached by the market during the contract period.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'The close is the latest tick at or before the end time. If you selected a specific end time, the end time is the selected time.'\n                            )}\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'multiplier':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'Predict the market direction and select either “Up” or “Down” to open a position. We will charge a commission when you open a position.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select “Up”, you will earn a profit by closing your position when the market price is higher than the entry spot.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'If you select “Down”, you will earn a profit by closing your position when the market price is lower than the entry spot.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'Your profit is the percentage change in market price times your stake and the multiplier of your choice.'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            {localize(\n                                'The stop-out level on the chart indicates the price at which your potential loss equals your entire stake. When the market price reaches this level, your position will be closed automatically. This ensures that your loss does not exceed the amount you paid to purchase the contract.'\n                            )}\n                        </Text>\n                        <Text as='p'>{localize('These are optional parameters for each position that you open:')}</Text>\n                        <ul>\n                            <li>\n                                {localize(\n                                    'If you select “Take profit” and specify an amount that you’d like to earn, your position will be closed automatically when your profit is more than or equals to this amount. Your profit may be more than the amount you entered depending on the market price at closing.'\n                                )}\n                            </li>\n                            <li>\n                                {localize(\n                                    'If you select “Stop loss” and specify an amount to limit your loss, your position will be closed automatically when your loss is more than or equals to this amount. Your loss may be more than the amount you entered depending on the market price at closing.'\n                                )}\n                            </li>\n                            <li>\n                                {localize(\n                                    'If you select “Deal cancellation”, you’ll be able to cancel your trade within a chosen time frame should the market move against your favour. We’ll charge a small fee for this, but we’ll return your stake amount without profit or loss. If the stop-out amount is reached before the deal cancellation expires, your position will be cancelled automatically and we’ll return your stake amount without profit or loss.'\n                                )}\n                            </li>\n                            <Text as='p'>{localize('While “Deal cancellation” is active:')}</Text>\n                            <ul>\n                                <li>\n                                    {localize(\n                                        '“Stop loss” is deactivated and will only be available when “Deal cancellation” expires.'\n                                    )}\n                                </li>\n                                <li>\n                                    {localize(\n                                        '“Take profit” cannot be updated. You may update it only when “Deal cancellation” expires.'\n                                    )}\n                                </li>\n                            </ul>\n                        </ul>\n                        <Text as='p'>\n                            {localize(\n                                'The entry spot is the market price when your contract is processed by our servers.'\n                            )}\n                        </Text>\n                        <Text as='p'>{localize('The exit spot is the market price when the contract is closed.')}</Text>\n                    </React.Fragment>\n                );\n                break;\n            case 'vanilla':\n                TradeTypeTemplate = (\n                    <React.Fragment>\n                        <Text as='p'>\n                            {localize(\n                                'Vanilla options allow you to predict an upward (bullish) or downward (bearish) direction of the underlying asset by purchasing a \"Call\" or a \"Put\".'\n                            )}\n                        </Text>\n                        <Text as='p'>\n                            <Localize\n                                i18n_default_text='If you select <0>\"Call\"</0>, you’ll earn a <1>payout</1> if the <1>final price</1> is above the <1>strike price</1> at <1>expiry</1>. Otherwise, you won’t receive a payout.'\n                                components={[\n                                    <strong key={0} />,\n                                    <span\n                                        className='contract-type-info__content-definition'\n                                        onClick={onClick}\n                                        key={1}\n                                    />,\n                                ]}\n                            />\n                        </Text>\n                        <Text as='p'>\n                            <Localize\n                                i18n_default_text='If you select <0>\"Put\"</0>, you’ll earn a payout if the final price is below the strike price at expiry. Otherwise, you won’t receive a payout.'\n                                components={[<strong key={0} />]}\n                            />\n                        </Text>\n                        <Text as='p'>\n                            <Localize\n                                i18n_default_text='Your payout is equal to the <0>payout per point</0> multiplied by the difference between the final price and the strike price. You will only earn a profit if your payout is higher than your initial stake.'\n                                components={[\n                                    <span\n                                        className='contract-type-info__content-definition'\n                                        onClick={onClick}\n                                        key={0}\n                                    />,\n                                ]}\n                            />\n                        </Text>\n                        <Text as='p'>\n                            <Localize\n                                i18n_default_text='You may sell the contract up until 60 seconds before expiry. If you do, we’ll pay you the <0>contract value</0>.'\n                                components={[\n                                    <span\n                                        className='contract-type-info__content-definition'\n                                        onClick={onClick}\n                                        key={0}\n                                    />,\n                                ]}\n                            />\n                        </Text>\n                    </React.Fragment>\n                );\n                break;\n            default:\n                TradeTypeTemplate = <Text as='p'>{localize('Description not found.')}</Text>;\n                break;\n        }\n    }\n    return <>{TradeTypeTemplate}</>;\n};\n\nTradeCategories.propTypes = {\n    category: PropTypes.string,\n    onClick: PropTypes.func,\n};\n\nexport default TradeCategories;\n","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 89.96h32.77c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38H40.6c-3.21 0-5.82-2.41-5.82-5.39 0-2.97 2.6-5.39 5.83-5.39h64.08c3.22 0 5.83-2.4 5.83-5.38s-2.6-5.4-5.83-5.4H55.16v-.04c-2.91-.34-5.1-2.63-5.1-5.34 0-2.72 2.19-5 5.1-5.35v-.04h20.4c3.21 0 5.82-2.41 5.82-5.39 0-2.97-2.6-5.39-5.83-5.39H48.61c-3.22 0-5.83-2.4-5.83-5.39s2.6-5.38 5.83-5.38h138.37c3.22 0 5.83 2.4 5.83 5.38s-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.4-5.82 5.38s2.61 5.39 5.83 5.39h32.04c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39h-17.48c-3.21 0-5.82 2.4-5.82 5.38s2.6 5.4 5.82 5.4h9.47zm-126-43.1c3.23 0 5.84 2.4 5.84 5.39 0 2.97-2.61 5.38-5.83 5.38s-5.83-2.4-5.83-5.38 2.61-5.4 5.83-5.4zM168.05 25.3h40.79c3.21 0 5.82 2.42 5.82 5.4 0 2.97-2.6 5.38-5.82 5.38h-40.79c-3.21 0-5.82-2.41-5.82-5.39s2.6-5.39 5.82-5.39zm-24.76 0c3.22 0 5.83 2.42 5.83 5.4 0 2.97-2.61 5.38-5.83 5.38s-5.82-2.41-5.82-5.39 2.6-5.39 5.82-5.39zm70.64 21.56h10.2c3.22 0 5.83 2.4 5.83 5.39 0 2.97-2.61 5.38-5.83 5.38h-10.2c-3.21 0-5.82-2.4-5.82-5.38s2.6-5.4 5.82-5.4zM188.43 68.4h21.85c3.22 0 5.83 2.41 5.83 5.39s-2.6 5.39-5.83 5.39h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm20.4 21.55h32.04c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38h-32.04c-3.22 0-5.83-2.41-5.83-5.39 0-2.97 2.61-5.39 5.83-5.39zm-139.1 21.56h65.54c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39H69.73c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm87.39 0h10.2c3.21 0 5.82 2.41 5.82 5.39s-2.6 5.39-5.82 5.39h-10.2c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.61-5.38 5.83-5.38z\" /><path fill=\"#85ACB0\" d=\"M177.83 90.67v8.43h-33.74v-8.43h33.74zm33.74-25.3v8.43h-67.48v-8.44h67.48zm0-25.3v8.43h-67.48v-8.44h67.48z\" /><path fill=\"#FF444F\" d=\"M183.8 73.8l19.33 19.36V86.4a8.4 8.4 0 018.4-8.4h.04V99.1a8.43 8.43 0 01-8.44 8.43h-21.08v-.04a8.4 8.4 0 018.37-8.39h6.75l-25.3-25.3h11.92zm-25.31-25.3l12.65 12.65h-11.92L146.57 48.5h11.92z\" /><path fill=\"#85ACB0\" d=\"M127.57 99.1v8.44H60.09V99.1h67.48zm0-25.3v8.43H60.09V73.8h67.48zM93.83 48.5v8.43H60.09V48.5h33.74z\" /><path fill=\"#FF444F\" d=\"M87.14 86.45L74.5 99.1H62.56l12.65-12.65h11.93zm32-46.39a8.43 8.43 0 018.43 8.44v21.08h-.05a8.4 8.4 0 01-8.39-8.37v-6.75L99.8 73.8H87.9l25.3-25.3h-6.75a8.4 8.4 0 01-8.4-8.4v-.04h21.1z\" /></g></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 89.96h32.77c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38H40.6c-3.21 0-5.82-2.41-5.82-5.39 0-2.97 2.6-5.39 5.83-5.39h64.08c3.22 0 5.83-2.4 5.83-5.38s-2.6-5.4-5.83-5.4H55.16v-.04c-2.91-.34-5.1-2.63-5.1-5.34 0-2.72 2.19-5 5.1-5.35v-.04h20.4c3.21 0 5.82-2.41 5.82-5.39 0-2.97-2.6-5.39-5.83-5.39H48.61c-3.22 0-5.83-2.4-5.83-5.39s2.6-5.38 5.83-5.38h138.37c3.22 0 5.83 2.4 5.83 5.38s-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.4-5.82 5.38s2.61 5.39 5.83 5.39h32.04c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39h-17.48c-3.21 0-5.82 2.4-5.82 5.38s2.6 5.4 5.82 5.4h9.47zm-126-43.1c3.23 0 5.84 2.4 5.84 5.39 0 2.97-2.61 5.38-5.83 5.38s-5.83-2.4-5.83-5.38 2.61-5.4 5.83-5.4zM168.05 25.3h40.79c3.21 0 5.82 2.42 5.82 5.4 0 2.97-2.6 5.38-5.82 5.38h-40.79c-3.21 0-5.82-2.41-5.82-5.39s2.6-5.39 5.82-5.39zm-24.76 0c3.22 0 5.83 2.42 5.83 5.4 0 2.97-2.61 5.38-5.83 5.38s-5.82-2.41-5.82-5.39 2.6-5.39 5.82-5.39zm70.64 21.56h10.2c3.22 0 5.83 2.4 5.83 5.39 0 2.97-2.61 5.38-5.83 5.38h-10.2c-3.21 0-5.82-2.4-5.82-5.38s2.6-5.4 5.82-5.4zM188.43 68.4h21.85c3.22 0 5.83 2.41 5.83 5.39s-2.6 5.39-5.83 5.39h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm20.4 21.55h32.04c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38h-32.04c-3.22 0-5.83-2.41-5.83-5.39 0-2.97 2.61-5.39 5.83-5.39zm-139.1 21.56h65.54c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39H69.73c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm87.39 0h10.2c3.21 0 5.82 2.41 5.82 5.39s-2.6 5.39-5.82 5.39h-10.2c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.61-5.38 5.83-5.38z\" /><path fill=\"#85ACB0\" d=\"M169.74 99.1v8.44h-67.48V99.1h67.48zm-4.22-59.04v54.82h-8.44V40.06h8.44z\" /><path fill=\"#FF444F\" d=\"M120.91 86.45l-4.2 4.22-14.45 4.21v-8.43h18.65zm19.3-33.74a8.43 8.43 0 018.44 8.44l-.04 21.08a8.43 8.43 0 01-8.4-8.43V67.1l-16.86 16.9V72.05l10.9-10.9h-6.68a8.46 8.46 0 01-8.44-8.44h21.09z\" /></g></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 89.96h32.77c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38H40.6c-3.21 0-5.82-2.41-5.82-5.39 0-2.97 2.6-5.39 5.83-5.39h64.08c3.22 0 5.83-2.4 5.83-5.38s-2.6-5.4-5.83-5.4H55.16v-.04c-2.91-.34-5.1-2.63-5.1-5.34 0-2.72 2.19-5 5.1-5.35v-.04h20.4c3.21 0 5.82-2.41 5.82-5.39 0-2.97-2.6-5.39-5.83-5.39H48.61c-3.22 0-5.83-2.4-5.83-5.39s2.6-5.38 5.83-5.38h138.37c3.22 0 5.83 2.4 5.83 5.38s-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.4-5.82 5.38s2.61 5.39 5.83 5.39h32.04c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39h-17.48c-3.21 0-5.82 2.4-5.82 5.38s2.6 5.4 5.82 5.4h9.47zm-126-43.1c3.23 0 5.84 2.4 5.84 5.39 0 2.97-2.61 5.38-5.83 5.38s-5.83-2.4-5.83-5.38 2.61-5.4 5.83-5.4zM168.05 25.3h40.79c3.21 0 5.82 2.42 5.82 5.4 0 2.97-2.6 5.38-5.82 5.38h-40.79c-3.21 0-5.82-2.41-5.82-5.39s2.6-5.39 5.82-5.39zm-24.76 0c3.22 0 5.83 2.42 5.83 5.4 0 2.97-2.61 5.38-5.83 5.38s-5.82-2.41-5.82-5.39 2.6-5.39 5.82-5.39zm70.64 21.56h10.2c3.22 0 5.83 2.4 5.83 5.39 0 2.97-2.61 5.38-5.83 5.38h-10.2c-3.21 0-5.82-2.4-5.82-5.38s2.6-5.4 5.82-5.4zM188.43 68.4h21.85c3.22 0 5.83 2.41 5.83 5.39s-2.6 5.39-5.83 5.39h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm20.4 21.55h32.04c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38h-32.04c-3.22 0-5.83-2.41-5.83-5.39 0-2.97 2.61-5.39 5.83-5.39zm-139.1 21.56h65.54c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39H69.73c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm87.39 0h10.2c3.21 0 5.82 2.41 5.82 5.39s-2.6 5.39-5.82 5.39h-10.2c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.61-5.38 5.83-5.38z\" /><path fill=\"#85ACB0\" d=\"M211.57 99.1v8.44h-67.48V99.1h67.48zm-33.74-25.3v8.43h-33.74V73.8h33.74zm33.74 0v8.43h-13.02L207 73.8h4.58z\" /><path fill=\"#FF444F\" d=\"M203.13 55.18L189.25 41.3l-.03.03a8.4 8.4 0 000 11.86l3.73 3.74H169.4v8.43h23.55l-3.73 3.74a8.4 8.4 0 000 11.87l.03.03 13.88-13.89a8.43 8.43 0 000-11.93z\" /><path fill=\"#85ACB0\" d=\"M127.57 99.1v8.44H60.09V99.1h67.48zm0-59.04v8.44H60.09v-8.44h67.48z\" /><path fill=\"#FF444F\" d=\"M125.1 67.84l-13.9-13.9-.02.04a8.38 8.38 0 000 11.87l3.73 3.73H85.4v8.44h29.52l-3.73 3.73a8.38 8.38 0 000 11.87l.03.03 13.89-13.89a8.43 8.43 0 000-11.92z\" /></g></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"328\" height=\"164\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><rect width=\"328\" height=\"164\" rx=\"6\" fill=\"var(--general-section-1)\" /><path d=\"M186.13 101.34h34.34c3.37 0 6.1 2.88 6.1 6.44 0 3.57-2.73 6.44-6.1 6.44H64.03c-3.36 0-6.1-2.87-6.1-6.44 0-3.56 2.73-6.44 6.11-6.44h67.15c3.38 0 6.11-2.89 6.11-6.45 0-3.55-2.72-6.44-6.1-6.44H79.28v-.06A6.34 6.34 0 0173.95 82c0-3.25 2.29-5.99 5.34-6.4v-.04h21.38c3.36 0 6.1-2.89 6.1-6.44 0-3.57-2.73-6.46-6.11-6.46H72.43c-3.38 0-6.11-2.88-6.11-6.44 0-3.57 2.72-6.44 6.1-6.44h145c3.38 0 6.11 2.87 6.11 6.44 0 3.56-2.73 6.44-6.1 6.44h-56.49c-3.36 0-6.1 2.89-6.1 6.44 0 3.56 2.74 6.45 6.11 6.45h33.58c3.37 0 6.1 2.9 6.1 6.45 0 3.55-2.73 6.44-6.1 6.44H176.2c-3.37 0-6.1 2.89-6.1 6.44 0 3.57 2.72 6.46 6.1 6.46h9.92zM54.1 49.77c3.38 0 6.12 2.88 6.12 6.44 0 3.58-2.74 6.45-6.11 6.45S48 59.78 48 56.22c0-3.57 2.73-6.44 6.11-6.44l-.01-.01zM197.57 24h42.75c3.36 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44h-42.75c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44zm-25.94 0c3.37 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44c-3.38 0-6.1-2.88-6.1-6.44 0-3.57 2.72-6.44 6.1-6.44zm74.02 25.77h10.69c3.37 0 6.1 2.88 6.1 6.44 0 3.58-2.73 6.45-6.1 6.45h-10.69c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44v-.01zm-26.71 25.79h22.9c3.37 0 6.1 2.89 6.1 6.44s-2.72 6.44-6.1 6.44h-22.89c-3.37 0-6.1-2.88-6.1-6.44s2.72-6.44 6.1-6.44h-.01zm21.38 25.78h33.57c3.38 0 6.11 2.88 6.11 6.44 0 3.57-2.73 6.44-6.1 6.44h-33.58c-3.38 0-6.11-2.87-6.11-6.44 0-3.56 2.73-6.44 6.1-6.44zM94.56 127.12h68.68c3.37 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44H94.56c-3.38 0-6.11-2.88-6.11-6.44s2.72-6.44 6.1-6.44zm91.57 0h10.69c3.36 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44h-10.69c-3.37 0-6.1-2.88-6.1-6.44s2.73-6.44 6.1-6.44z\" fill=\"var(--fill-normal)\" /><g clipPath=\"url(#prefix__clip0_8025_91454)\"><path d=\"M109 89v21H88V89h21zm35-35v21h-21V54h21z\" fill=\"#85ACB0\" /><path d=\"M144 89v21h-21V89h21zm-35-35v21H88V54h21z\" fill=\"#FF444F\" /></g><path d=\"M196.25 85.06l12.25 18.38H184l12.25-18.38zm31.5 0L240 103.44h-24.5l12.25-18.38z\" fill=\"#85ACB0\" /><path d=\"M199.75 78.94L212 60.56l12.25 18.38h-24.5z\" fill=\"#FF444F\" /><defs><clipPath id=\"prefix__clip0_8025_91454\"><path fill=\"var(--fill-normal)\" transform=\"translate(88 54)\" d=\"M0 0h56v56H0z\" /></clipPath></defs></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"328\" height=\"164\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><rect width=\"328\" height=\"164\" rx=\"6\" fill=\"var(--general-section-1)\" /><path d=\"M186.13 101.34h34.34c3.37 0 6.1 2.88 6.1 6.44 0 3.57-2.73 6.44-6.1 6.44H64.03c-3.36 0-6.1-2.87-6.1-6.44 0-3.56 2.73-6.44 6.11-6.44h67.15c3.38 0 6.11-2.89 6.11-6.45 0-3.55-2.72-6.44-6.1-6.44H79.28v-.06A6.34 6.34 0 0173.95 82c0-3.25 2.29-5.99 5.34-6.4v-.04h21.38c3.36 0 6.1-2.89 6.1-6.44 0-3.57-2.73-6.46-6.11-6.46H72.43c-3.38 0-6.11-2.88-6.11-6.44 0-3.57 2.72-6.44 6.1-6.44h145c3.38 0 6.11 2.87 6.11 6.44 0 3.56-2.73 6.44-6.1 6.44h-56.49c-3.36 0-6.1 2.89-6.1 6.44 0 3.56 2.74 6.45 6.11 6.45h33.58c3.37 0 6.1 2.9 6.1 6.45 0 3.55-2.73 6.44-6.1 6.44H176.2c-3.37 0-6.1 2.89-6.1 6.44 0 3.57 2.72 6.46 6.1 6.46h9.92zM54.1 49.77c3.38 0 6.12 2.88 6.12 6.44 0 3.58-2.74 6.45-6.11 6.45S48 59.78 48 56.22c0-3.57 2.73-6.44 6.11-6.44l-.01-.01zM197.57 24h42.75c3.36 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44h-42.75c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44zm-25.94 0c3.37 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44c-3.38 0-6.1-2.88-6.1-6.44 0-3.57 2.72-6.44 6.1-6.44zm74.02 25.77h10.69c3.37 0 6.1 2.88 6.1 6.44 0 3.58-2.73 6.45-6.1 6.45h-10.69c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44v-.01zm-26.71 25.79h22.9c3.37 0 6.1 2.89 6.1 6.44s-2.72 6.44-6.1 6.44h-22.89c-3.37 0-6.1-2.88-6.1-6.44s2.72-6.44 6.1-6.44h-.01zm21.38 25.78h33.57c3.38 0 6.11 2.88 6.11 6.44 0 3.57-2.73 6.44-6.1 6.44h-33.58c-3.38 0-6.11-2.87-6.11-6.44 0-3.56 2.73-6.44 6.1-6.44zM94.56 127.12h68.68c3.37 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44H94.56c-3.38 0-6.11-2.88-6.11-6.44s2.72-6.44 6.1-6.44zm91.57 0h10.69c3.36 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44h-10.69c-3.37 0-6.1-2.88-6.1-6.44s2.73-6.44 6.1-6.44z\" fill=\"var(--fill-normal)\" /><path d=\"M88 89h56v-7H88v7z\" fill=\"#85ACB0\" /><path d=\"M98.5 92.5v5.55l5.55-5.55h9.9l-14 14H91.5v-14h7zm38.5-35a7 7 0 017 7v14.01h-6.04a6.91 6.91 0 01-.96-3.46v-5.6L124.46 82h-9.9l17.5-17.5h-5.6a6.96 6.96 0 01-6.96-6.96v-.04H137z\" fill=\"#FF444F\" /><path d=\"M184 82h56v-7h-56v7z\" fill=\"#85ACB0\" /><path d=\"M220.45 82L233 94.56v-5.6a6.91 6.91 0 01.95-3.46H240v14a7 7 0 01-7 7h-17.5v-.04a6.96 6.96 0 016.95-6.96h5.6L210.55 82h9.9zm-24.5-24.5l14 14h-9.9l-5.55-5.55v5.55h-7v-14h8.45z\" fill=\"#FF444F\" /></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 89.96h32.77c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38H40.6c-3.21 0-5.82-2.41-5.82-5.39 0-2.97 2.6-5.39 5.83-5.39h64.08c3.22 0 5.83-2.4 5.83-5.38s-2.6-5.4-5.83-5.4H55.16v-.04c-2.91-.34-5.1-2.63-5.1-5.34 0-2.72 2.19-5 5.1-5.35v-.04h20.4c3.21 0 5.82-2.41 5.82-5.39 0-2.97-2.6-5.39-5.83-5.39H48.61c-3.22 0-5.83-2.4-5.83-5.39s2.6-5.38 5.83-5.38h138.37c3.22 0 5.83 2.4 5.83 5.38s-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.4-5.82 5.38s2.61 5.39 5.83 5.39h32.04c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39h-17.48c-3.21 0-5.82 2.4-5.82 5.38s2.6 5.4 5.82 5.4h9.47zm-126-43.1c3.23 0 5.84 2.4 5.84 5.39 0 2.97-2.61 5.38-5.83 5.38s-5.83-2.4-5.83-5.38 2.61-5.4 5.83-5.4zM168.05 25.3h40.79c3.21 0 5.82 2.42 5.82 5.4 0 2.97-2.6 5.38-5.82 5.38h-40.79c-3.21 0-5.82-2.41-5.82-5.39s2.6-5.39 5.82-5.39zm-24.76 0c3.22 0 5.83 2.42 5.83 5.4 0 2.97-2.61 5.38-5.83 5.38s-5.82-2.41-5.82-5.39 2.6-5.39 5.82-5.39zm70.64 21.56h10.2c3.22 0 5.83 2.4 5.83 5.39 0 2.97-2.61 5.38-5.83 5.38h-10.2c-3.21 0-5.82-2.4-5.82-5.38s2.6-5.4 5.82-5.4zM188.43 68.4h21.85c3.22 0 5.83 2.41 5.83 5.39s-2.6 5.39-5.83 5.39h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm20.4 21.55h32.04c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38h-32.04c-3.22 0-5.83-2.41-5.83-5.39 0-2.97 2.61-5.39 5.83-5.39zm-139.1 21.56h65.54c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39H69.73c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm87.39 0h10.2c3.21 0 5.82 2.41 5.82 5.39s-2.6 5.39-5.82 5.39h-10.2c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.61-5.38 5.83-5.38z\" /><path fill=\"#85ACB0\" d=\"M165.52 52.71v54.83h-8.44V52.7h8.44zm4.22-12.65v8.44h-67.48v-8.44h67.48z\" /><path fill=\"#FF444F\" d=\"M123.35 63.59l16.87 16.9v-6.7a8.43 8.43 0 018.39-8.43l.04 21.09a8.43 8.43 0 01-8.43 8.43h-21.09a8.46 8.46 0 018.44-8.43h6.68l-10.9-10.9V63.58zM102.26 52.7l14.44 4.22 4.21 4.22h-18.65V52.7z\" /></g></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 89.96h32.77c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38H40.6c-3.21 0-5.82-2.41-5.82-5.39 0-2.97 2.6-5.39 5.83-5.39h64.08c3.22 0 5.83-2.4 5.83-5.38s-2.6-5.4-5.83-5.4H55.16v-.04c-2.91-.34-5.1-2.63-5.1-5.34 0-2.72 2.19-5 5.1-5.35v-.04h20.4c3.21 0 5.82-2.41 5.82-5.39 0-2.97-2.6-5.39-5.83-5.39H48.61c-3.22 0-5.83-2.4-5.83-5.39s2.6-5.38 5.83-5.38h138.37c3.22 0 5.83 2.4 5.83 5.38s-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.4-5.82 5.38s2.61 5.39 5.83 5.39h32.04c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39h-17.48c-3.21 0-5.82 2.4-5.82 5.38s2.6 5.4 5.82 5.4h9.47zm-126-43.1c3.23 0 5.84 2.4 5.84 5.39 0 2.97-2.61 5.38-5.83 5.38s-5.83-2.4-5.83-5.38 2.61-5.4 5.83-5.4zM168.05 25.3h40.79c3.21 0 5.82 2.42 5.82 5.4 0 2.97-2.6 5.38-5.82 5.38h-40.79c-3.21 0-5.82-2.41-5.82-5.39s2.6-5.39 5.82-5.39zm-24.76 0c3.22 0 5.83 2.42 5.83 5.4 0 2.97-2.61 5.38-5.83 5.38s-5.82-2.41-5.82-5.39 2.6-5.39 5.82-5.39zm70.64 21.56h10.2c3.22 0 5.83 2.4 5.83 5.39 0 2.97-2.61 5.38-5.83 5.38h-10.2c-3.21 0-5.82-2.4-5.82-5.38s2.6-5.4 5.82-5.4zM188.43 68.4h21.85c3.22 0 5.83 2.41 5.83 5.39s-2.6 5.39-5.83 5.39h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm20.4 21.55h32.04c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38h-32.04c-3.22 0-5.83-2.41-5.83-5.39 0-2.97 2.61-5.39 5.83-5.39zm-139.1 21.56h65.54c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39H69.73c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm87.39 0h10.2c3.21 0 5.82 2.41 5.82 5.39s-2.6 5.39-5.82 5.39h-10.2c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.61-5.38 5.83-5.38z\" /><path fill=\"#85ACB0\" d=\"M169.74 99.1v8.44h-67.48V99.1h67.48zm-4.22-46.39v42.17h-8.44V52.71h8.44zm4.22-12.65v8.44h-67.48v-8.44h67.48z\" /><path fill=\"#FF444F\" d=\"M120.91 86.45l-4.2 4.22-14.45 4.21v-8.43h18.65zm19.3-33.74a8.43 8.43 0 018.44 8.44l-.04 21.08a8.43 8.43 0 01-8.4-8.43V67.1l-16.86 16.9V72.05l10.9-10.9h-6.68a8.46 8.46 0 01-8.44-8.44h21.09z\" /></g></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"328\" height=\"164\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><rect width=\"328\" height=\"164\" rx=\"6\" fill=\"var(--general-section-1)\" /><path d=\"M186.13 101.34h34.34c3.37 0 6.1 2.88 6.1 6.44 0 3.57-2.73 6.44-6.1 6.44H64.03c-3.36 0-6.1-2.87-6.1-6.44 0-3.56 2.73-6.44 6.11-6.44h67.15c3.38 0 6.11-2.89 6.11-6.45 0-3.55-2.72-6.44-6.1-6.44H79.28v-.06A6.34 6.34 0 0173.95 82c0-3.25 2.29-5.99 5.34-6.4v-.04h21.38c3.36 0 6.1-2.89 6.1-6.44 0-3.57-2.73-6.46-6.11-6.46H72.43c-3.38 0-6.11-2.88-6.11-6.44 0-3.57 2.72-6.44 6.1-6.44h145c3.38 0 6.11 2.87 6.11 6.44 0 3.56-2.73 6.44-6.1 6.44h-56.49c-3.36 0-6.1 2.89-6.1 6.44 0 3.56 2.74 6.45 6.11 6.45h33.58c3.37 0 6.1 2.9 6.1 6.45 0 3.55-2.73 6.44-6.1 6.44H176.2c-3.37 0-6.1 2.89-6.1 6.44 0 3.57 2.72 6.46 6.1 6.46h9.92zM54.1 49.77c3.38 0 6.12 2.88 6.12 6.44 0 3.58-2.74 6.45-6.11 6.45S48 59.78 48 56.22c0-3.57 2.73-6.44 6.11-6.44l-.01-.01zM197.57 24h42.75c3.36 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44h-42.75c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44zm-25.94 0c3.37 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44c-3.38 0-6.1-2.88-6.1-6.44 0-3.57 2.72-6.44 6.1-6.44zm74.02 25.77h10.69c3.37 0 6.1 2.88 6.1 6.44 0 3.58-2.73 6.45-6.1 6.45h-10.69c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44v-.01zm-26.71 25.79h22.9c3.37 0 6.1 2.89 6.1 6.44s-2.72 6.44-6.1 6.44h-22.89c-3.37 0-6.1-2.88-6.1-6.44s2.72-6.44 6.1-6.44h-.01zm21.38 25.78h33.57c3.38 0 6.11 2.88 6.11 6.44 0 3.57-2.73 6.44-6.1 6.44h-33.58c-3.38 0-6.11-2.87-6.11-6.44 0-3.56 2.73-6.44 6.1-6.44zM94.56 127.12h68.68c3.37 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44H94.56c-3.38 0-6.11-2.88-6.11-6.44s2.72-6.44 6.1-6.44zm91.57 0h10.69c3.36 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44h-10.69c-3.37 0-6.1-2.88-6.1-6.44s2.73-6.44 6.1-6.44z\" fill=\"var(--fill-normal)\" /><g clipPath=\"url(#prefix__clip0_8025_92748)\"><path d=\"M96.28 62.2l14.84 14.85a7 7 0 010 9.9L96.27 101.8l-.02-.02a6.96 6.96 0 010-9.85l6.42-6.43-18.67.04V78.5h18.67l-6.42-6.42a6.96 6.96 0 010-9.86l.03-.02zm31.45 0l.02.03a6.96 6.96 0 010 9.85l-6.42 6.42 18.67-.04v7.04h-18.67l6.42 6.42a6.96 6.96 0 010 9.85l-.02.03-12.23-12.23 2.62-2.62a7 7 0 000-9.9l-2.62-2.62 12.23-12.23z\" fill=\"#FF444F\" /><path d=\"M115.5 96v14h-7V96h7zm0-42v14h-7V54h7z\" fill=\"#85ACB0\" /></g><path d=\"M242.25 81.96V89h-18.67l6.42 6.42a6.96 6.96 0 010 9.86l-.02.02L216 91.32l7.87-7.87a6.9 6.9 0 001.08-1.45l17.3-.04zM202.02 55.2l14.85 14.85a7 7 0 010 9.9L202.02 94.8l-.02-.02a6.96 6.96 0 010-9.85l6.42-6.43-18.67.04V71.5h18.67L202 65.08a6.96 6.96 0 010-9.85l.02-.03zm27.96 10.5a6.98 6.98 0 012.07 4.95 6.96 6.96 0 01-1.64 4.48l-.41.45-4.2 4.2a7 7 0 00-1.54-5.8l-.4-.43-.86-.87 6.98-6.98z\" fill=\"#FF444F\" /><path d=\"M221.25 99.5V110h-7V99.5h7zm0-45.5v10.5h-7V54h7z\" fill=\"#85ACB0\" /><defs><clipPath id=\"prefix__clip0_8025_92748\"><path fill=\"var(--fill-normal)\" transform=\"translate(84 54)\" d=\"M0 0h56v56H0z\" /></clipPath></defs></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"328\" height=\"164\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><rect width=\"328\" height=\"164\" rx=\"6\" fill=\"var(--general-section-1)\" /><path d=\"M186.13 101.34h34.34c3.37 0 6.1 2.88 6.1 6.44 0 3.57-2.73 6.44-6.1 6.44H64.03c-3.36 0-6.1-2.87-6.1-6.44 0-3.56 2.73-6.44 6.11-6.44h67.15c3.38 0 6.11-2.89 6.11-6.45 0-3.55-2.72-6.44-6.1-6.44H79.28v-.06A6.34 6.34 0 0173.95 82c0-3.25 2.29-5.99 5.34-6.4v-.04h21.38c3.36 0 6.1-2.89 6.1-6.44 0-3.57-2.73-6.46-6.11-6.46H72.43c-3.38 0-6.11-2.88-6.11-6.44 0-3.57 2.72-6.44 6.1-6.44h145c3.38 0 6.11 2.87 6.11 6.44 0 3.56-2.73 6.44-6.1 6.44h-56.49c-3.36 0-6.1 2.89-6.1 6.44 0 3.56 2.74 6.45 6.11 6.45h33.58c3.37 0 6.1 2.9 6.1 6.45 0 3.55-2.73 6.44-6.1 6.44H176.2c-3.37 0-6.1 2.89-6.1 6.44 0 3.57 2.72 6.46 6.1 6.46h9.92zM54.1 49.77c3.38 0 6.12 2.88 6.12 6.44 0 3.58-2.74 6.45-6.11 6.45S48 59.78 48 56.22c0-3.57 2.73-6.44 6.11-6.44l-.01-.01zM197.57 24h42.75c3.36 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44h-42.75c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44zm-25.94 0c3.37 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44c-3.38 0-6.1-2.88-6.1-6.44 0-3.57 2.72-6.44 6.1-6.44zm74.02 25.77h10.69c3.37 0 6.1 2.88 6.1 6.44 0 3.58-2.73 6.45-6.1 6.45h-10.69c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44v-.01zm-26.71 25.79h22.9c3.37 0 6.1 2.89 6.1 6.44s-2.72 6.44-6.1 6.44h-22.89c-3.37 0-6.1-2.88-6.1-6.44s2.72-6.44 6.1-6.44h-.01zm21.38 25.78h33.57c3.38 0 6.11 2.88 6.11 6.44 0 3.57-2.73 6.44-6.1 6.44h-33.58c-3.38 0-6.11-2.87-6.11-6.44 0-3.56 2.73-6.44 6.1-6.44zM94.56 127.12h68.68c3.37 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44H94.56c-3.38 0-6.11-2.88-6.11-6.44s2.72-6.44 6.1-6.44zm91.57 0h10.69c3.36 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44h-10.69c-3.37 0-6.1-2.88-6.1-6.44s2.73-6.44 6.1-6.44z\" fill=\"var(--fill-normal)\" /><g clipPath=\"url(#prefix__clip0_8025_92038)\"><path d=\"M137 54h-17.5a7 7 0 007 7h5.6L88 104.75V110h5.25L137 65.95v5.55a7 7 0 007 7V61a7 7 0 00-7-7z\" fill=\"#FF444F\" /><path d=\"M124.75 85.5L144 104.75V110h-5.25L119.5 90.75l5.25-5.25zM93.25 54l19.25 19.25-5.25 5.25L88 59.25V54h5.25z\" fill=\"#85ACB0\" /></g><g clipPath=\"url(#prefix__clip1_8025_92038)\"><path d=\"M233 110h-17.5a7 7 0 017-7h5.6L184 59.25V54h5.25L233 98.05V92.5a7 7 0 017-7V103a7 7 0 01-7 7z\" fill=\"#FF444F\" /><path d=\"M203.25 85.5l5.25 5.25L189.25 110H184v-5.25l19.25-19.25zM240 54v5.25L220.75 78.5l-5.25-5.25L234.75 54H240z\" fill=\"#85ACB0\" /></g><defs><clipPath id=\"prefix__clip0_8025_92038\"><path fill=\"var(--fill-normal)\" transform=\"translate(88 54)\" d=\"M0 0h56v56H0z\" /></clipPath><clipPath id=\"prefix__clip1_8025_92038\"><path fill=\"var(--fill-normal)\" transform=\"translate(184 54)\" d=\"M0 0h56v56H0z\" /></clipPath></defs></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"328\" height=\"164\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><rect width=\"328\" height=\"164\" rx=\"6\" fill=\"var(--general-section-1)\" /><path d=\"M186.13 101.34h34.34c3.37 0 6.1 2.88 6.1 6.44 0 3.57-2.73 6.44-6.1 6.44H64.03c-3.36 0-6.1-2.87-6.1-6.44 0-3.56 2.73-6.44 6.11-6.44h67.15c3.38 0 6.11-2.89 6.11-6.45 0-3.55-2.72-6.44-6.1-6.44H79.28v-.06A6.34 6.34 0 0173.95 82c0-3.25 2.29-5.99 5.34-6.4v-.04h21.38c3.36 0 6.1-2.89 6.1-6.44 0-3.57-2.73-6.46-6.11-6.46H72.43c-3.38 0-6.11-2.88-6.11-6.44 0-3.57 2.72-6.44 6.1-6.44h145c3.38 0 6.11 2.87 6.11 6.44 0 3.56-2.73 6.44-6.1 6.44h-56.49c-3.36 0-6.1 2.89-6.1 6.44 0 3.56 2.74 6.45 6.11 6.45h33.58c3.37 0 6.1 2.9 6.1 6.45 0 3.55-2.73 6.44-6.1 6.44H176.2c-3.37 0-6.1 2.89-6.1 6.44 0 3.57 2.72 6.46 6.1 6.46h9.92zM54.1 49.77c3.38 0 6.12 2.88 6.12 6.44 0 3.58-2.74 6.45-6.11 6.45S48 59.78 48 56.22c0-3.57 2.73-6.44 6.11-6.44l-.01-.01zM197.57 24h42.75c3.36 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44h-42.75c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44zm-25.94 0c3.37 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44c-3.38 0-6.1-2.88-6.1-6.44 0-3.57 2.72-6.44 6.1-6.44zm74.02 25.77h10.69c3.37 0 6.1 2.88 6.1 6.44 0 3.58-2.73 6.45-6.1 6.45h-10.69c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44v-.01zm-26.71 25.79h22.9c3.37 0 6.1 2.89 6.1 6.44s-2.72 6.44-6.1 6.44h-22.89c-3.37 0-6.1-2.88-6.1-6.44s2.72-6.44 6.1-6.44h-.01zm21.38 25.78h33.57c3.38 0 6.11 2.88 6.11 6.44 0 3.57-2.73 6.44-6.1 6.44h-33.58c-3.38 0-6.11-2.87-6.11-6.44 0-3.56 2.73-6.44 6.1-6.44zM94.56 127.12h68.68c3.37 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44H94.56c-3.38 0-6.11-2.88-6.11-6.44s2.72-6.44 6.1-6.44zm91.57 0h10.69c3.36 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44h-10.69c-3.37 0-6.1-2.88-6.1-6.44s2.73-6.44 6.1-6.44z\" fill=\"var(--fill-normal)\" /><g clipPath=\"url(#prefix__clip0_8025_92088)\"><path d=\"M107.04 99.5l-6.97 7H90.05l7-7h9.99zm29.96-42a7 7 0 017 7v21h-.04a6.96 6.96 0 01-6.96-6.97v-9.1L116 90.5v-9.95l16.05-16.05h-9.09a6.96 6.96 0 01-6.96-6.97v-.03h21z\" fill=\"#FF444F\" /><path d=\"M144 92.5H88v7h56v-7z\" fill=\"#85ACB0\" /></g><g clipPath=\"url(#prefix__clip1_8025_92088)\"><path d=\"M212 73.5l21 21.07v-9.1a6.96 6.96 0 016.96-6.97h.04v21a7 7 0 01-7 7h-21v-.04a6.96 6.96 0 016.96-6.96h9.1L212 83.45v-9.96zm-15.93-16l6.97 7h-9.99l-7-7h10.02z\" fill=\"#FF444F\" /><path d=\"M240 64.5h-56v7h56v-7z\" fill=\"#85ACB0\" /></g><defs><clipPath id=\"prefix__clip0_8025_92088\"><path fill=\"var(--fill-normal)\" transform=\"translate(88 54)\" d=\"M0 0h56v56H0z\" /></clipPath><clipPath id=\"prefix__clip1_8025_92088\"><path fill=\"var(--fill-normal)\" transform=\"translate(184 54)\" d=\"M0 0h56v56H0z\" /></clipPath></defs></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 89.96h32.77c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38H40.6c-3.21 0-5.82-2.41-5.82-5.39 0-2.97 2.6-5.39 5.83-5.39h64.08c3.22 0 5.83-2.4 5.83-5.38s-2.6-5.4-5.83-5.4H55.16v-.04c-2.91-.34-5.1-2.63-5.1-5.34 0-2.72 2.19-5 5.1-5.35v-.04h20.4c3.21 0 5.82-2.41 5.82-5.39 0-2.97-2.6-5.39-5.83-5.39H48.61c-3.22 0-5.83-2.4-5.83-5.39s2.6-5.38 5.83-5.38h138.37c3.22 0 5.83 2.4 5.83 5.38s-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.4-5.82 5.38s2.61 5.39 5.83 5.39h32.04c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39h-17.48c-3.21 0-5.82 2.4-5.82 5.38s2.6 5.4 5.82 5.4h9.47zm-126-43.1c3.23 0 5.84 2.4 5.84 5.39 0 2.97-2.61 5.38-5.83 5.38s-5.83-2.4-5.83-5.38 2.61-5.4 5.83-5.4zM168.05 25.3h40.79c3.21 0 5.82 2.42 5.82 5.4 0 2.97-2.6 5.38-5.82 5.38h-40.79c-3.21 0-5.82-2.41-5.82-5.39s2.6-5.39 5.82-5.39zm-24.76 0c3.22 0 5.83 2.42 5.83 5.4 0 2.97-2.61 5.38-5.83 5.38s-5.82-2.41-5.82-5.39 2.6-5.39 5.82-5.39zm70.64 21.56h10.2c3.22 0 5.83 2.4 5.83 5.39 0 2.97-2.61 5.38-5.83 5.38h-10.2c-3.21 0-5.82-2.4-5.82-5.38s2.6-5.4 5.82-5.4zM188.43 68.4h21.85c3.22 0 5.83 2.41 5.83 5.39s-2.6 5.39-5.83 5.39h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm20.4 21.55h32.04c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38h-32.04c-3.22 0-5.83-2.41-5.83-5.39 0-2.97 2.61-5.39 5.83-5.39zm-139.1 21.56h65.54c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39H69.73c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm87.39 0h10.2c3.21 0 5.82 2.41 5.82 5.39s-2.6 5.39-5.82 5.39h-10.2c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.61-5.38 5.83-5.38z\" /><path fill=\"#85ACB0\" d=\"M177.83 40.06v67.47h-8.44V40.06h8.44zM160.96 99.1v8.44h-16.87V99.1h16.87zm0-59.04v8.44h-16.87v-8.44h16.87zm50.6 0v8.44h-25.3v-8.44h25.3z\" /><path fill=\"#FF444F\" d=\"M182.05 72.07l21.08 21.09V86.4a8.4 8.4 0 018.4-8.4h.04V99.1a8.43 8.43 0 01-8.44 8.43h-21.08v-.04a8.4 8.4 0 018.37-8.39h6.75L182.05 84V72.06zm-15.13-15.14l2.48 2.47v11.93l-5.97-5.97H144.1v-8.43h22.83z\" /><path fill=\"#85ACB0\" d=\"M76.96 99.1v8.44H60.1V99.1h16.87zm50.6 0v8.44h-25.3V99.1h25.3zM93.84 40.06v67.48h-8.44V40.06h8.44zm-16.87 0v8.44H60.1v-8.44h16.87z\" /><path fill=\"#FF444F\" d=\"M85.4 76.27V88.2l-2.48 2.47H60.1v-8.44h19.34l5.96-5.96zm33.73-36.2a8.43 8.43 0 018.44 8.43v21.08h-.05a8.4 8.4 0 01-8.39-8.37v-6.75L98.05 75.54V63.62l15.14-15.12h-6.75a8.4 8.4 0 01-8.4-8.4v-.04z\" /><path fill=\"#85ACB0\" d=\"M89.61 82.23v1.75l1.75-1.75z\" /></g></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"328\" height=\"164\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><rect width=\"328\" height=\"164\" rx=\"6\" fill=\"var(--general-section-1)\" /><path d=\"M186.13 101.34h34.34c3.37 0 6.1 2.88 6.1 6.44 0 3.57-2.73 6.44-6.1 6.44H64.03c-3.36 0-6.1-2.87-6.1-6.44 0-3.56 2.73-6.44 6.11-6.44h67.15c3.38 0 6.11-2.89 6.11-6.45 0-3.55-2.72-6.44-6.1-6.44H79.28v-.06A6.34 6.34 0 0173.95 82c0-3.25 2.29-5.99 5.34-6.4v-.04h21.38c3.36 0 6.1-2.89 6.1-6.44 0-3.57-2.73-6.46-6.11-6.46H72.43c-3.38 0-6.11-2.88-6.11-6.44 0-3.57 2.72-6.44 6.1-6.44h145c3.38 0 6.11 2.87 6.11 6.44 0 3.56-2.73 6.44-6.1 6.44h-56.49c-3.36 0-6.1 2.89-6.1 6.44 0 3.56 2.74 6.45 6.11 6.45h33.58c3.37 0 6.1 2.9 6.1 6.45 0 3.55-2.73 6.44-6.1 6.44H176.2c-3.37 0-6.1 2.89-6.1 6.44 0 3.57 2.72 6.46 6.1 6.46h9.92zM54.1 49.77c3.38 0 6.12 2.88 6.12 6.44 0 3.58-2.74 6.45-6.11 6.45S48 59.78 48 56.22c0-3.57 2.73-6.44 6.11-6.44l-.01-.01zM197.57 24h42.75c3.36 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44h-42.75c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44zm-25.94 0c3.37 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44c-3.38 0-6.1-2.88-6.1-6.44 0-3.57 2.72-6.44 6.1-6.44zm74.02 25.77h10.69c3.37 0 6.1 2.88 6.1 6.44 0 3.58-2.73 6.45-6.1 6.45h-10.69c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44v-.01zm-26.71 25.79h22.9c3.37 0 6.1 2.89 6.1 6.44s-2.72 6.44-6.1 6.44h-22.89c-3.37 0-6.1-2.88-6.1-6.44s2.72-6.44 6.1-6.44h-.01zm21.38 25.78h33.57c3.38 0 6.11 2.88 6.11 6.44 0 3.57-2.73 6.44-6.1 6.44h-33.58c-3.38 0-6.11-2.87-6.11-6.44 0-3.56 2.73-6.44 6.1-6.44zM94.56 127.12h68.68c3.37 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44H94.56c-3.38 0-6.11-2.88-6.11-6.44s2.72-6.44 6.1-6.44zm91.57 0h10.69c3.36 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44h-10.69c-3.37 0-6.1-2.88-6.1-6.44s2.73-6.44 6.1-6.44z\" fill=\"var(--fill-normal)\" /><g clipPath=\"url(#prefix__clip0_8025_91604)\"><path d=\"M137 54h-17.5v.04a6.96 6.96 0 006.97 6.96h5.6L102 91.05v9.9l35-35v5.6a6.96 6.96 0 006.96 6.95h.04V61a7 7 0 00-7-7z\" fill=\"#FF444F\" /><path d=\"M92.95 110H88v-7h11.95L95 107.95 92.95 110z\" fill=\"#85ACB0\" /></g><g clipPath=\"url(#prefix__clip1_8025_91604)\"><path d=\"M239.97 85.5a6.96 6.96 0 00-6.97 6.97v5.6l-35-35v9.88L228.05 103h-5.6a6.96 6.96 0 00-6.95 6.96v.04H233a7 7 0 007-7V85.5h-.04z\" fill=\"#FF444F\" /><path d=\"M184 61v-7h4.95l2.05 2.05 4.95 4.95H184z\" fill=\"#85ACB0\" /></g><defs><clipPath id=\"prefix__clip0_8025_91604\"><path fill=\"var(--fill-normal)\" transform=\"translate(88 54)\" d=\"M0 0h56v56H0z\" /></clipPath><clipPath id=\"prefix__clip1_8025_91604\"><path fill=\"var(--fill-normal)\" transform=\"translate(184 54)\" d=\"M0 0h56v56H0z\" /></clipPath></defs></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 89.96h32.77c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38H40.6c-3.21 0-5.82-2.41-5.82-5.39 0-2.97 2.6-5.39 5.83-5.39h64.08c3.22 0 5.83-2.4 5.83-5.38s-2.6-5.4-5.83-5.4H55.16v-.04c-2.91-.34-5.1-2.63-5.1-5.34 0-2.72 2.19-5 5.1-5.35v-.04h20.4c3.21 0 5.82-2.41 5.82-5.39 0-2.97-2.6-5.39-5.83-5.39H48.61c-3.22 0-5.83-2.4-5.83-5.39s2.6-5.38 5.83-5.38h138.37c3.22 0 5.83 2.4 5.83 5.38s-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.4-5.82 5.38s2.61 5.39 5.83 5.39h32.04c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39h-17.48c-3.21 0-5.82 2.4-5.82 5.38s2.6 5.4 5.82 5.4h9.47zm-126-43.1c3.23 0 5.84 2.4 5.84 5.39 0 2.97-2.61 5.38-5.83 5.38s-5.83-2.4-5.83-5.38 2.61-5.4 5.83-5.4zM168.05 25.3h40.79c3.21 0 5.82 2.42 5.82 5.4 0 2.97-2.6 5.38-5.82 5.38h-40.79c-3.21 0-5.82-2.41-5.82-5.39s2.6-5.39 5.82-5.39zm-24.76 0c3.22 0 5.83 2.42 5.83 5.4 0 2.97-2.61 5.38-5.83 5.38s-5.82-2.41-5.82-5.39 2.6-5.39 5.82-5.39zm70.64 21.56h10.2c3.22 0 5.83 2.4 5.83 5.39 0 2.97-2.61 5.38-5.83 5.38h-10.2c-3.21 0-5.82-2.4-5.82-5.38s2.6-5.4 5.82-5.4zM188.43 68.4h21.85c3.22 0 5.83 2.41 5.83 5.39s-2.6 5.39-5.83 5.39h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm20.4 21.55h32.04c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38h-32.04c-3.22 0-5.83-2.41-5.83-5.39 0-2.97 2.61-5.39 5.83-5.39zm-139.1 21.56h65.54c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39H69.73c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm87.39 0h10.2c3.21 0 5.82 2.41 5.82 5.39s-2.6 5.39-5.82 5.39h-10.2c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.61-5.38 5.83-5.38z\" /><path fill=\"#85ACB0\" d=\"M211.57 40.06v67.47h-8.44V40.06h8.44zm-16.87 0V73.8h-8.44V40.06h8.44zm-44.64 16.87l2.47 2.47 5.96 5.96h-14.4v-8.43h5.97zm27.77-16.87v16.87h-8.44V40.06h8.44zm-16.87 0v8.44h-8.43v-8.44h8.43z\" /><path fill=\"#FF444F\" d=\"M194.66 78.02a8.4 8.4 0 00-8.4 8.39v6.75l-25.3-25.3v11.9L180.3 99.1h-6.73a8.4 8.4 0 00-8.4 8.4v.03h21.1a8.43 8.43 0 008.43-8.43V78.02h-.04z\" /><path fill=\"#85ACB0\" d=\"M76.96 99.1v8.44h-8.43V99.1h8.43zm50.6-59.04v67.47h-8.43V40.06h8.44zM110.7 73.8v33.74h-8.44V73.8h8.44zM93.83 90.67v16.86h-8.44V90.67h8.44zm-19.34-8.44l-5.96 5.96-2.47 2.48h-5.97v-8.44h14.4z\" /><path fill=\"#FF444F\" d=\"M102.26 40.06H81.18v.04a8.4 8.4 0 008.39 8.4h6.75L76.96 67.84v11.92l25.3-25.3v6.75a8.4 8.4 0 008.4 8.37h.04V48.5a8.43 8.43 0 00-8.44-8.44z\" /></g></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 90.21h32.77c3.22 0 5.83 2.42 5.83 5.4 0 2.99-2.61 5.4-5.83 5.4H40.6c-3.21 0-5.82-2.41-5.82-5.4 0-2.98 2.6-5.4 5.83-5.4h64.08c3.22 0 5.83-2.42 5.83-5.4s-2.6-5.4-5.83-5.4H55.16v-.05c-2.91-.34-5.1-2.64-5.1-5.36s2.19-5.02 5.1-5.36v-.04h20.4c3.21 0 5.82-2.42 5.82-5.4 0-2.99-2.6-5.41-5.83-5.41H48.61c-3.22 0-5.83-2.42-5.83-5.4 0-2.99 2.6-5.4 5.83-5.4h138.37c3.22 0 5.83 2.41 5.83 5.4 0 2.98-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.42-5.82 5.4s2.61 5.4 5.83 5.4h32.04c3.22 0 5.83 2.43 5.83 5.41s-2.61 5.4-5.83 5.4h-17.48c-3.21 0-5.82 2.42-5.82 5.4 0 2.99 2.6 5.41 5.82 5.41h9.47zm-126-43.23c3.23 0 5.84 2.42 5.84 5.4 0 3-2.61 5.41-5.83 5.41s-5.83-2.42-5.83-5.4c0-2.99 2.61-5.4 5.83-5.4zm136.92-21.6h40.79c3.21 0 5.82 2.41 5.82 5.4s-2.6 5.4-5.82 5.4h-40.79c-3.21 0-5.82-2.42-5.82-5.4 0-2.99 2.6-5.4 5.82-5.4zm-24.76 0c3.22 0 5.83 2.41 5.83 5.4s-2.61 5.4-5.83 5.4-5.82-2.42-5.82-5.4c0-2.99 2.6-5.4 5.82-5.4zm70.64 21.6h10.2c3.22 0 5.83 2.42 5.83 5.4 0 3-2.61 5.41-5.83 5.41h-10.2c-3.21 0-5.82-2.42-5.82-5.4 0-2.99 2.6-5.4 5.82-5.4zM188.43 68.6h21.85c3.22 0 5.83 2.42 5.83 5.4 0 2.98-2.6 5.4-5.83 5.4h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.98 2.6-5.4 5.83-5.4zm20.4 21.61h32.04c3.22 0 5.83 2.42 5.83 5.4 0 2.99-2.61 5.4-5.83 5.4h-32.04c-3.22 0-5.83-2.41-5.83-5.4 0-2.98 2.61-5.4 5.83-5.4zm-139.1 21.61h65.54c3.22 0 5.83 2.42 5.83 5.4 0 2.99-2.61 5.4-5.83 5.4H69.73c-3.22 0-5.83-2.41-5.83-5.4s2.6-5.4 5.83-5.4zm87.39 0h10.2c3.21 0 5.82 2.42 5.82 5.4 0 2.99-2.6 5.4-5.82 5.4h-10.2c-3.22 0-5.83-2.41-5.83-5.4s2.61-5.4 5.83-5.4z\" /><path fill=\"#85ACB0\" d=\"M165.52 99.37v8.46h-21.09v-8.46h21.09zm29-46.3l14.92 14.95a8.33 8.33 0 011.3 1.75 8.24 8.24 0 010 8.46h-22.39l-8.44-8.46h19.34L194.5 65a8.42 8.42 0 01-2.46-5.95c0-2.23.88-4.37 2.46-5.95l.03-.03zm17.39-12.9v8.46h-67.48v-8.46h67.48z\" /><path fill=\"#FF444F\" d=\"M195.04 86.69v6.7l-15.12-15.16-8.44-8.46h-27.05v8.46H168l21.09 21.14h-6.73a8.4 8.4 0 00-8.4 8.42v.04h21.09a8.45 8.45 0 008.43-8.46V86.7h-8.43z\" /><path fill=\"#85ACB0\" d=\"M127.57 99.37v8.46H60.09v-8.46h67.48zm-1.17-29.6a8.24 8.24 0 010 8.46 8.32 8.32 0 01-1.3 1.75l-14.91 14.95-.03-.03a8.42 8.42 0 01-2.46-5.95c0-2.23.88-4.37 2.46-5.95l4.75-4.77H95.57l8.44-8.46zm-45.22-29.6v8.46H60.09v-8.46h21.09z\" /><path fill=\"#FF444F\" d=\"M110.7 40.17H89.6v.04a8.4 8.4 0 008.4 8.42h6.74L83.67 69.77H60.09v8.46h27.05l8.44-8.46 15.12-15.16v6.7h8.43V48.63a8.45 8.45 0 00-8.43-8.46z\" /></g></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 89.96h32.77c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38H40.6c-3.21 0-5.82-2.41-5.82-5.39 0-2.97 2.6-5.39 5.83-5.39h64.08c3.22 0 5.83-2.4 5.83-5.38s-2.6-5.4-5.83-5.4H55.16v-.04c-2.91-.34-5.1-2.63-5.1-5.34 0-2.72 2.19-5 5.1-5.35v-.04h20.4c3.21 0 5.82-2.41 5.82-5.39 0-2.97-2.6-5.39-5.83-5.39H48.61c-3.22 0-5.83-2.4-5.83-5.39s2.6-5.38 5.83-5.38h138.37c3.22 0 5.83 2.4 5.83 5.38s-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.4-5.82 5.38s2.61 5.39 5.83 5.39h32.04c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39h-17.48c-3.21 0-5.82 2.4-5.82 5.38s2.6 5.4 5.82 5.4h9.47zm-126-43.1c3.23 0 5.84 2.4 5.84 5.39 0 2.97-2.61 5.38-5.83 5.38s-5.83-2.4-5.83-5.38 2.61-5.4 5.83-5.4zM168.05 25.3h40.79c3.21 0 5.82 2.42 5.82 5.4 0 2.97-2.6 5.38-5.82 5.38h-40.79c-3.21 0-5.82-2.41-5.82-5.39s2.6-5.39 5.82-5.39zm-24.76 0c3.22 0 5.83 2.42 5.83 5.4 0 2.97-2.61 5.38-5.83 5.38s-5.82-2.41-5.82-5.39 2.6-5.39 5.82-5.39zm70.64 21.56h10.2c3.22 0 5.83 2.4 5.83 5.39 0 2.97-2.61 5.38-5.83 5.38h-10.2c-3.21 0-5.82-2.4-5.82-5.38s2.6-5.4 5.82-5.4zM188.43 68.4h21.85c3.22 0 5.83 2.41 5.83 5.39s-2.6 5.39-5.83 5.39h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm20.4 21.55h32.04c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38h-32.04c-3.22 0-5.83-2.41-5.83-5.39 0-2.97 2.61-5.39 5.83-5.39zm-139.1 21.56h65.54c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39H69.73c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm87.39 0h10.2c3.21 0 5.82 2.41 5.82 5.39s-2.6 5.39-5.82 5.39h-10.2c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.61-5.38 5.83-5.38z\" /><path fill=\"#85ACB0\" d=\"M211.57 99.1v8.44h-25.3l-8.44-8.44h33.74zm-33.74 0l-8.44 8.44h-25.3V99.1h33.74zm33.74-59.04v8.44h-67.48v-8.44h67.48z\" /><path fill=\"#FF444F\" d=\"M203.13 56.93h-21.08v.04a8.4 8.4 0 008.39 8.4h6.75L177.83 84.7l-19.34-19.34a8.43 8.43 0 00-11.93 0l-2.47 2.48v11.92l8.44-8.43 19.34 19.34a8.43 8.43 0 0011.92 0l19.34-19.34v6.74a8.4 8.4 0 008.4 8.38h.04V65.36a8.43 8.43 0 00-8.44-8.43z\" /><path fill=\"#85ACB0\" d=\"M127.57 99.1v8.44H60.09V99.1h67.48zm0-59.04v8.44H93.83l8.43-8.44h25.3zm-42.17 0l8.43 8.44H60.09v-8.44h25.3z\" /><path fill=\"#FF444F\" d=\"M127.52 61.15a8.4 8.4 0 00-8.39 8.39v6.75L99.8 56.93a8.43 8.43 0 00-11.92 0L68.53 76.27l-8.44-8.43v11.92l2.47 2.47a8.43 8.43 0 0011.93 0L93.83 62.9l19.34 19.34h-6.75a8.4 8.4 0 00-8.37 8.4v.04h21.08a8.43 8.43 0 008.44-8.44V61.15h-.05z\" /></g></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"328\" height=\"164\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><rect width=\"328\" height=\"164\" rx=\"6\" fill=\"var(--general-section-1)\" /><path d=\"M186.13 101.34h34.34c3.37 0 6.1 2.88 6.1 6.44 0 3.57-2.73 6.44-6.1 6.44H64.03c-3.36 0-6.1-2.87-6.1-6.44 0-3.56 2.73-6.44 6.11-6.44h67.15c3.38 0 6.11-2.89 6.11-6.45 0-3.55-2.72-6.44-6.1-6.44H79.28v-.06A6.34 6.34 0 0173.95 82c0-3.25 2.29-5.99 5.34-6.4v-.04h21.38c3.36 0 6.1-2.89 6.1-6.44 0-3.57-2.73-6.46-6.11-6.46H72.43c-3.38 0-6.11-2.88-6.11-6.44 0-3.57 2.72-6.44 6.1-6.44h145c3.38 0 6.11 2.87 6.11 6.44 0 3.56-2.73 6.44-6.1 6.44h-56.49c-3.36 0-6.1 2.89-6.1 6.44 0 3.56 2.74 6.45 6.11 6.45h33.58c3.37 0 6.1 2.9 6.1 6.45 0 3.55-2.73 6.44-6.1 6.44H176.2c-3.37 0-6.1 2.89-6.1 6.44 0 3.57 2.72 6.46 6.1 6.46h9.92zM54.1 49.77c3.38 0 6.12 2.88 6.12 6.44 0 3.58-2.74 6.45-6.11 6.45S48 59.78 48 56.22c0-3.57 2.73-6.44 6.11-6.44l-.01-.01zM197.57 24h42.75c3.36 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44h-42.75c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44zm-25.94 0c3.37 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44c-3.38 0-6.1-2.88-6.1-6.44 0-3.57 2.72-6.44 6.1-6.44zm74.02 25.77h10.69c3.37 0 6.1 2.88 6.1 6.44 0 3.58-2.73 6.45-6.1 6.45h-10.69c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44v-.01zm-26.71 25.79h22.9c3.37 0 6.1 2.89 6.1 6.44s-2.72 6.44-6.1 6.44h-22.89c-3.37 0-6.1-2.88-6.1-6.44s2.72-6.44 6.1-6.44h-.01zm21.38 25.78h33.57c3.38 0 6.11 2.88 6.11 6.44 0 3.57-2.73 6.44-6.1 6.44h-33.58c-3.38 0-6.11-2.87-6.11-6.44 0-3.56 2.73-6.44 6.1-6.44zM94.56 127.12h68.68c3.37 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44H94.56c-3.38 0-6.11-2.88-6.11-6.44s2.72-6.44 6.1-6.44zm91.57 0h10.69c3.36 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44h-10.69c-3.37 0-6.1-2.88-6.1-6.44s2.73-6.44 6.1-6.44z\" fill=\"var(--fill-normal)\" /><g clipPath=\"url(#prefix__clip0_8025_91554)\"><path d=\"M106.98 103l-4.98 5-2 2H88v-7h18.98zM144 54v7H88v-7h56z\" fill=\"#85ACB0\" /><path d=\"M143.97 89h.03V68a7 7 0 00-7-7h-21v.04a6.96 6.96 0 006.97 6.96h9.1L109 91.05v9.93l28-28.03v9.1a6.96 6.96 0 006.97 6.95z\" fill=\"#FF444F\" /></g><g clipPath=\"url(#prefix__clip1_8025_91554)\"><path d=\"M195.95 103l-7 7H184v-7h11.95zM240 54v7h-56v-7h56z\" fill=\"#85ACB0\" /><path d=\"M239.97 78.5a6.96 6.96 0 00-6.97 6.97v5.6L220.45 78.5a7 7 0 00-9.9 0L198 91.05v9.9l17.5-17.5L228.05 96h-5.6a6.96 6.96 0 00-6.95 6.97v.03H233a7 7 0 007-7V78.5h-.04z\" fill=\"#FF444F\" /></g><defs><clipPath id=\"prefix__clip0_8025_91554\"><path fill=\"var(--fill-normal)\" transform=\"translate(88 54)\" d=\"M0 0h56v56H0z\" /></clipPath><clipPath id=\"prefix__clip1_8025_91554\"><path fill=\"var(--fill-normal)\" transform=\"translate(184 54)\" d=\"M0 0h56v56H0z\" /></clipPath></defs></svg>);","import React from \"react\";\nexport default (({\n  styles = {},\n  ...props\n}) => <svg width=\"328\" height=\"164\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\" {...props}><rect width=\"328\" height=\"164\" rx=\"6\" fill=\"var(--general-section-1)\" /><path d=\"M186.13 101.34h34.34c3.37 0 6.1 2.88 6.1 6.44 0 3.57-2.73 6.44-6.1 6.44H64.03c-3.36 0-6.1-2.87-6.1-6.44 0-3.56 2.73-6.44 6.11-6.44h67.15c3.38 0 6.11-2.89 6.11-6.45 0-3.55-2.72-6.44-6.1-6.44H79.28v-.06A6.34 6.34 0 0173.95 82c0-3.25 2.29-5.99 5.34-6.4v-.04h21.38c3.36 0 6.1-2.89 6.1-6.44 0-3.57-2.73-6.46-6.11-6.46H72.43c-3.38 0-6.11-2.88-6.11-6.44 0-3.57 2.72-6.44 6.1-6.44h145c3.38 0 6.11 2.87 6.11 6.44 0 3.56-2.73 6.44-6.1 6.44h-56.49c-3.36 0-6.1 2.89-6.1 6.44 0 3.56 2.74 6.45 6.11 6.45h33.58c3.37 0 6.1 2.9 6.1 6.45 0 3.55-2.73 6.44-6.1 6.44H176.2c-3.37 0-6.1 2.89-6.1 6.44 0 3.57 2.72 6.46 6.1 6.46h9.92zM54.1 49.77c3.38 0 6.12 2.88 6.12 6.44 0 3.58-2.74 6.45-6.11 6.45S48 59.78 48 56.22c0-3.57 2.73-6.44 6.11-6.44l-.01-.01zM197.57 24h42.75c3.36 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44h-42.75c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44zm-25.94 0c3.37 0 6.1 2.88 6.1 6.44s-2.73 6.44-6.1 6.44c-3.38 0-6.1-2.88-6.1-6.44 0-3.57 2.72-6.44 6.1-6.44zm74.02 25.77h10.69c3.37 0 6.1 2.88 6.1 6.44 0 3.58-2.73 6.45-6.1 6.45h-10.69c-3.36 0-6.1-2.88-6.1-6.44 0-3.57 2.73-6.44 6.1-6.44v-.01zm-26.71 25.79h22.9c3.37 0 6.1 2.89 6.1 6.44s-2.72 6.44-6.1 6.44h-22.89c-3.37 0-6.1-2.88-6.1-6.44s2.72-6.44 6.1-6.44h-.01zm21.38 25.78h33.57c3.38 0 6.11 2.88 6.11 6.44 0 3.57-2.73 6.44-6.1 6.44h-33.58c-3.38 0-6.11-2.87-6.11-6.44 0-3.56 2.73-6.44 6.1-6.44zM94.56 127.12h68.68c3.37 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44H94.56c-3.38 0-6.11-2.88-6.11-6.44s2.72-6.44 6.1-6.44zm91.57 0h10.69c3.36 0 6.1 2.88 6.1 6.44 0 3.56-2.73 6.44-6.1 6.44h-10.69c-3.37 0-6.1-2.88-6.1-6.44s2.73-6.44 6.1-6.44z\" fill=\"var(--fill-normal)\" /><g clipPath=\"url(#prefix__clip0_8025_93287)\"><path d=\"M133 82h7v14h-7V82zm-29.75 21H140v7H96.25l7-7z\" fill=\"#85ACB0\" /><path d=\"M128.05 61h-5.55a7 7 0 01-7-7H140v21h-7v-9.05L88.95 110H84v-4.95L128.05 61z\" fill=\"#FF444F\" /></g><g clipPath=\"url(#prefix__clip1_8025_93287)\"><path d=\"M237 82h7V68h-7v14zm-29.75-21H244v-7h-43.75l7 7z\" fill=\"#85ACB0\" /><path d=\"M232.05 103h-5.55a7 7 0 00-7 7H244V89h-7v9.05L192.95 54H188v4.95L232.05 103z\" fill=\"#FF444F\" /></g><defs><clipPath id=\"prefix__clip0_8025_93287\"><path fill=\"var(--fill-normal)\" transform=\"translate(84 54)\" d=\"M0 0h56v56H0z\" /></clipPath><clipPath id=\"prefix__clip1_8025_93287\"><path fill=\"#fff\" transform=\"translate(188 54)\" d=\"M0 0h56v56H0z\" /></clipPath></defs></svg>);","import React from 'react';\nimport { localize } from '@deriv/translations';\nimport { Loading } from '@deriv/components';\nimport { getUrlBase } from '@deriv/shared';\n\nconst AccumulatorDescriptionVideo = ({ selected_contract_type }: { selected_contract_type: string }) => {\n    const [is_loading, setIsLoading] = React.useState(true);\n    const getVideoSource = (extension: 'mp4' | 'webm') => {\n        return getUrlBase(`/public/images/common/accumulator_description.${extension}`);\n    };\n    // memoize file paths for videos and open the modal only after we get them\n    const mp4_src = React.useMemo(() => getVideoSource('mp4'), []);\n    const webm_src = React.useMemo(() => getVideoSource('webm'), []);\n\n    if (selected_contract_type !== 'accumulator') return null;\n    return (\n        <div className='accumulator-description-video'>\n            {is_loading && <Loading is_fullscreen={false} />}\n            <video\n                autoPlay\n                loop\n                onLoadedData={() => setIsLoading(false)}\n                playsInline\n                preload='auto'\n                controls\n                width={328}\n                height={164}\n            >\n                {/* a browser will select a source with extension it recognizes */}\n                <source src={mp4_src} type='video/mp4' />\n                <source src={webm_src} type='video/webm' />\n                {localize('Unfortunately, your browser does not support the video.')}\n            </video>\n        </div>\n    );\n};\n\nexport default React.memo(AccumulatorDescriptionVideo);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport ImageAsianUpDown from 'Assets/SvgComponents/trade_explanations/img-asian.svg';\nimport ImageCloseToLow from 'Assets/SvgComponents/trade_explanations/img-close-to-low.svg';\nimport ImageEndsInOut from 'Assets/SvgComponents/trade_explanations/img-ends-in-out.svg';\nimport ImageEvenOdd from 'Assets/SvgComponents/trade_explanations/img-even-odd.svg';\nimport ImageHighLow from 'Assets/SvgComponents/trade_explanations/img-high-low.svg';\nimport ImageHighToClose from 'Assets/SvgComponents/trade_explanations/img-high-to-close.svg';\nimport ImageHighToLow from 'Assets/SvgComponents/trade_explanations/img-high-to-low.svg';\nimport ImageMatchDiff from 'Assets/SvgComponents/trade_explanations/img-match-diff.svg';\nimport ImageMultiplier from 'Assets/SvgComponents/trade_explanations/img-multiplier.svg';\nimport ImageOverUnder from 'Assets/SvgComponents/trade_explanations/img-over-under.svg';\nimport ImageReset from 'Assets/SvgComponents/trade_explanations/img-reset.svg';\nimport ImageRiseFall from 'Assets/SvgComponents/trade_explanations/img-rise-fall.svg';\nimport ImageRunHighLow from 'Assets/SvgComponents/trade_explanations/img-run-high-low.svg';\nimport ImageSpread from 'Assets/SvgComponents/trade_explanations/img-spread.svg';\nimport ImageTickHighLow from 'Assets/SvgComponents/trade_explanations/img-tick-high-low.svg';\nimport ImageTouch from 'Assets/SvgComponents/trade_explanations/img-touch.svg';\nimport ImageVanilla from 'Assets/SvgComponents/trade_explanations/img-vanilla.svg';\nimport AccumulatorDescriptionVideo from './accumulator-description-video';\n\n// TODO: Replace static image svgs with themed GIFs or animated SVGs\nconst TradeCategoriesGIF = ({ category, selected_contract_type }) => {\n    switch (category) {\n        case 'asian':\n            return <ImageAsianUpDown />;\n        case 'callputspread':\n            return <ImageSpread />;\n        case 'end':\n            return <ImageEndsInOut />;\n        case 'even_odd':\n            return <ImageEvenOdd />;\n        case 'high_low':\n            return <ImageHighLow />;\n        case 'lb_call':\n            return <ImageCloseToLow />;\n        case 'lb_put':\n            return <ImageHighToClose />;\n        case 'lb_high_low':\n            return <ImageHighToLow />;\n        case 'rise_fall':\n            return <ImageRiseFall />;\n        case 'rise_fall_equal':\n            return <ImageRiseFall />;\n        case 'match_diff':\n            return <ImageMatchDiff />;\n        case 'multiplier':\n            return <ImageMultiplier />;\n        case 'over_under':\n            return <ImageOverUnder />;\n        case 'reset':\n            return <ImageReset />;\n        case 'run_high_low':\n            return <ImageRunHighLow />;\n        case 'accumulator':\n            return <AccumulatorDescriptionVideo selected_contract_type={selected_contract_type} />;\n        case 'tick_high_low':\n            return <ImageTickHighLow />;\n        case 'touch':\n            return <ImageTouch />;\n        case 'vanilla':\n            return <ImageVanilla />;\n        default:\n            return null;\n    }\n};\n\nTradeCategoriesGIF.propTypes = {\n    category: PropTypes.string,\n    selected_contract_type: PropTypes.string,\n};\n\nexport default TradeCategoriesGIF;\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\n\nconst ContractTypeGlossary = ({ category }: { category: string }) => {\n    let content;\n    if (category) {\n        switch (category) {\n            case 'accumulator':\n                content = [\n                    { type: 'heading', text: localize('Growth rate') },\n                    {\n                        type: 'paragraph',\n                        text: localize('You can choose a growth rate with values of 1%, 2%, 3%, 4%, and 5%.'),\n                    },\n                    { type: 'heading', text: localize('Payout') },\n                    {\n                        type: 'paragraph',\n                        text: localize('Payout is the sum of your initial stake and profit.'),\n                    },\n                    { type: 'heading', text: localize('Range') },\n                    {\n                        type: 'paragraph',\n                        text: localize(\n                            'It is a percentage of the previous spot price. The percentage rate is based on your choice of the index and the growth rate.'\n                        ),\n                    },\n                    { type: 'heading', text: localize('Previous spot price') },\n                    {\n                        type: 'paragraph',\n                        text: localize('Spot price on the previous tick.'),\n                    },\n                    { type: 'heading', text: localize('Slippage risk') },\n                    {\n                        type: 'paragraph',\n                        text: localize(\n                            'The spot price may change by the time your order reaches our servers. When this happens, your payout maybe affected.'\n                        ),\n                    },\n                ];\n                break;\n            case 'vanilla':\n                content = [\n                    { type: 'heading', text: localize('Payout') },\n                    {\n                        type: 'paragraph',\n                        text: localize(\n                            'Your payout is equal to the payout per point multiplied by the difference between the final price and the strike price.'\n                        ),\n                    },\n                    { type: 'heading', text: localize('Final price') },\n                    {\n                        type: 'paragraph',\n                        text: localize('This is the spot price of the last tick at expiry.'),\n                    },\n                    { type: 'heading', text: localize('Strike price') },\n                    {\n                        type: 'paragraph',\n                        text: localize('You must select the strike price before entering the contract.'),\n                    },\n                    {\n                        type: 'list',\n                        text: [\n                            localize(\n                                'If you select \"Call\", you’ll earn a payout if the final price is above the strike price at expiry. Otherwise, you won’t receive a payout.'\n                            ),\n                            localize(\n                                'If you select \"Put\", you’ll earn a payout if the final price is below the strike price at expiry. Otherwise, you won’t receive a payout.'\n                            ),\n                        ],\n                    },\n                    { type: 'heading', text: localize('Expiry') },\n                    {\n                        type: 'paragraph',\n                        text: localize(\n                            'This is when your contract will expire based on the Duration or End time you’ve selected.'\n                        ),\n                    },\n                    {\n                        type: 'list',\n                        text: [\n                            localize(\n                                'If the duration is more than 24 hours, the Cut-off time and Expiry date will apply instead.'\n                            ),\n                        ],\n                    },\n                    { type: 'heading', text: localize('Payout per point') },\n                    {\n                        type: 'paragraph',\n                        text: localize('We calculate this based on the strike price and duration you’ve selected.'),\n                    },\n                    { type: 'heading', text: localize('Contract value') },\n                    {\n                        type: 'paragraph',\n                        text: localize(\n                            'We’ll offer to buy your contract at this price should you choose to sell it before its expiry. This is based on several factors, such as the current spot price, duration, etc. However, we won’t offer a contract value if the remaining duration is below 60 seconds.'\n                        ),\n                    },\n                    { type: 'heading', text: localize('Cut-off time') },\n                    {\n                        type: 'paragraph',\n                        text: localize('Contracts will expire at exactly 23:59:59 GMT on your selected expiry date.'),\n                    },\n                    { type: 'heading', text: localize('Expiry date') },\n                    {\n                        type: 'paragraph',\n                        text: localize(\n                            'Your contract will expire on this date (in GMT), based on the End time you’ve selected.'\n                        ),\n                    },\n                ];\n                break;\n            default:\n                content = [];\n                break;\n        }\n    }\n    return (\n        <React.Fragment>\n            {content?.map(({ type, text }: { type: string; text: string | string[] }) => {\n                if (type === 'heading' && typeof text === 'string') {\n                    return (\n                        <Text\n                            as='h2'\n                            key={text.substring(0, 10)}\n                            weight='bold'\n                            className='contract-type-info__content-glossary--heading'\n                        >\n                            {text}\n                        </Text>\n                    );\n                }\n                if (type === 'paragraph' && typeof text === 'string') {\n                    return (\n                        <Text as='p' key={text.substring(0, 10)}>\n                            {text}\n                        </Text>\n                    );\n                }\n                if (type === 'list' && typeof text !== 'string') {\n                    return (\n                        <ul key={text[0].substring(0, 15)}>\n                            {text.map(list_item_text => (\n                                <li key={list_item_text.substring(0, 20)}>{list_item_text}</li>\n                            ))}\n                        </ul>\n                    );\n                }\n                return null;\n            })}\n        </React.Fragment>\n    );\n};\n\nexport default ContractTypeGlossary;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Button, ThemedScrollbars, Carousel, ButtonToggle } from '@deriv/components';\nimport { isMobile } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport TradeCategories from 'Assets/Trading/Categories/trade-categories.jsx';\nimport TradeCategoriesGIF from 'Assets/Trading/Categories/trade-categories-gif.jsx';\nimport { getContractTypes } from '../../../../Helpers/contract-type';\nimport ContractTypeGlossary from './contract-type-glossary';\nimport classNames from 'classnames';\n\nconst TABS = {\n    DESCRIPTION: 'description',\n    GLOSSARY: 'glossary',\n};\n\nconst Info = ({ handleNavigationClick, handleSelect, initial_index, item, list }) => {\n    const [carousel_index, setCarouselIndex] = React.useState('');\n    const [selected_tab, setSelectedTab] = React.useState(TABS.DESCRIPTION);\n    const contract_types = getContractTypes(list, item).filter(i => i.value !== 'rise_fall_equal');\n    const has_toggle_buttons = carousel_index !== 'accumulator' && carousel_index !== 'vanilla';\n    const is_description_tab_selected = selected_tab === TABS.DESCRIPTION;\n    const is_glossary_tab_selected = selected_tab === TABS.GLOSSARY;\n    const width = isMobile() ? '328' : '528';\n    const scroll_bar_height = has_toggle_buttons ? '560px' : '464px';\n    const selected_contract_type = contract_types.find(type => type.value === carousel_index);\n\n    const onClickGlossary = () => setSelectedTab(TABS.GLOSSARY);\n    const handleItemSelect = active_index => {\n        setCarouselIndex(contract_types[active_index].value);\n        handleNavigationClick(contract_types[active_index]);\n        if (has_toggle_buttons && is_glossary_tab_selected) {\n            setSelectedTab(TABS.DESCRIPTION);\n        }\n    };\n\n    const cards = contract_types.map((type, idx) => {\n        return (\n            <div\n                key={idx}\n                className={classNames('contract-type-info__card', {\n                    'contract-type-info__card--has-toggle-buttons': !has_toggle_buttons,\n                })}\n            >\n                <ThemedScrollbars\n                    className={classNames('contract-type-info__scrollbars', {\n                        'contract-type-info__scrollbars-description--active': is_description_tab_selected,\n                        'contract-type-info__scrollbars-glossary contract-type-info__scrollbars-glossary--active ':\n                            is_glossary_tab_selected,\n                    })}\n                    style={{\n                        left: `${is_description_tab_selected ? `-${width}` : width}px`,\n                        transform: `translate3d(${is_description_tab_selected ? width : `-${width}`}px, 0, 0)`,\n                    }}\n                    height={isMobile() ? '' : scroll_bar_height}\n                    autohide={false}\n                >\n                    <div\n                        className={classNames({\n                            'contract-type-info__gif--has-toggle-buttons': has_toggle_buttons,\n                            'contract-type-info__content': is_glossary_tab_selected,\n                            'contract-type-info__gif': is_description_tab_selected,\n                        })}\n                    >\n                        {is_description_tab_selected ? (\n                            <TradeCategoriesGIF\n                                category={type.value}\n                                selected_contract_type={selected_contract_type?.value}\n                            />\n                        ) : (\n                            <ContractTypeGlossary category={type.value} />\n                        )}\n                    </div>\n                    <div className='contract-type-info__content'>\n                        {is_description_tab_selected && (\n                            <TradeCategories category={type.value} onClick={onClickGlossary} />\n                        )}\n                    </div>\n                </ThemedScrollbars>\n            </div>\n        );\n    });\n\n    return (\n        <React.Fragment>\n            {!has_toggle_buttons && (\n                <div className='contract-type-info__button-wrapper'>\n                    <ButtonToggle\n                        buttons_arr={[\n                            { text: localize('Description'), value: TABS.DESCRIPTION },\n                            { text: localize('Glossary'), value: TABS.GLOSSARY },\n                        ]}\n                        name='description_glossary_filter'\n                        is_animated\n                        has_rounded_button\n                        onChange={e => {\n                            setSelectedTab(e.target.value);\n                        }}\n                        value={selected_tab}\n                    />\n                </div>\n            )}\n            <Carousel\n                className={classNames('contract-type-info', {\n                    'contract-type-info--has-toggle-buttons': has_toggle_buttons,\n                })}\n                disable_swipe={isMobile()}\n                onItemSelect={handleItemSelect}\n                initial_index={initial_index}\n                list={cards}\n                width={isMobile() ? 328 : 528}\n                show_bullet={false}\n                show_nav={false}\n            />\n            <div className='contract-type-info__trade-type-btn-wrapper'>\n                <Button\n                    id={`dt_contract_info_${selected_contract_type?.value}_btn`}\n                    className='contract-type-info__button'\n                    onClick={e => handleSelect(selected_contract_type, e)}\n                    text={localize('Choose {{contract_type}}', {\n                        contract_type: selected_contract_type?.text,\n                        interpolation: { escapeValue: false },\n                    })}\n                    secondary\n                />\n            </div>\n        </React.Fragment>\n    );\n};\n\nInfo.propTypes = {\n    handleSelect: PropTypes.func,\n    initial_index: PropTypes.number,\n    item: PropTypes.object,\n    list: PropTypes.array,\n    handleNavigationClick: PropTypes.func,\n};\n\nexport default Info;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Icon, Text } from '@deriv/components';\n\nconst Header = ({ onClickGoBack, text_size = 's', title }) => (\n    <div className='contract-type-info__action-bar'>\n        <span className='contract-type-info__icon' id='dt_contract_info_back_nav' onClick={onClickGoBack}>\n            <Icon icon='IcArrowLeftBold' />\n        </span>\n        <Text size={text_size} weight='bold' color='prominent' className='contract-type-info__title'>\n            {title}\n        </Text>\n    </div>\n);\n\nHeader.propTypes = {\n    onClickGoBack: PropTypes.func,\n    text_size: PropTypes.string,\n    title: PropTypes.string,\n};\n\nexport default Header;\n","import Info from './contract-type-info.jsx';\n\nexport { default as Header } from './contract-type-info-header.jsx';\n\nexport default Info;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Icon, Input } from '@deriv/components';\nimport { localize } from '@deriv/translations';\n\nconst SearchInput = React.forwardRef(({ onChange, onClickClearInput, value }, ref) => (\n    <Input\n        ref={ref}\n        autoFocus\n        data-lpignore='true'\n        leading_icon={<Icon icon='IcSearch' />}\n        trailing_icon={value ? <Icon icon='IcCloseCircle' onClick={onClickClearInput} /> : null}\n        placeholder={localize('Search')}\n        type='text'\n        onChange={onChange}\n        value={value}\n    />\n));\n\nSearchInput.propTypes = {\n    onChange: PropTypes.func,\n    onClickClearInput: PropTypes.func,\n    value: PropTypes.string,\n};\n\nSearchInput.displayName = 'SearchInput';\n\nexport default React.memo(SearchInput);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { localize } from '@deriv/translations';\nimport { Text } from '@deriv/components';\n\nconst NoResultsMessage = ({ text }) => (\n    <div className='no-results-found'>\n        <h2 className='no-results-found__title'>\n            {localize('No results for \"{{text}}\"', { text, interpolation: { escapeValue: false } })}\n        </h2>\n        <Text as='p' size='xxs' align='center' color='less-prominent' className='no-results-found__subtitle'>\n            {localize('Try checking your spelling or use a different term')}\n        </Text>\n    </div>\n);\n\nNoResultsMessage.propTypes = {\n    text: PropTypes.string,\n};\n\nexport default NoResultsMessage;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Loading, ThemedScrollbars, VerticalTab } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport SearchInput from './search-input.jsx';\nimport NoResultsMessage from './no-results-message.jsx';\nimport { Header } from '../ContractTypeInfo';\nimport { getContractCategoryKey } from '../../../../Helpers/contract-type';\n\nconst Dialog = ({\n    categories,\n    item,\n    selected,\n    children,\n    is_info_dialog_open,\n    is_open,\n    onBackButtonClick,\n    onCategoryClick,\n    onChangeInput,\n    show_loading,\n}) => {\n    const input_ref = React.useRef(null);\n\n    const [input_value, setInputValue] = React.useState('');\n\n    const contract_category = getContractCategoryKey(categories, item);\n    const selected_item = selected ? { key: selected } : contract_category;\n    const selected_category_contract = !categories?.find(category => category.key === selected_item.key)\n        ?.contract_categories.length;\n\n    const onChange = e => {\n        if (is_info_dialog_open) {\n            onBackButtonClick();\n        }\n        if (input_value) {\n            onClickClearInput();\n        }\n        if (onCategoryClick) {\n            onCategoryClick(e);\n        }\n    };\n\n    const onChangeInputValue = e => {\n        setInputValue(e.target.value);\n        onChangeInput(e.target.value);\n    };\n\n    const onClickClearInput = () => {\n        input_ref.current.focus();\n        setInputValue('');\n        onChangeInput('');\n    };\n\n    const renderChildren = () => {\n        if (!is_info_dialog_open) {\n            return <ThemedScrollbars height='calc(100vh - 172px)'>{children}</ThemedScrollbars>;\n        }\n        return children;\n    };\n    const action_bar_item = (\n        <SearchInput\n            ref={input_ref}\n            onChange={onChangeInputValue}\n            onClickClearInput={onClickClearInput}\n            value={input_value}\n        />\n    );\n\n    return (\n        <CSSTransition\n            in={is_open}\n            timeout={100}\n            classNames={{\n                enter: 'contract-type-dialog--enter',\n                enterDone: 'contract-type-dialog--enterDone',\n                exit: 'contract-type-dialog--exit',\n            }}\n            unmountOnExit\n        >\n            <div className='contract-type-dialog' data-testid='dt_contract_wrapper'>\n                <div className='contract-type-dialog__wrapper'>\n                    {show_loading ? (\n                        <Loading is_fullscreen={false} />\n                    ) : (\n                        <React.Fragment>\n                            {!is_info_dialog_open ? (\n                                <VerticalTab.Layout>\n                                    <VerticalTab.Headers\n                                        header_title={localize('Trade types')}\n                                        items={categories}\n                                        selected={selected_item}\n                                        onChange={onChange}\n                                        selectedKey='key'\n                                    />\n\n                                    <div className='dc-vertical-tab__content'>\n                                        <div className='dc-vertical-tab__action-bar'>{action_bar_item}</div>\n                                        <div className='dc-vertical-tab__content-container'>\n                                            {selected_category_contract && <NoResultsMessage text={input_value} />}\n                                            {renderChildren()}\n                                        </div>\n                                    </div>\n                                </VerticalTab.Layout>\n                            ) : (\n                                <React.Fragment>\n                                    <div className='dc-vertical-tab__action-bar dc-vertical-tab__action-bar--contract-type-info-header'>\n                                        <Header title={item.text} onClickGoBack={onBackButtonClick} />\n                                    </div>\n                                    {renderChildren()}\n                                </React.Fragment>\n                            )}\n                        </React.Fragment>\n                    )}\n                </div>\n            </div>\n        </CSSTransition>\n    );\n};\n\nDialog.propTypes = {\n    categories: PropTypes.array,\n    children: PropTypes.node,\n    is_info_dialog_open: PropTypes.bool,\n    is_open: PropTypes.bool,\n    selected: PropTypes.string,\n    show_loading: PropTypes.bool,\n    item: PropTypes.object,\n    list: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n    onBackButtonClick: PropTypes.func,\n    onCategoryClick: PropTypes.func,\n    onChangeInput: PropTypes.func,\n};\n\nexport default Dialog;\n","import Dialog from './contract-type-menu.jsx';\n\nexport default Dialog;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { DesktopWrapper, MobileDialog, MobileWrapper } from '@deriv/components';\nimport { Header } from './ContractTypeInfo';\nimport { localize } from '@deriv/translations';\nimport ContractTypeMenu from './ContractTypeMenu';\n\nconst ContractTypeDialog = ({\n    children,\n    is_info_dialog_open,\n    onClose,\n    is_open,\n    item,\n    list,\n    selected,\n    categories,\n    onBackButtonClick,\n    onChangeInput,\n    onCategoryClick,\n    show_loading,\n}) => {\n    const current_mobile_title = is_info_dialog_open ? (\n        <Header title={item.text} onClickGoBack={onBackButtonClick} text_size='xs' />\n    ) : (\n        localize('Trade type')\n    );\n    return (\n        <React.Fragment>\n            <MobileWrapper>\n                <span className='contract-type-widget__select-arrow' />\n                <MobileDialog\n                    portal_element_id='modal_root'\n                    title={current_mobile_title}\n                    header_classname='contract-type-widget__header'\n                    wrapper_classname='contracts-modal-list'\n                    visible={is_open}\n                    onClose={onClose}\n                    has_content_scroll={!is_info_dialog_open}\n                >\n                    {children}\n                </MobileDialog>\n            </MobileWrapper>\n            <DesktopWrapper>\n                <ContractTypeMenu\n                    is_info_dialog_open={is_info_dialog_open}\n                    is_open={is_open}\n                    item={item}\n                    list={list}\n                    selected={selected}\n                    categories={categories}\n                    onBackButtonClick={onBackButtonClick}\n                    onChangeInput={onChangeInput}\n                    onCategoryClick={onCategoryClick}\n                    show_loading={show_loading}\n                >\n                    {children}\n                </ContractTypeMenu>\n            </DesktopWrapper>\n        </React.Fragment>\n    );\n};\n\nContractTypeDialog.propTypes = {\n    categories: PropTypes.array,\n    children: PropTypes.element,\n    is_info_dialog_open: PropTypes.bool,\n    is_open: PropTypes.bool,\n    item: PropTypes.object,\n    list: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n    onBackButtonClick: PropTypes.func,\n    onCategoryClick: PropTypes.func,\n    onChangeInput: PropTypes.func,\n    onClose: PropTypes.func,\n    selected: PropTypes.string,\n    show_loading: PropTypes.bool,\n};\n\nexport default ContractTypeDialog;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Icon } from '@deriv/components';\n\nconst IconTradeCategory = ({ category, className }) => {\n    let IconCategory;\n    if (category) {\n        switch (category) {\n            case 'rise_fall':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeCall' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypePut' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'rise_fall_equal':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeCall' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypePut' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'high_low':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeCallBarrier' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypePutBarrier' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'end':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeExpirymiss' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeExpiryrange' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'stay':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeRange' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeUpordown' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'match_diff':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeDigitmatch' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeDigitdiff' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'even_odd':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeDigiteven' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeDigitodd' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'over_under':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeDigitover' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeDigitunder' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'touch':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeOnetouch' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeNotouch' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'asian':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeAsianu' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeAsiand' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'lb_call':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <Icon icon='IcTradetypeLbcall' className='category-type' color='brand' />\n                    </div>\n                );\n                break;\n            case 'lb_put':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <Icon icon='IcTradetypeLbput' className='category-type' color='brand' />\n                    </div>\n                );\n                break;\n            case 'lb_high_low':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <Icon icon='IcTradetypeLbhighlow' className='category-type' color='brand' />\n                    </div>\n                );\n                break;\n            case 'run_high_low':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeRunhigh' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeRunlow' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'reset':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeResetcall' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeResetput' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'tick_high_low':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeTickhigh' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeTicklow' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'callputspread':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeCallspread' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypePutspread' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'multiplier':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeMultup' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeMultdown' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case 'accumulator':\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <Icon icon='IcTradetypeAccu' className='category-type' color='brand' />\n                    </div>\n                );\n                break;\n            case 'vanilla':\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeVanillaLongCall' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeVanillaLongPut' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            default:\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <Icon icon='IcUnknown' className='category-type' color='brand' />\n                    </div>\n                );\n                break;\n        }\n    }\n    return <div className={classNames('categories-container', className)}>{IconCategory}</div>;\n};\n\nIconTradeCategory.propTypes = {\n    category: PropTypes.string,\n    className: PropTypes.string,\n};\n\nexport default IconTradeCategory;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Icon, DesktopWrapper } from '@deriv/components';\nimport IconTradeCategory from 'Assets/Trading/Categories/icon-trade-categories.jsx';\nimport { findContractCategory } from '../../../Helpers/contract-type';\n\nconst Display = ({ is_open, list, name, onClick, value }) => {\n    const getDisplayText = () =>\n        findContractCategory(list, { value })?.contract_types?.find(item => item.value === value).text;\n\n    return (\n        <div\n            data-testid='dt_contract_dropdown'\n            className={classNames('contract-type-widget__display', {\n                'contract-type-widget__display--clicked': is_open,\n            })}\n            onClick={onClick}\n        >\n            <IconTradeCategory category={value} className='contract-type-widget__icon-wrapper' />\n            <span name={name} value={value}>\n                {getDisplayText()}\n            </span>\n            <DesktopWrapper>\n                <Icon\n                    icon='IcChevronDown'\n                    className={classNames(\n                        'contract-type-widget__select-arrow',\n                        'contract-type-widget__select-arrow--left'\n                    )}\n                />\n            </DesktopWrapper>\n        </div>\n    );\n};\n\nDisplay.propTypes = {\n    is_open: PropTypes.bool,\n    list: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n    onClick: PropTypes.func,\n    value: PropTypes.string,\n};\n\nexport default Display;\n","import { PropTypes as MobxPropTypes } from 'mobx-react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Icon, Text } from '@deriv/components';\nimport IconTradeCategory from 'Assets/Trading/Categories/icon-trade-categories.jsx';\n\nconst Item = ({ contract_types, handleInfoClick, handleSelect, name, value }) =>\n    contract_types.map((type, idx) => (\n        <div\n            id={`dt_contract_${type.value}_item`}\n            data-testid='dt_contract_item'\n            key={idx}\n            className={classNames('contract-type-item', {\n                'contract-type-item--selected': value === type.value || value.includes(type.value),\n            })}\n            name={name}\n            value={type.value}\n            onClick={e => handleSelect(type, e)}\n        >\n            <IconTradeCategory category={type.value} className='contract-type-item__icon-wrapper' />\n            <Text size='xs' className='contract-type-item__title'>\n                {type.text}\n            </Text>\n            <div id='info-icon' className='contract-type-item__icon' onClick={() => handleInfoClick(type)}>\n                <Icon icon='IcInfoOutline' />\n            </div>\n        </div>\n    ));\n\nItem.propTypes = {\n    contract_types: MobxPropTypes.arrayOrObservableArray,\n    handleInfoClick: PropTypes.func,\n    handleSelect: PropTypes.func,\n    name: PropTypes.string,\n    value: PropTypes.string,\n};\n\nexport default Item;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Item from './contract-type-item.jsx';\nimport { localize } from '@deriv/translations';\nimport { Text } from '@deriv/components';\nimport classNames from 'classnames';\n\nconst List = ({ handleInfoClick, handleSelect, list, name, value }) =>\n    list.map((contract_category, key) => {\n        const contract_types = contract_category.contract_types?.filter(contract_type => {\n            const base_contract_type = /^(.*)_equal$/.exec(contract_type.value)?.[1];\n\n            if (base_contract_type) {\n                return !contract_category.contract_types.some(c => c.value === base_contract_type);\n            }\n\n            return true;\n        });\n        const is_new = contract_category.key === 'Accumulators' || contract_category.key === 'Vanillas';\n\n        return (\n            <div key={key} className='contract-type-list' data-testid='contract_list'>\n                <div className='contract-type-item__container'>\n                    <Text size='xs' className='contract-type-list__label'>\n                        {contract_category.label}\n                    </Text>\n                    {is_new && (\n                        <span className={classNames('dc-vertical-tab__header--new', 'contract-type-item__new')}>\n                            {localize('NEW!')}\n                        </span>\n                    )}\n                </div>\n                <div className='contract-type-list__wrapper'>\n                    <Item\n                        contract_types={contract_types}\n                        handleSelect={handleSelect}\n                        handleInfoClick={handleInfoClick}\n                        name={name}\n                        value={value}\n                    />\n                </div>\n            </div>\n        );\n    });\n\nList.propTypes = {\n    handleInfoClick: PropTypes.func,\n    handleSelect: PropTypes.func,\n    list: PropTypes.array,\n    name: PropTypes.string,\n    value: PropTypes.string,\n};\n\nexport default List;\n","import React from 'react';\nimport Dialog from './contract-type-dialog.jsx';\nimport Display from './contract-type-display.jsx';\nimport List from './contract-type-list.jsx';\nimport Info from './ContractTypeInfo';\n\nconst ContractType = ({ children }) => <>{children}</>;\n\nContractType.Dialog = Dialog;\nContractType.Display = Display;\nContractType.List = List;\nContractType.Info = Info;\n\nexport default ContractType;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { isMobile } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport ContractType from './contract-type.jsx';\nimport { getContractTypeCategoryIcons, findContractCategory } from '../../../Helpers/contract-type';\n\nconst ContractTypeWidget = ({ is_equal, name, value, list, onChange, languageChanged }) => {\n    const wrapper_ref = React.useRef(null);\n    const [is_dialog_open, setDialogVisibility] = React.useState(false);\n    const [is_info_dialog_open, setInfoDialogVisibility] = React.useState(false);\n    const [selected_category, setSelectedCategory] = React.useState(null);\n    const [search_query, setSearchQuery] = React.useState('');\n    const [item, setItem] = React.useState(null);\n    const [selected_item, setSelectedItem] = React.useState(null);\n\n    const handleClickOutside = React.useCallback(\n        event => {\n            if (isMobile()) return;\n            if (wrapper_ref && !wrapper_ref.current?.contains(event.target)) {\n                setDialogVisibility(false);\n                setInfoDialogVisibility(false);\n                setItem({ ...item, value });\n            }\n        },\n        [item, value]\n    );\n\n    React.useEffect(() => {\n        document.addEventListener('mousedown', handleClickOutside);\n        return () => {\n            document.removeEventListener('mousedown', handleClickOutside);\n        };\n    }, [handleClickOutside]);\n\n    const handleCategoryClick = ({ key }) => {\n        setSelectedCategory(key);\n    };\n\n    const handleSelect = (clicked_item, e) => {\n        const categories = list_with_category();\n        const { key } = findContractCategory(categories, clicked_item);\n        if (e.target.id !== 'info-icon') {\n            setDialogVisibility(false);\n            setInfoDialogVisibility(false);\n            setItem(clicked_item);\n            setSelectedItem(clicked_item);\n            setSelectedCategory(key);\n        }\n    };\n\n    React.useEffect(() => {\n        if (selected_item && selected_item.value !== value) {\n            onChange({ target: { name, value: selected_item.value } });\n        }\n    }, [selected_item, onChange, name, value]);\n\n    const handleInfoClick = clicked_item => {\n        setInfoDialogVisibility(!is_info_dialog_open);\n\n        setItem(clicked_item);\n    };\n\n    const handleNavigationClick = nav_clicked_item => {\n        setItem(nav_clicked_item);\n    };\n\n    const handleVisibility = () => {\n        setDialogVisibility(!is_dialog_open);\n    };\n\n    const onWidgetClick = () => {\n        setDialogVisibility(!is_dialog_open);\n        setInfoDialogVisibility(false);\n        setItem({ ...item, value });\n    };\n\n    const onBackButtonClick = () => {\n        setInfoDialogVisibility(false);\n        setItem({ ...item, value });\n    };\n\n    const onChangeInput = searchQueryItem => setSearchQuery(searchQueryItem);\n\n    const list_with_category = () => {\n        const contract_type_category_icon = getContractTypeCategoryIcons();\n        const order_arr = ['Accumulators', 'Multipliers', 'Vanillas', 'Ups & Downs', 'Highs & Lows', 'Digits'];\n        const ordered_list = list.sort((a, b) => order_arr.indexOf(a.key) - order_arr.indexOf(b.key));\n        const accumulators_category = ordered_list.filter(({ label }) => label === localize('Accumulators'));\n        const multipliers_category = ordered_list.filter(({ label }) => label === localize('Multipliers'));\n        const options_category = ordered_list.filter(\n            ({ label }) => label !== localize('Multipliers') && label !== localize('Accumulators')\n        );\n\n        const categories = [];\n\n        if (list.length > 0) {\n            categories.push({\n                label: localize('All'),\n                contract_categories: [...ordered_list],\n                key: 'All',\n            });\n        }\n\n        if (multipliers_category.length > 0) {\n            categories.push({\n                label: localize('Multipliers'),\n                contract_categories: multipliers_category,\n                key: 'Multipliers',\n            });\n        }\n\n        if (options_category.length > 0) {\n            categories.push({\n                label: localize('Options'),\n                contract_categories: options_category,\n                component: options_category.some(category => category.key === 'Vanillas') && (\n                    <span className='dc-vertical-tab__header--new'>{localize('NEW')}!</span>\n                ),\n                key: 'Options',\n            });\n        }\n\n        if (accumulators_category.length > 0) {\n            categories.push({\n                label: localize('Accumulators'),\n                contract_categories: accumulators_category,\n                component: <span className='dc-vertical-tab__header--new'>{localize('NEW')}!</span>,\n                key: 'Accumulators',\n            });\n        }\n\n        return categories.map(contract_category => {\n            contract_category.contract_types = contract_category.contract_categories.reduce(\n                (aray, x) => [...aray, ...x.contract_types],\n                []\n            );\n            contract_category.icon = contract_type_category_icon[contract_category.key];\n\n            if (search_query) {\n                contract_category.contract_categories = contract_category.contract_categories\n                    .filter(category =>\n                        category.contract_types.find(type =>\n                            type.text.toLowerCase().includes(search_query.toLowerCase())\n                        )\n                    )\n                    .map(category => ({\n                        ...category,\n                        contract_types: category.contract_types.filter(type =>\n                            type.text.toLowerCase().includes(search_query.toLowerCase())\n                        ),\n                    }));\n            }\n\n            return contract_category;\n        });\n    };\n\n    const selected_category_contracts = () => {\n        const selected_list_category = list_with_category()?.find(\n            categoryItem => categoryItem.key === selected_category\n        );\n        return (selected_list_category || list_with_category()[0]).contract_categories;\n    };\n\n    const selected_contract_index = () => {\n        const contract_types_arr = list_with_category()?.flatMap(category => category.contract_types);\n        return contract_types_arr\n            .filter(type => type.value !== 'rise_fall_equal')\n            .findIndex(type => type.value === item?.value);\n    };\n\n    return (\n        <div\n            data-testid='dt_contract_widget'\n            id='dt_contract_dropdown'\n            className={`contract-type-widget contract-type-widget--${value} dropdown--left`}\n            ref={wrapper_ref}\n            tabIndex='0'\n        >\n            <ContractType.Display\n                is_open={is_dialog_open || is_info_dialog_open}\n                list={list}\n                name={name}\n                onClick={onWidgetClick}\n                value={value}\n            />\n            <ContractType.Dialog\n                is_info_dialog_open={is_info_dialog_open}\n                is_open={is_dialog_open}\n                item={item || { value }}\n                categories={list_with_category()}\n                list={list}\n                selected={selected_category || list_with_category()[0]?.key}\n                onBackButtonClick={onBackButtonClick}\n                onClose={handleVisibility}\n                onChangeInput={onChangeInput}\n                onCategoryClick={handleCategoryClick}\n                show_loading={languageChanged}\n            >\n                {is_info_dialog_open ? (\n                    <ContractType.Info\n                        handleNavigationClick={handleNavigationClick}\n                        initial_index={selected_contract_index()}\n                        handleSelect={handleSelect}\n                        item={item || { value }}\n                        list={list_with_category()}\n                    />\n                ) : (\n                    <ContractType.List\n                        handleInfoClick={handleInfoClick}\n                        handleSelect={handleSelect}\n                        is_equal={is_equal}\n                        list={selected_category_contracts()}\n                        name={name}\n                        value={value}\n                    />\n                )}\n            </ContractType.Dialog>\n        </div>\n    );\n};\n\nContractTypeWidget.propTypes = {\n    is_equal: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    languageChanged: PropTypes.bool,\n    list: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n    name: PropTypes.string,\n    onChange: PropTypes.func,\n    value: PropTypes.string,\n};\n\nexport default ContractTypeWidget;\n","import ContractTypeWidget from './contract-type-widget.jsx';\n\nexport default ContractTypeWidget;\n","import React from 'react';\nimport { MobileWrapper, usePrevious } from '@deriv/components';\nimport { unsupported_contract_types_list } from '@deriv/shared';\nimport { isDigitTradeType } from 'Modules/Trading/Helpers/digits';\nimport { localize } from '@deriv/translations';\nimport { ToastPopup } from 'Modules/Trading/Containers/toast-popup.jsx';\nimport { getMarketNamesMap } from '../../../Constants';\nimport ContractTypeWidget from '../Components/Form/ContractType';\nimport { getAvailableContractTypes } from '../Helpers/contract-type';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer, useStore } from '@deriv/stores';\n\nconst Contract = observer(() => {\n    const {\n        contract_type,\n        contract_types_list,\n        is_mobile_digit_view_selected: is_digit_view,\n        is_equal,\n        onChange,\n        symbol,\n    } = useTraderStore();\n    const {\n        common: { current_language },\n        client: { is_virtual },\n    } = useStore();\n\n    const list = getAvailableContractTypes(contract_types_list, unsupported_contract_types_list);\n\n    const digits_message = localize('Last digit stats for latest 1000 ticks for {{ underlying_name }}', {\n        underlying_name: getMarketNamesMap()[symbol.toUpperCase()],\n    });\n    const prev_lang = usePrevious(current_language);\n    return (\n        <React.Fragment>\n            <MobileWrapper>\n                {isDigitTradeType(contract_type) && (\n                    <ToastPopup className='digits__toast-info' is_open={is_digit_view} type='info' timeout={3000}>\n                        {digits_message}\n                    </ToastPopup>\n                )}\n            </MobileWrapper>\n            <ContractTypeWidget\n                is_equal={is_equal}\n                is_virtual={is_virtual}\n                list={list}\n                name='contract_type'\n                onChange={onChange}\n                value={contract_type}\n                languageChanged={prev_lang && prev_lang !== current_language}\n            />\n        </React.Fragment>\n    );\n});\n\nexport default Contract;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Text } from '@deriv/components';\nimport { isMobile } from '@deriv/shared';\n\nconst PurchaseButtonsOverlay = ({ is_to_cover_one_button = false, message }) => {\n    const desktop_text_size = is_to_cover_one_button ? 'xxs' : 'xs';\n    return (\n        <div\n            data-testid='dt_purchase_button_overlay'\n            className={classNames('purchase-buttons-overlay', {\n                'purchase-buttons-overlay__one-button': !isMobile() && is_to_cover_one_button,\n            })}\n        >\n            <Text\n                weight='bold'\n                size={isMobile() ? 'xxs' : desktop_text_size}\n                className='purchase-buttons-overlay__caption'\n            >\n                {message}\n            </Text>\n        </div>\n    );\n};\n\nexport default React.memo(PurchaseButtonsOverlay);\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { DesktopWrapper, MobileWrapper, Money, IconTradeTypes, Text } from '@deriv/components';\nimport { getContractTypeDisplay } from 'Constants/contract';\nimport ContractInfo from 'Modules/Trading/Components/Form/Purchase/contract-info.jsx';\nimport { getGrowthRatePercentage } from '@deriv/shared';\n\n// TODO [lazy-loading-required] Responsive related components\nconst ButtonTextWrapper = ({ should_fade, is_loading, type, is_high_low }) => {\n    return (\n        <div className='btn-purchase__text_wrapper'>\n            <Text size='xs' weight='bold' color='colored-background'>\n                {!should_fade && is_loading ? '' : getContractTypeDisplay(type, is_high_low, true)}\n            </Text>\n        </div>\n    );\n};\n\nconst IconComponentWrapper = ({ type }) => (\n    <div className='btn-purchase__icon_wrapper'>\n        <IconTradeTypes type={type} className='btn-purchase__icon' color='active' />\n    </div>\n);\n\nconst PurchaseButton = ({\n    buy_info,\n    basis, // mobile-only\n    currency,\n    growth_rate,\n    has_deal_cancellation,\n    index,\n    info,\n    is_accumulator,\n    is_disabled,\n    is_high_low,\n    is_loading,\n    is_multiplier,\n    is_vanilla,\n    is_proposal_empty,\n    purchased_states_arr,\n    setPurchaseState,\n    should_fade,\n    onClickPurchase,\n    type,\n}) => {\n    const getIconType = () => {\n        if (!should_fade && is_loading) return '';\n        return is_high_low ? `${type.toLowerCase()}_barrier` : type.toLowerCase();\n    };\n    const { has_increased } = info;\n    const is_button_disabled = (is_disabled && !is_loading) || is_proposal_empty;\n    const non_multiplier_info_right = is_accumulator ? `${getGrowthRatePercentage(info.growth_rate)}%` : info.returns;\n\n    let button_value;\n\n    if (is_multiplier) {\n        button_value = (\n            <Text size='xs' weight='bold' color='colored-background'>\n                <Money amount={info.stake} currency={currency} show_currency />\n            </Text>\n        );\n    } else if (!is_vanilla) {\n        button_value = (\n            <Text size='xs' weight='bold' color='colored-background'>\n                {!(is_loading || is_disabled) ? non_multiplier_info_right : ''}\n            </Text>\n        );\n    }\n\n    return (\n        <button\n            disabled={is_disabled}\n            id={`dt_purchase_${type.toLowerCase()}_button`}\n            className={classNames('btn-purchase', {\n                'btn-purchase--disabled': is_button_disabled || !!buy_info.error,\n                'btn-purchase--animated--slide': is_loading && !should_fade,\n                'btn-purchase--animated--fade': is_loading && should_fade,\n                'btn-purchase--swoosh': !!purchased_states_arr[index],\n                'btn-purchase--1': index === 0,\n                'btn-purchase--2': index === 1,\n                'btn-purchase--accumulator': is_accumulator,\n                'btn-purchase--multiplier': is_multiplier,\n                'btn-purchase--multiplier-deal-cancel': has_deal_cancellation,\n                'btn-purchase--1__vanilla-opts': index === 0 && is_vanilla,\n                'btn-purchase--2__vanilla-opts': index === 1 && is_vanilla,\n            })}\n            onClick={() => {\n                setPurchaseState(index);\n                onClickPurchase(info.id, info.stake, type);\n            }}\n        >\n            <DesktopWrapper>\n                <div className='btn-purchase__info btn-purchase__info--left'>\n                    <div className='btn-purchase__type-wrapper'>\n                        <IconComponentWrapper type={getIconType()} />\n                        <ButtonTextWrapper\n                            should_fade={should_fade}\n                            is_loading={is_loading}\n                            type={type}\n                            is_high_low={is_high_low}\n                        />\n                    </div>\n                </div>\n                <div className='btn-purchase__effect-detail' />\n                <div className='btn-purchase__effect-detail--arrow' />\n                <div className='btn-purchase__info btn-purchase__info--right'>\n                    <div className='btn-purchase__text_wrapper'>{button_value}</div>\n                </div>\n            </DesktopWrapper>\n            <MobileWrapper>\n                <div\n                    className={classNames('btn-purchase__top', {\n                        'btn-purchase__top--accumulator': is_accumulator,\n                        'btn-purchase--vanilla': is_vanilla,\n                    })}\n                >\n                    <IconComponentWrapper type={getIconType()} />\n                    <ButtonTextWrapper\n                        should_fade={should_fade}\n                        is_loading={is_loading}\n                        type={type}\n                        is_high_low={is_high_low}\n                    />\n                </div>\n                {!is_vanilla && (\n                    <div className='btn-purchase__bottom'>\n                        <ContractInfo\n                            basis={basis}\n                            currency={currency}\n                            growth_rate={growth_rate}\n                            has_increased={has_increased}\n                            is_accumulator={is_accumulator}\n                            is_loading={is_loading}\n                            is_multiplier={is_multiplier}\n                            should_fade={should_fade}\n                            proposal_info={info}\n                            type={type}\n                        />\n                    </div>\n                )}\n            </MobileWrapper>\n        </button>\n    );\n};\n\nPurchaseButton.propTypes = {\n    basis: PropTypes.string,\n    buy_info: PropTypes.object,\n    currency: PropTypes.string,\n    growth_rate: PropTypes.number,\n    has_deal_cancellation: PropTypes.bool,\n    index: PropTypes.number,\n    info: PropTypes.object,\n    is_accumulator: PropTypes.bool,\n    is_disabled: PropTypes.bool,\n    is_high_low: PropTypes.bool,\n    is_loading: PropTypes.bool,\n    is_multiplier: PropTypes.bool,\n    is_proposal_empty: PropTypes.bool,\n    is_vanilla: PropTypes.bool,\n    onClickPurchase: PropTypes.func,\n    purchased_states_arr: PropTypes.array,\n    should_fade: PropTypes.bool,\n    setPurchaseState: PropTypes.func,\n    type: PropTypes.string,\n};\n\nexport default PurchaseButton;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { DesktopWrapper, MobileWrapper, Popover } from '@deriv/components';\nimport Fieldset from 'App/Components/Form/fieldset.jsx';\nimport ContractInfo from 'Modules/Trading/Components/Form/Purchase/contract-info.jsx';\nimport PurchaseButton from 'Modules/Trading/Components/Elements/purchase-button.jsx';\nimport CancelDealInfo from '../Form/Purchase/cancel-deal-info.jsx';\n\nconst PurchaseFieldset = ({\n    basis,\n    buy_info,\n    currency,\n    growth_rate,\n    has_cancellation,\n    info,\n    index,\n    is_accumulator,\n    is_disabled,\n    is_high_low,\n    is_loading,\n    is_market_closed,\n    is_multiplier,\n    is_vanilla,\n    is_proposal_empty,\n    is_proposal_error,\n    purchased_states_arr,\n    onClickPurchase,\n    onHoverPurchase,\n    setPurchaseState,\n    type,\n}) => {\n    const [should_fade, setShouldFade] = React.useState(false);\n\n    React.useEffect(() => {\n        setShouldFade(true);\n    }, []);\n\n    const purchase_button = (\n        <React.Fragment>\n            <PurchaseButton\n                buy_info={buy_info}\n                currency={currency}\n                info={info}\n                index={index}\n                growth_rate={growth_rate}\n                has_deal_cancellation={is_multiplier && has_cancellation}\n                is_accumulator={is_accumulator}\n                is_disabled={is_disabled}\n                is_high_low={is_high_low}\n                is_loading={is_loading}\n                is_multiplier={is_multiplier}\n                is_vanilla={is_vanilla}\n                is_proposal_empty={is_proposal_empty}\n                purchased_states_arr={purchased_states_arr}\n                onClickPurchase={onClickPurchase}\n                setPurchaseState={setPurchaseState}\n                should_fade={should_fade}\n                type={type}\n                basis={basis} // mobile-only\n            />\n            {is_multiplier && has_cancellation && (\n                <MobileWrapper>\n                    <CancelDealInfo proposal_info={info} />\n                </MobileWrapper>\n            )}\n        </React.Fragment>\n    );\n\n    return (\n        <Fieldset\n            className={classNames('trade-container__fieldset', 'purchase-container__option', {\n                'purchase-container__option--has-cancellation': has_cancellation,\n            })}\n        >\n            <DesktopWrapper>\n                <div\n                    className={classNames('trade-container__fieldset-wrapper', {\n                        'trade-container__fieldset-wrapper--disabled': is_proposal_error || is_disabled,\n                    })}\n                >\n                    {(has_cancellation || !is_multiplier) && !is_accumulator && (\n                        <ContractInfo\n                            basis={basis}\n                            currency={currency}\n                            proposal_info={info}\n                            has_increased={info.has_increased}\n                            is_loading={is_loading}\n                            is_multiplier={is_multiplier}\n                            is_vanilla={is_vanilla}\n                            should_fade={should_fade}\n                            type={type}\n                        />\n                    )}\n                    <div\n                        className={classNames('btn-purchase__shadow-wrapper', {\n                            'btn-purchase__shadow-wrapper--disabled': is_proposal_error || is_disabled,\n                        })}\n                        onMouseEnter={() => {\n                            if (!is_disabled) {\n                                onHoverPurchase(true, type);\n                            }\n                        }}\n                        onMouseLeave={() => {\n                            if (!is_disabled) {\n                                onHoverPurchase(false);\n                            }\n                        }}\n                    >\n                        <div className='btn-purchase__box-shadow' />\n                        {is_proposal_error && !is_market_closed ? (\n                            <Popover\n                                has_error\n                                alignment='left'\n                                message={info.message}\n                                is_open={is_proposal_error && !is_market_closed}\n                                relative_render\n                                margin={6}\n                            >\n                                {purchase_button}\n                            </Popover>\n                        ) : (\n                            <React.Fragment>\n                                {is_multiplier ? (\n                                    <Popover\n                                        alignment='left'\n                                        is_bubble_hover_enabled\n                                        margin={8}\n                                        message={info.message}\n                                        relative_render\n                                    >\n                                        {purchase_button}\n                                    </Popover>\n                                ) : (\n                                    purchase_button\n                                )}\n                            </React.Fragment>\n                        )}\n                    </div>\n                </div>\n            </DesktopWrapper>\n            <MobileWrapper>\n                {is_proposal_error && <div className='btn-purchase__error'>{info.message}</div>}\n                {purchase_button}\n            </MobileWrapper>\n        </Fieldset>\n    );\n};\n\nPurchaseFieldset.propTypes = {\n    basis: PropTypes.string,\n    buy_info: PropTypes.object,\n    currency: PropTypes.string,\n    growth_rate: PropTypes.number,\n    has_cancellation: PropTypes.bool,\n    index: PropTypes.number,\n    info: PropTypes.object,\n    is_accumulator: PropTypes.bool,\n    is_disabled: PropTypes.bool,\n    is_high_low: PropTypes.bool,\n    is_loading: PropTypes.bool,\n    is_market_closed: PropTypes.bool,\n    is_multiplier: PropTypes.bool,\n    is_proposal_empty: PropTypes.bool,\n    is_proposal_error: PropTypes.bool,\n    is_vanilla: PropTypes.bool,\n    onClickPurchase: PropTypes.func,\n    onHoverPurchase: PropTypes.func,\n    purchased_states_arr: PropTypes.array,\n    setPurchaseState: PropTypes.func,\n    type: PropTypes.string,\n};\n\nexport default React.memo(PurchaseFieldset);\n","import React from 'react';\nimport { isAccumulatorContract, isEmptyObject, isMobile } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport PurchaseButtonsOverlay from 'Modules/Trading/Components/Elements/purchase-buttons-overlay.jsx';\nimport PurchaseFieldset from 'Modules/Trading/Components/Elements/purchase-fieldset.jsx';\nimport { getContractTypePosition } from 'Constants/contract';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer, useStore } from '@deriv/stores';\nimport ContractInfo from 'Modules/Trading/Components/Form/Purchase/contract-info.jsx';\n\nconst Purchase = observer(({ is_market_closed }) => {\n    const {\n        portfolio: { active_positions },\n        ui: { purchase_states: purchased_states_arr, is_mobile, setPurchaseState },\n    } = useStore();\n    const {\n        basis,\n        contract_type,\n        currency,\n        is_accumulator,\n        is_multiplier,\n        growth_rate,\n        has_cancellation,\n        is_purchase_enabled,\n        is_vanilla,\n        onPurchase: onClickPurchase,\n        onHoverPurchase,\n        proposal_info,\n        purchase_info,\n        symbol,\n        validation_errors,\n        vanilla_trade_type,\n        trade_types,\n        is_trade_enabled,\n    } = useTraderStore();\n    const is_high_low = /^high_low$/.test(contract_type.toLowerCase());\n    const isLoading = info => {\n        const has_validation_error = Object.values(validation_errors).some(e => e.length);\n        return !has_validation_error && !info.has_error && !info.id;\n    };\n    const is_proposal_empty = isEmptyObject(proposal_info);\n    const components = [];\n    Object.keys(trade_types).map((type, index) => {\n        const getSortedIndex = () => {\n            if (getContractTypePosition(type) === 'top') return 0;\n            if (getContractTypePosition(type) === 'bottom') return 1;\n            return index;\n        };\n        const info = proposal_info[type] || {};\n        const is_disabled = !is_trade_enabled || !info.id || !is_purchase_enabled;\n        const is_proposal_error =\n            is_multiplier || (is_accumulator && !is_mobile) ? info.has_error && !!info.message : info.has_error;\n        const purchase_fieldset = (\n            <div className='trade-params--mobile__payout-container'>\n                {is_vanilla && isMobile() && (\n                    <ContractInfo\n                        basis={basis}\n                        currency={currency}\n                        has_increased={info.has_increased}\n                        is_loading={isLoading(info)}\n                        is_multiplier={is_multiplier}\n                        is_vanilla={is_vanilla}\n                        proposal_info={info}\n                        type={type}\n                    />\n                )}\n                <PurchaseFieldset\n                    basis={basis}\n                    buy_info={purchase_info}\n                    currency={currency}\n                    info={info}\n                    key={index}\n                    index={getSortedIndex(index, type)}\n                    growth_rate={growth_rate}\n                    has_cancellation={has_cancellation}\n                    is_disabled={is_disabled}\n                    is_accumulator={is_accumulator}\n                    is_high_low={is_high_low}\n                    is_loading={isLoading(info)}\n                    is_market_closed={is_market_closed}\n                    is_mobile={is_mobile}\n                    is_multiplier={is_multiplier}\n                    is_vanilla={is_vanilla}\n                    is_proposal_empty={is_proposal_empty}\n                    is_proposal_error={is_proposal_error}\n                    purchased_states_arr={purchased_states_arr}\n                    onHoverPurchase={onHoverPurchase}\n                    onClickPurchase={onClickPurchase}\n                    setPurchaseState={setPurchaseState}\n                    type={type}\n                />\n            </div>\n        );\n\n        if (!is_vanilla) {\n            switch (getContractTypePosition(type)) {\n                case 'top':\n                    components.unshift(purchase_fieldset);\n                    break;\n                case 'bottom':\n                    components.push(purchase_fieldset);\n                    break;\n                default:\n                    components.push(purchase_fieldset);\n                    break;\n            }\n        } else if (vanilla_trade_type === type) {\n            components.push(purchase_fieldset);\n        }\n    });\n\n    const should_disable_accu_purchase =\n        is_accumulator &&\n        !!active_positions.find(\n            ({ contract_info, type }) => isAccumulatorContract(type) && contract_info.underlying === symbol\n        );\n\n    if (should_disable_accu_purchase) {\n        components.unshift(\n            <PurchaseButtonsOverlay\n                is_to_cover_one_button={components.length === 1}\n                key='overlay'\n                message={localize('You can only purchase one contract at a time')}\n            />\n        );\n    }\n    return components;\n});\n\nexport default Purchase;\n","import { isEmptyObject, getPropertyValue } from '@deriv/shared';\nimport { ContractType } from 'Stores/Modules/Trading/Helpers/contract-type';\n\nexport const hasCallPutEqual = contract_type_list => {\n    if (isEmptyObject(contract_type_list)) return false;\n\n    return ((getPropertyValue(contract_type_list, 'Ups & Downs') || {}).categories || []).some(\n        contract => contract.value === 'rise_fall_equal'\n    );\n};\n\nexport const hasDurationForCallPutEqual = (contract_type_list, duration_unit, contract_start_type) => {\n    if (!contract_type_list || !duration_unit || !contract_start_type) return false;\n\n    const contract_list = Object.keys(contract_type_list || {}).reduce(\n        (key, list) => [...key, ...contract_type_list[list].categories.map(contract => contract.value)],\n        []\n    );\n\n    const contract_duration_list = contract_list.map(list => ({\n        [list]: getPropertyValue(ContractType.getFullContractTypes(), [\n            list,\n            'config',\n            'durations',\n            'units_display',\n            contract_start_type,\n        ]),\n    }));\n\n    // Check whether rise fall equal is exists and has the current store duration unit\n    if (hasCallPutEqual(contract_type_list)) {\n        const found = contract_duration_list.filter(contract => contract && contract.rise_fall_equal);\n        if (found.length > 0) {\n            return found[0].rise_fall_equal.some(duration => duration.value === duration_unit);\n        }\n    }\n\n    return false;\n};\n\nexport const isRiseFallEqual = contract_type => /^(rise_fall|rise_fall_equal)$/.test(contract_type);\n","export const onToggleCancellation = ({ has_cancellation, onChangeMultiple }) => {\n    // e.target.checked is not reliable, we have to toggle its previous value\n    const new_val = !has_cancellation;\n    onChangeMultiple({\n        has_cancellation: new_val,\n        ...(!new_val\n            ? {\n                  // reset deal cancellation price\n                  cancellation_price: undefined,\n              }\n            : {\n                  // unchecked Stop loss\n                  has_stop_loss: false,\n                  has_take_profit: false,\n              }),\n    });\n};\n\nexport const onChangeCancellationDuration = ({ event, onChangeMultiple }) => {\n    const { value } = event.target;\n    onChangeMultiple({\n        has_cancellation: true,\n        has_take_profit: false,\n        has_stop_loss: false,\n        cancellation_duration: value,\n    });\n};\n"],"names":["Fieldset","children","className","header","header_tooltip","is_center","is_tooltip_disabled","onMouseEnter","onMouseLeave","fieldset_header_class","classNames","fieldset_info_class","Popover","alignment","icon","is_bubble_hover_enabled","message","margin","relative_render","propTypes","PropTypes","NumberSelector","arr_arr_numbers","name","onChange","selected_number","should_show_in_percents","handleSelect","item","target","getAttribute","value","map","arr_numbers","idx","key","i","onClick","LabeledQuantityInputMobile","input_label","props","wrapper_classname","InputField","React","observer","proposal_info","useTraderStore","currency","has_cancellation","id","cancellation","error","has_error","is_row_layout","setIsRowLayout","ref","current","el_height","parentElement","clientHeight","isDesktop","getDecimalPlaces","isMobile","localize","Money","amount","ask_price","show_currency","ValueMovement","has_error_or_not_loaded","has_increased","is_vanilla","obj_contract_basis","Icon","ContractInfo","basis","growth_rate","is_loading","is_accumulator","is_multiplier","should_fade","type","localized_basis","getLocalizedBasis","basis_text","payout","stake","stakeOrPayout","text","toLowerCase","DesktopWrapper","MobileWrapper","Text","size","weight","color","getGrowthRatePercentage","getCurrencyDisplayCode","classNameBubble","classNameWrapper","zIndex","Localize","i18n_default_text","components","values","trade_type","title","includes","maximum_payout","maximum_ticks","content","label","tooltip_text","line_height","align","as","Expiration","is_text_only","text_size","expiration","start_time","useStore","common","server_time","formatDuration","getDiffDuration","unix","days","timestamp","date","getDateFromNow","style","display","alignItems","justifyContent","marginRight","MultipliersInfo","commission_text_size","stop_out_text_size","is_tooltip_relative","should_show_tooltip","trade","has_stop_loss","multiplier","commission","stop_out","commission_text","stop_out_text","commission_tooltip","commission_percentage","Number","toFixed","stop_out_tooltip","stop_out_percentage","Math","floor","abs","getInfo","ui","client","addToast","removeToast","current_focus","setCurrentFocus","is_single_currency","validation_errors","stop_loss","onChangeMultiple","InputWithCheckbox","classNameInlinePrefix","classNameInput","defaultChecked","error_messages","undefined","is_negative_disabled","is_input_hidden","max_value","e","new_val","tooltip_label","tooltip_alignment","error_message_alignment","take_profit","has_take_profit","Barrier","is_minimized","is_absolute_only","barrier_1","barrier_2","barrier_count","barrier_pipsize","duration_unit","trade_types","show_modal","setShowModal","type_with_current_spot","Object","keys","find","spot","contract_info","current_spot","current_barrier_price","barrier","has_spot_increased","usePrevious","barrier_title","input_class","is_absolute_barrier","format","float_value","parseFloat","sign","toString","is_float","is_signed","Modal","is_open","should_header_stick_body","toggleModal","height","width","is_incrementable","is_incrementable_on_long_press","is_read_only","LastDigit","last_digit","arr_five","Array","strike","strike_price_list","vanilla_trade_type","is_title_centered","Div100vhContainer","max_autoheight_offset","payout_status","RadioGroup","onToggle","selected","String","Strike","strike_price_choices","expiry_type","expiry_date","advanced_duration_unit","setIsOpen","should_open_dropdown","setShouldOpenDropdown","selected_value","setSelectedValue","toggleWidget","is_24_hours_contract","toMoment","isSame","is_relative_strike_applicable","strike_price","Dropdown","classNameDisplay","disabled","is_alignment_left","is_nativepicker","list","no_border","onChangeUiStore","ButtonToggle","buttons_arr","is_animated","substring","TradeCategories","TradeTypeTemplate","category","styles","xmlns","fill","rx","d","clipPath","transform","AccumulatorDescriptionVideo","selected_contract_type","setIsLoading","getVideoSource","extension","getUrlBase","mp4_src","webm_src","Loading","is_fullscreen","autoPlay","loop","onLoadedData","playsInline","preload","controls","src","TradeCategoriesGIF","list_item_text","TABS","Info","handleNavigationClick","initial_index","carousel_index","setCarouselIndex","selected_tab","setSelectedTab","contract_types","getContractTypes","filter","has_toggle_buttons","is_description_tab_selected","is_glossary_tab_selected","scroll_bar_height","onClickGlossary","cards","ThemedScrollbars","left","autohide","has_rounded_button","Carousel","disable_swipe","onItemSelect","active_index","show_bullet","show_nav","Button","contract_type","interpolation","escapeValue","secondary","Header","onClickGoBack","SearchInput","onClickClearInput","Input","autoFocus","leading_icon","trailing_icon","placeholder","displayName","NoResultsMessage","Dialog","categories","is_info_dialog_open","onBackButtonClick","onCategoryClick","onChangeInput","show_loading","input_ref","input_value","setInputValue","contract_category","getContractCategoryKey","selected_item","selected_category_contract","contract_categories","length","focus","renderChildren","action_bar_item","CSSTransition","in","timeout","enter","enterDone","exit","unmountOnExit","VerticalTab","header_title","items","selectedKey","ContractTypeDialog","onClose","current_mobile_title","MobileDialog","portal_element_id","header_classname","visible","has_content_scroll","ContractTypeMenu","IconTradeCategory","IconCategory","Display","findContractCategory","Item","handleInfoClick","MobxPropTypes","List","base_contract_type","exec","some","c","is_new","ContractType","ContractTypeWidget","is_equal","languageChanged","wrapper_ref","is_dialog_open","setDialogVisibility","setInfoDialogVisibility","selected_category","setSelectedCategory","search_query","setSearchQuery","setItem","setSelectedItem","handleClickOutside","event","contains","document","addEventListener","removeEventListener","clicked_item","list_with_category","contract_type_category_icon","getContractTypeCategoryIcons","order_arr","ordered_list","sort","a","b","indexOf","accumulators_category","multipliers_category","options_category","push","component","reduce","aray","x","tabIndex","searchQueryItem","nav_clicked_item","flatMap","findIndex","categoryItem","Contract","contract_types_list","is_digit_view","is_mobile_digit_view_selected","symbol","current_language","is_virtual","getAvailableContractTypes","unsupported_contract_types_list","digits_message","underlying_name","getMarketNamesMap","toUpperCase","prev_lang","isDigitTradeType","PurchaseButtonsOverlay","is_to_cover_one_button","desktop_text_size","ButtonTextWrapper","is_high_low","getContractTypeDisplay","IconComponentWrapper","IconTradeTypes","PurchaseButton","button_value","buy_info","has_deal_cancellation","index","info","is_disabled","is_proposal_empty","purchased_states_arr","setPurchaseState","onClickPurchase","getIconType","is_button_disabled","non_multiplier_info_right","returns","PurchaseFieldset","is_market_closed","is_proposal_error","onHoverPurchase","setShouldFade","purchase_button","Purchase","active_positions","portfolio","purchase_states","is_mobile","is_purchase_enabled","onPurchase","purchase_info","is_trade_enabled","test","isLoading","isEmptyObject","purchase_fieldset","getContractTypePosition","unshift","should_disable_accu_purchase","isAccumulatorContract","underlying","hasCallPutEqual","contract_type_list","getPropertyValue","contract","hasDurationForCallPutEqual","contract_start_type","contract_duration_list","found","rise_fall_equal","duration","isRiseFallEqual","onToggleCancellation","cancellation_price","onChangeCancellationDuration","cancellation_duration"],"sourceRoot":""}