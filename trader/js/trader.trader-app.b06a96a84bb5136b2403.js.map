{"version":3,"file":"trader/js/trader.trader-app.b06a96a84bb5136b2403.js","mappings":"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","sources":["webpack://@deriv/trader/../stores/src/storeContext.ts","webpack://@deriv/trader/../api/src/APIProvider.tsx","webpack://@deriv/trader/../api/src/useSubscription.ts","webpack://@deriv/trader/../stores/src/useStore.ts","webpack://@deriv/trader/../stores/src/providers/ExchangeRatesProvider.tsx","webpack://@deriv/trader/../stores/src/stores/BaseStore.ts","webpack://@deriv/trader/../stores/src/stores/ExchangeRatesStore.ts","webpack://@deriv/trader/../stores/src/stores/FeatureFlagsStore.ts","webpack://@deriv/trader/../stores/src/storeProvider.tsx","webpack://@deriv/trader/./src/App/Components/Animations/bounce.jsx","webpack://@deriv/trader/./src/App/Components/Animations/slide-in.jsx","webpack://@deriv/trader/./src/App/Components/Elements/ContentLoader/positions-card.jsx","webpack://@deriv/trader/./src/App/Components/Elements/ContentLoader/trade-params.jsx","webpack://@deriv/trader/./src/App/Components/Elements/PositionsDrawer/helpers/positions-helper.js","webpack://@deriv/trader/./src/_common/components/loading.tsx","webpack://@deriv/trader/./src/App/Components/Elements/chart-loader.jsx","webpack://@deriv/trader/./src/App/Components/Elements/market-countdown-timer.jsx","webpack://@deriv/trader/./src/App/Components/Routes/helpers.js","webpack://@deriv/trader/./src/App/Components/Elements/EmptyPortfolioMessage/empty-portfolio-message.jsx","webpack://@deriv/trader/./src/App/Components/Elements/EmptyPortfolioMessage/index.js","webpack://@deriv/trader/./src/App/Components/Elements/PositionsDrawer/positions-drawer.jsx","webpack://@deriv/trader/./src/App/Components/Elements/PositionsDrawer/index.js","webpack://@deriv/trader/./src/App/Components/Elements/market-is-closed-overlay.jsx","webpack://@deriv/trader/./src/Modules/Trading/Containers/test.jsx","webpack://@deriv/trader/./src/Modules/SmartChart/Helpers/symbol.js","webpack://@deriv/trader/./src/Modules/Trading/Containers/chart-widgets.jsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/form-layout.jsx","webpack://@deriv/trader/./src/Modules/SmartChart/Components/Markers/accumulators-profit-loss-text.jsx","webpack://@deriv/trader/./src/Modules/SmartChart/Components/Markers/accumulators-profit-loss-tooltip.jsx","webpack://@deriv/trader/./src/Modules/SmartChart/Components/Markers/accumulators-chart-elements.jsx","webpack://@deriv/trader/./src/Modules/SmartChart/Components/toolbar-widgets.jsx","webpack://@deriv/trader/./src/Modules/Trading/Containers/trade.jsx","webpack://@deriv/trader/./src/Modules/Trading/index.js","webpack://@deriv/trader/./src/App/Constants/routes-config.js","webpack://@deriv/trader/./src/App/Components/Routes/binary-link.jsx","webpack://@deriv/trader/./src/App/Components/Routes/route-with-sub-routes.jsx","webpack://@deriv/trader/./src/App/Components/Routes/binary-routes.jsx","webpack://@deriv/trader/./src/App/Components/Routes/index.js","webpack://@deriv/trader/./src/App/Containers/Routes/routes.jsx","webpack://@deriv/trader/./src/App/Components/Elements/PositionsDrawer/result-mobile.jsx","webpack://@deriv/trader/./src/App/Components/Elements/PositionsDrawer/positions-modal-card.jsx","webpack://@deriv/trader/./src/App/Components/Elements/TogglePositions/toggle-positions.jsx","webpack://@deriv/trader/./src/App/Components/Elements/TogglePositions/toggle-positions-mobile.jsx","webpack://@deriv/trader/./src/App/Containers/populate-header.jsx","webpack://@deriv/trader/./src/trader-providers.tsx","webpack://@deriv/trader/./src/App/Containers/trade-header-extensions.tsx","webpack://@deriv/trader/./src/App/Components/Elements/TogglePositions/index.js","webpack://@deriv/trader/./src/App/Containers/trade-footer-extensions.jsx","webpack://@deriv/trader/./src/App/Containers/trade-settings-extensions.tsx","webpack://@deriv/trader/./src/Stores/Modules/Trading/Actions/symbol.js","webpack://@deriv/trader/./src/Stores/Modules/Trading/Constants/validation-rules.js","webpack://@deriv/trader/./src/Stores/Modules/Trading/Actions/purchase.js","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/accumulator.js","webpack://@deriv/trader/./src/Stores/Modules/Trading/Actions/contract-type.js","webpack://@deriv/trader/./src/Stores/Modules/Trading/Actions/duration.js","webpack://@deriv/trader/./src/Stores/Modules/Trading/Actions/start-date.js","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/process.js","webpack://@deriv/trader/./src/Stores/Modules/SmartChart/Constants/barriers.js","webpack://@deriv/trader/./src/Utils/Validator/errors.js","webpack://@deriv/trader/./src/Utils/Validator/validator.js","webpack://@deriv/trader/./src/Utils/Validator/index.js","webpack://@deriv/trader/./src/Stores/base-store.js","webpack://@deriv/trader/./src/Stores/Modules/SmartChart/Helpers/barriers.js","webpack://@deriv/trader/./src/Stores/Modules/SmartChart/chart-barrier-store.js","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/limit-orders.js","webpack://@deriv/trader/./src/Stores/Modules/Trading/trade-store.js","webpack://@deriv/trader/./src/Stores/Modules/index.js","webpack://@deriv/trader/./src/Stores/index.js","webpack://@deriv/trader/./src/App/init-store.js","webpack://@deriv/trader/./src/App/app.tsx","webpack://@deriv/trader/./src/App/index.tsx","webpack://@deriv/trader/./src/Constants/contract.js","webpack://@deriv/trader/./src/Modules/Contract/Components/AccumulatorsStats/ticks-history-counter.tsx","webpack://@deriv/trader/./src/Modules/Contract/Components/AccumulatorsStats/expanded-ticks-history.tsx","webpack://@deriv/trader/./src/Modules/Contract/Components/AccumulatorsStats/accumulators-stats-manual-modal.jsx","webpack://@deriv/trader/./src/Modules/Contract/Components/AccumulatorsStats/accumulators-stats.jsx","webpack://@deriv/trader/./src/Modules/Contract/Components/AccumulatorsStats/index.js","webpack://@deriv/trader/./src/Modules/Contract/Components/LastDigitPrediction/digit.jsx","webpack://@deriv/trader/./src/Modules/Contract/Components/LastDigitPrediction/digit-spot.jsx","webpack://@deriv/trader/./src/Modules/Contract/Components/LastDigitPrediction/last-digit-stat.jsx","webpack://@deriv/trader/./src/Modules/Contract/Components/LastDigitPrediction/digit-display.jsx","webpack://@deriv/trader/./src/Modules/Contract/Components/LastDigitPrediction/last-digit-pointer.jsx","webpack://@deriv/trader/./src/Modules/Contract/Components/LastDigitPrediction/last-digit-prediction.jsx","webpack://@deriv/trader/./src/Modules/Contract/Components/Digits/digits.jsx","webpack://@deriv/trader/./src/Modules/Contract/Components/Digits/index.js","webpack://@deriv/trader/./src/Modules/Page404/Components/Page404.jsx","webpack://@deriv/trader/./src/Modules/Page404/index.js","webpack://@deriv/trader/./src/Modules/SmartChart/Components/Markers/marker.jsx","webpack://@deriv/trader/./src/Modules/SmartChart/Components/icons.js","webpack://@deriv/trader/./src/Modules/SmartChart/Components/all-markers.jsx","webpack://@deriv/trader/./src/Modules/SmartChart/Components/bottom-widgets.jsx","webpack://@deriv/trader/./src/Modules/SmartChart/Components/buy-toast-notification.tsx","webpack://@deriv/trader/./src/Modules/SmartChart/Components/top-widgets.jsx","webpack://@deriv/trader/./src/Modules/SmartChart/index.js","webpack://@deriv/trader/./src/Modules/Trading/Containers/toast-popup.jsx","webpack://@deriv/trader/./src/Modules/Trading/Helpers/contract-type.js","webpack://@deriv/trader/./src/Modules/Trading/Helpers/digits.js","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/contract-type.js","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/proposal.js","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/start-date.js","webpack://@deriv/trader/./src/Stores/useTraderStores.tsx","webpack://@deriv/trader/./src/Utils/Helpers/market-underlying.js","webpack://@deriv/trader/./src/_common/base/server_time.js","webpack://@deriv/trader/./src/_common/utility.js"],"sourcesContent":["import { createContext } from 'react';\nimport type { TStores } from '../types';\n\nconst StoreContext = createContext<TStores | null>(null);\n\nexport default StoreContext;\n","import React, { PropsWithChildren } from 'react';\nimport { QueryClient, QueryClientProvider } from '@tanstack/react-query';\n// import { ReactQueryDevtools } from '@tanstack/react-query-devtools';\n\nconst queryClient = new QueryClient();\n\nconst APIProvider = ({ children }: PropsWithChildren<unknown>) => (\n    <QueryClientProvider client={queryClient}>\n        {children}\n        {/*Temporary disabled due to the problem on codecov, You can uncomment to use in development environment, DO NOT COMMIT THIS UNCOMMENTED*/}\n        {/*<ReactQueryDevtools />*/}\n    </QueryClientProvider>\n);\n\nexport default APIProvider;\n","import { useCallback, useEffect, useRef, useState } from 'react';\nimport { useWS } from '@deriv/shared';\nimport type {\n    TSocketAcceptableProps,\n    TSocketRequestPayload,\n    TSocketResponseData,\n    TSocketSubscribableEndpointNames,\n} from '../types';\n\nconst useSubscription = <T extends TSocketSubscribableEndpointNames>(name: T) => {\n    const [is_loading, setIsLoading] = useState(false);\n    const [is_subscribed, setSubscribed] = useState(false);\n    const [error, setError] = useState<unknown>();\n    const [data, setData] = useState<TSocketResponseData<T>>();\n    const subscriber = useRef<{ unsubscribe?: VoidFunction }>();\n    const WS = useWS();\n\n    const subscribe = useCallback(\n        (...props: TSocketAcceptableProps<T>) => {\n            const prop = props?.[0];\n            const payload = prop && 'payload' in prop ? (prop.payload as TSocketRequestPayload<T>) : undefined;\n\n            setIsLoading(true);\n            setSubscribed(true);\n\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const onData = (response: any) => {\n                setData(response);\n                setIsLoading(false);\n            };\n\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            const onError = (response: any) => {\n                setError(response.error);\n                setIsLoading(false);\n            };\n\n            try {\n                subscriber.current = WS.subscribe({ [name]: 1, subscribe: 1, ...(payload || {}) }).subscribe(\n                    onData,\n                    onError\n                );\n            } catch (e) {\n                setError(e);\n            }\n        },\n        [WS, name]\n    );\n\n    const unsubscribe = useCallback(() => {\n        subscriber.current?.unsubscribe?.();\n        setSubscribed(false);\n    }, []);\n\n    useEffect(() => {\n        return () => {\n            unsubscribe();\n        };\n    }, [unsubscribe]);\n\n    return { subscribe, unsubscribe, is_loading, is_subscribed, error, data };\n};\n\nexport default useSubscription;\n","import { useContext } from 'react';\nimport StoreContext from './storeContext';\n\nconst useStore = () => {\n    const store = useContext(StoreContext);\n\n    if (!store) {\n        throw new Error('useStore must be used within StoreProvider');\n    }\n\n    return store;\n};\n\nexport default useStore;\n","import React, { useEffect } from 'react';\nimport { useSubscription } from '@deriv/api';\nimport merge from 'lodash.merge';\nimport useStore from '../useStore';\n\nconst ExchangeRatesProvider = ({ children }: React.PropsWithChildren<unknown>) => {\n    const { data, subscribe } = useSubscription('exchange_rates');\n    const {\n        exchange_rates: { update },\n    } = useStore();\n\n    useEffect(() => {\n        subscribe({ payload: { base_currency: 'USD' } });\n    }, [subscribe]);\n\n    useEffect(() => {\n        if (data) {\n            const { exchange_rates } = data;\n\n            if (exchange_rates) update(prev => merge(prev, exchange_rates));\n        }\n    }, [update, data]);\n\n    return <>{children}</>;\n};\n\nexport default ExchangeRatesProvider;\n","import { action, makeObservable, observable } from 'mobx';\nimport { makePersistable, stopPersisting } from 'mobx-persist-store';\n\nexport default class BaseStore<T> {\n    data: T | undefined = undefined;\n\n    constructor(name: string, onHydrationDone?: VoidFunction) {\n        makeObservable(this, {\n            data: observable,\n            update: action.bound,\n            unmount: action.bound,\n        });\n\n        makePersistable(this, { name, properties: ['data'], storage: window.localStorage }).then(() =>\n            onHydrationDone?.()\n        );\n    }\n\n    update(data: NonNullable<T> | ((previous?: T) => NonNullable<T>)) {\n        this.data = data instanceof Function ? data(this.data) : data;\n    }\n\n    unmount() {\n        stopPersisting(this);\n    }\n}\n","import BaseStore from './BaseStore';\nimport type { ExchangeRatesResponse } from '@deriv/api-types';\n\nexport default class ExchangeRatesStore extends BaseStore<ExchangeRatesResponse['exchange_rates']> {\n    constructor() {\n        super('ExchangeRatesStore');\n    }\n}\n","import BaseStore from './BaseStore';\n\nconst FLAGS = {\n    foo: false,\n    bar: false,\n    baz: false,\n    // Add your flag here 🚀\n} satisfies Record<string, boolean>;\n\nexport default class FeatureFlagsStore extends BaseStore<{ [k in keyof typeof FLAGS]: boolean }> {\n    constructor() {\n        super('FeatureFlagsStore', () => {\n            // Set the default values for the first time.\n            if (!this.data) this.update(FLAGS);\n\n            // Update the store data if a new flag was added or removed.\n            if (this.data && Object.keys(this.data).length !== Object.keys(FLAGS).length) {\n                this.update(old => {\n                    const data = FLAGS;\n\n                    Object.keys(FLAGS).forEach(flag => {\n                        // @ts-expect-error flag key is always present in the object, Hence can ignore the TS error.\n                        if (old[flag] !== undefined) data[flag] = old[flag];\n                    });\n\n                    return data;\n                });\n            }\n        });\n    }\n}\n","import React, { useEffect, useMemo } from 'react';\nimport { ExchangeRatesProvider } from './providers';\nimport StoreContext from './storeContext';\nimport { ExchangeRatesStore, FeatureFlagsStore } from './stores';\nimport type { TCoreStores, TStores } from '../types';\n\nconst StoreProvider = ({ children, store }: React.PropsWithChildren<{ store: TCoreStores }>) => {\n    const memoizedValue: TStores = useMemo(() => {\n        // If the store is mocked for testing purposes, then return the mocked value.\n        if ('is_mock' in store && store.is_mock) return store as unknown as TStores;\n\n        // Otherwise, instantiate store and return it.\n        return {\n            ...store,\n            exchange_rates: new ExchangeRatesStore(),\n            feature_flags: new FeatureFlagsStore(),\n        };\n    }, [store]);\n\n    useEffect(() => {\n        return () => {\n            Object.values(memoizedValue).forEach(value => {\n                if (typeof value === 'object' && 'unmount' in value) value.unmount();\n            });\n        };\n    }, [memoizedValue]);\n\n    return (\n        <StoreContext.Provider value={memoizedValue}>\n            <ExchangeRatesProvider>{children}</ExchangeRatesProvider>\n        </StoreContext.Provider>\n    );\n};\n\nexport default StoreProvider;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { motion } from 'framer-motion';\n\nconst BounceUp = {\n    animate: {\n        y: 0,\n        opacity: 1,\n    },\n    initial: {\n        y: 35,\n        opacity: 0,\n    },\n    transition: {\n        type: 'spring',\n        stiffness: 500,\n        damping: 15,\n        duration: 0.3,\n    },\n};\n\nconst Bounce = ({ children, className, is_visible, keyname }) =>\n    is_visible ? (\n        <motion.div\n            initial={BounceUp.initial}\n            animate={BounceUp.animate}\n            transition={BounceUp.transition}\n            className={className}\n            key={keyname}\n        >\n            {children}\n        </motion.div>\n    ) : null;\n\nBounce.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    is_visible: PropTypes.bool,\n    keyname: PropTypes.string,\n};\n\nexport { Bounce };\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { motion } from 'framer-motion';\n\nconst SlideInFromTop = {\n    initial: {\n        y: -20,\n        opacity: 0,\n    },\n    animate: {\n        y: 0,\n        opacity: 1,\n    },\n    transition: {\n        duration: 0.2,\n    },\n};\n\nconst SlideInFromBottom = {\n    initial: {\n        y: 20,\n        opacity: 0,\n    },\n    animate: {\n        y: 0,\n        opacity: 1,\n    },\n    transition: {\n        duration: 0.2,\n    },\n};\n\nconst SlideIn = ({ children, className, keyname, is_visible, type }) => {\n    if (type === 'bottom') {\n        return (\n            <>\n                {is_visible && (\n                    <motion.div\n                        initial={SlideInFromBottom.initial}\n                        animate={SlideInFromBottom.animate}\n                        transition={SlideInFromBottom.transition}\n                        className={className}\n                        key={keyname}\n                    >\n                        {children}\n                    </motion.div>\n                )}\n            </>\n        );\n    }\n    return (\n        <>\n            {is_visible && (\n                <motion.div\n                    initial={SlideInFromTop.initial}\n                    animate={SlideInFromTop.animate}\n                    transition={SlideInFromTop.transition}\n                    className={className}\n                    key={keyname}\n                >\n                    {children}\n                </motion.div>\n            )}\n        </>\n    );\n};\n\nSlideIn.propTypes = {\n    children: PropTypes.node,\n    className: PropTypes.string,\n    is_visible: PropTypes.bool,\n    keyname: PropTypes.string,\n    type: PropTypes.string,\n};\n\nexport { SlideIn };\n","import ContentLoader from 'react-content-loader';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst PositionsCardLoader = ({ speed }) => (\n    <ContentLoader\n        height={173}\n        width={218}\n        speed={speed}\n        backgroundColor={'var(--general-section-1)'}\n        foregroundColor={'var(--general-hover)'}\n    >\n        <rect x='43' y='19' rx='0' ry='0' width='56' height='8' />\n        <rect x='147' y='19' rx='0' ry='0' width='56' height='8' />\n        <rect x='12' y='50' rx='0' ry='0' width='44' height='8' />\n        <rect x='13' y='68' rx='0' ry='0' width='192' height='8' />\n        <rect x='5' y='89' rx='0' ry='0' width='208' height='1' />\n        <rect x='12' y='104' rx='0' ry='0' width='44' height='8' />\n        <rect x='12' y='9' rx='0' ry='0' width='24' height='24' />\n        <rect x='116' y='11' rx='0' ry='0' width='24' height='24' />\n        <rect x='12' y='118' rx='0' ry='0' width='88' height='8' />\n        <rect x='116' y='104' rx='0' ry='0' width='44' height='8' />\n        <rect x='116' y='118' rx='0' ry='0' width='88' height='8' />\n        <rect x='12' y='139' rx='0' ry='0' width='44' height='8' />\n        <rect x='12' y='153' rx='0' ry='0' width='88' height='8' />\n        <rect x='116' y='139' rx='0' ry='0' width='44' height='8' />\n        <rect x='116' y='153' rx='0' ry='0' width='88' height='8' />\n    </ContentLoader>\n);\n\nPositionsCardLoader.propTypes = {\n    speed: PropTypes.number,\n};\n\nexport { PositionsCardLoader };\n","import ContentLoader from 'react-content-loader';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { DesktopWrapper, MobileWrapper } from '@deriv/components';\n\nconst TradeParamsLoader = ({ speed }) => (\n    <>\n        <MobileWrapper>\n            <ContentLoader\n                height={214}\n                width={344}\n                speed={speed}\n                backgroundColor={'var(--general-section-1)'}\n                foregroundColor={'var(--general-hover)'}\n                viewBox='0 0 344 176'\n            >\n                <rect x='148' y='24' rx='3' ry='3' width='40' height='4' />\n                <rect x='8' y='40' rx='4' ry='4' width='328' height='40' />\n                <rect x='8' y='88' rx='4' ry='4' width='328' height='40' />\n                <rect x='8' y='136' rx='4' ry='4' width='160' height='70' />\n                <rect x='176' y='136' rx='4' ry='4' width='160' height='70' />\n            </ContentLoader>\n        </MobileWrapper>\n        <DesktopWrapper>\n            <ContentLoader\n                height={548}\n                width={240}\n                speed={speed}\n                backgroundColor={'var(--general-section-1)'}\n                foregroundColor={'var(--general-hover)'}\n            >\n                <rect x='0' y='0' rx='4' ry='4' width='240' height='76' />\n                <rect x='0' y='84' rx='4' ry='4' width='240' height='132' />\n                <rect x='0' y='224' rx='4' ry='4' width='240' height='120' />\n                <rect x='0' y='352' rx='4' ry='4' width='240' height='194' />\n            </ContentLoader>\n        </DesktopWrapper>\n    </>\n);\n\nTradeParamsLoader.propTypes = {\n    speed: PropTypes.number,\n};\n\nexport { TradeParamsLoader };\n","import { localize } from '@deriv/translations';\nimport { isHighLow, getContractTypesConfig, isCallPut, isVanillaContract } from '@deriv/shared';\n\nexport const addCommaToNumber = (num, decimal_places) => {\n    if (!num || isNaN(num)) {\n        return num;\n    }\n    const n = String(decimal_places ? (+num).toFixed(decimal_places) : num);\n    const p = n.indexOf('.');\n    return n.replace(/\\d(?=(?:\\d{3})+(?:\\.|$))/g, (m, i) => (p <= 0 || i < p ? `${m},` : m));\n};\n\nexport const getBarrierLabel = contract_info => {\n    if (isDigitType(contract_info.contract_type)) {\n        return localize('Target');\n    }\n    if (isVanillaContract(contract_info.contract_type)) {\n        return localize('Strike');\n    }\n    return localize('Barrier');\n};\n\nexport const getBarrierValue = contract_info => {\n    if (isDigitType(contract_info.contract_type)) {\n        return digitTypeMap(contract_info)[contract_info.contract_type];\n    }\n    return addCommaToNumber(contract_info.barrier);\n};\n\nexport const isDigitType = contract_type => /digit/.test(contract_type.toLowerCase());\n\nconst digitTypeMap = contract_info => ({\n    DIGITDIFF: localize('Not {{barrier}}', { barrier: contract_info.barrier }),\n    DIGITEVEN: localize('Even'),\n    DIGITMATCH: localize('Equals {{barrier}}', { barrier: contract_info.barrier }),\n    DIGITODD: localize('Odd'),\n    DIGITOVER: localize('Over {{barrier}}', { barrier: contract_info.barrier }),\n    DIGITUNDER: localize('Under {{barrier}}', { barrier: contract_info.barrier }),\n});\n\nexport const filterByContractType = ({ contract_type, shortcode }, trade_contract_type) => {\n    const is_call_put = isCallPut(trade_contract_type);\n    const is_high_low = isHighLow({ shortcode });\n    const is_vanilla = isVanillaContract(contract_type);\n    const trade_types = is_call_put\n        ? ['CALL', 'CALLE', 'PUT', 'PUTE']\n        : getContractTypesConfig()[trade_contract_type]?.trade_types;\n    const match = trade_types?.includes(contract_type);\n    if (trade_contract_type === 'high_low') return is_high_low;\n    return match && (is_vanilla || !is_high_low);\n};\n","import classNames from 'classnames';\nimport React from 'react';\n\ntype LoadingProps = {\n    className?: string;\n    is_invisible?: boolean;\n    theme?: string;\n    id?: string;\n};\n\nconst Loading = ({ className, is_invisible, theme, id }: LoadingProps) => (\n    <div\n        id={id}\n        className={classNames('barspinner', `barspinner--${theme || 'dark'}`, { invisible: is_invisible }, className)}\n    >\n        {Array.from(new Array(5)).map((_x, inx) => (\n            <div key={inx} className={`barspinner__rect barspinner__rect--${inx + 1} rect${inx + 1}`} />\n        ))}\n    </div>\n);\n\nexport default Loading;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Loading from '_common/components/loading';\n\nconst ChartLoader = ({ is_dark, is_visible }) =>\n    is_visible ? (\n        <div className='chart-container__loader'>\n            <Loading theme={is_dark ? 'dark' : 'light'} />\n        </div>\n    ) : null;\n\nChartLoader.propTypes = {\n    is_dark: PropTypes.bool,\n    is_visible: PropTypes.bool,\n};\n\nexport default ChartLoader;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { Text } from '@deriv/components';\nimport { useIsMounted, WS, convertTimeFormat, isMarketClosed } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\n// check market in coming 7 days\nconst days_to_check_before_exit = 7;\n\nconst getTradingTimes = async target_time => {\n    const data = await WS.tradingTimes(target_time);\n    if (data.error) {\n        return { api_initial_load_error: data.error.message };\n    }\n    return data;\n};\n// eslint-disable-next-line consistent-return\nconst getSymbol = (target_symbol, trading_times) => {\n    let symbol;\n    const { markets } = trading_times;\n    for (let i = 0; i < markets.length; i++) {\n        const { submarkets } = markets[i];\n        for (let j = 0; j < submarkets.length; j++) {\n            const { symbols } = submarkets[j];\n            symbol = symbols.find(item => item.symbol === target_symbol);\n            if (symbol !== undefined) return symbol;\n        }\n    }\n};\n\nconst calculateTimeLeft = remaining_time_to_open => {\n    const difference = remaining_time_to_open - Date.now();\n    return difference > 0\n        ? {\n              days: Math.floor(difference / (1000 * 60 * 60 * 24)),\n              hours: Math.floor((difference / (1000 * 60 * 60)) % 24),\n              minutes: Math.floor((difference / 1000 / 60) % 60),\n              seconds: Math.floor((difference / 1000) % 60),\n          }\n        : {};\n};\n\nconst MarketCountdownTimer = observer(({ is_main_page, setIsTimerLoading, onMarketOpen, symbol }) => {\n    const { active_symbols } = useTraderStore();\n    const isMounted = useIsMounted();\n    const [when_market_opens, setWhenMarketOpens] = React.useState({});\n    const [time_left, setTimeLeft] = React.useState(calculateTimeLeft(when_market_opens?.remaining_time_to_open));\n    const [is_loading, setLoading] = React.useState(true);\n\n    React.useEffect(() => {\n        if (!is_main_page || (is_main_page && isMarketClosed(active_symbols, symbol))) {\n            setLoading(true);\n            // eslint-disable-next-line consistent-return\n            const whenMarketOpens = async (days_offset, target_symbol) => {\n                // days_offset is 0 for today, 1 for tomorrow, etc.\n                if (days_offset > days_to_check_before_exit) return {};\n                let remaining_time_to_open;\n                const target_date = moment(new Date()).add(days_offset, 'days');\n                const api_response = await getTradingTimes(target_date.format('YYYY-MM-DD'));\n                if (!api_response.api_initial_load_error) {\n                    const { times } = getSymbol(target_symbol, api_response.trading_times);\n                    const { open, close } = times;\n                    const is_closed_all_day = open?.length === 1 && open[0] === '--' && close[0] === '--';\n                    if (is_closed_all_day) {\n                        // check tomorrow trading times\n                        return whenMarketOpens(days_offset + 1, target_symbol);\n                    }\n                    const date_str = target_date.toISOString().substring(0, 11);\n                    const getUTCDate = hour => new Date(`${date_str}${hour}Z`);\n                    for (let i = 0; i < open?.length; i++) {\n                        const diff = +getUTCDate(open[i]) - Date.now();\n                        if (diff > 0) {\n                            remaining_time_to_open = +getUTCDate(open[i]);\n                            if (isMounted() && target_symbol === symbol) {\n                                return setWhenMarketOpens({\n                                    days_offset,\n                                    opening_time: open[i],\n                                    remaining_time_to_open,\n                                });\n                            }\n                        }\n                    }\n                    whenMarketOpens(days_offset + 1, target_symbol);\n                }\n            };\n\n            whenMarketOpens(0, symbol);\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [symbol]);\n\n    React.useEffect(() => {\n        let timer;\n        if (when_market_opens?.remaining_time_to_open) {\n            timer = setTimeout(() => {\n                setTimeLeft(calculateTimeLeft(when_market_opens.remaining_time_to_open));\n                if (new Date(when_market_opens.remaining_time_to_open) - +new Date() < 1000) {\n                    setLoading(true);\n                    if (is_main_page) onMarketOpen(false);\n                }\n            }, 1000);\n        }\n        return () => {\n            if (timer) {\n                clearTimeout(timer);\n            }\n        };\n    }, [time_left, when_market_opens, onMarketOpen, is_main_page]);\n\n    React.useEffect(() => {\n        if (!is_loading) setIsTimerLoading(false);\n    }, [is_loading, setIsTimerLoading]);\n\n    let timer_components = '';\n\n    if (Object.keys(time_left).length) {\n        const hours = (time_left.days * 24 + time_left.hours).toString().padStart(2, '0');\n        const minutes = time_left.minutes.toString().padStart(2, '0');\n        const seconds = time_left.seconds.toString().padStart(2, '0');\n        timer_components = `${hours}:${minutes}:${seconds}`;\n    }\n\n    if (!(when_market_opens && timer_components)) return null;\n\n    const { opening_time, days_offset } = when_market_opens;\n    let opening_time_banner = null;\n    if (opening_time) {\n        const formatted_opening_time = convertTimeFormat(opening_time);\n        const target_date = moment(new Date()).add(days_offset, 'days');\n        const opening_date = target_date.format('DD MMM YYYY');\n        const opening_day = target_date.format('dddd');\n        opening_time_banner = (\n            <Text\n                align='center'\n                as='p'\n                className='market-is-closed-overlay__open-date'\n                line_height='m'\n                color='prominent'\n                size={is_main_page ? 's' : 'xs'}\n                weight='bold'\n            >\n                <Localize\n                    i18n_default_text='{{formatted_opening_time}} (GMT) on {{opening_day}},<0></0> {{opening_date}}.'\n                    components={[<div key={0} />]}\n                    values={{\n                        formatted_opening_time,\n                        opening_day,\n                        opening_date,\n                    }}\n                />\n            </Text>\n        );\n    }\n\n    if (is_loading) setLoading(false);\n\n    return (\n        <React.Fragment>\n            <Text\n                as='p'\n                className={classNames('market-is-closed-overlay__open-at', {\n                    'market-is-closed-overlay__open-at--main-page': is_main_page,\n                })}\n                line_height='x'\n                size={is_main_page ? 'xs' : 'xxs'}\n            >\n                <Localize i18n_default_text='It will reopen at' />\n            </Text>\n            {opening_time_banner}\n            <Text\n                align='center'\n                as='p'\n                className={classNames('market-is-closed-overlay__come-back', {\n                    'market-is-closed-overlay__come-back--main-page': is_main_page,\n                })}\n                line_height='x'\n                size={is_main_page ? 'xs' : 'xxs'}\n            >\n                <Localize i18n_default_text='Please come back in' />\n            </Text>\n            <Text\n                as='p'\n                className={classNames('market-is-closed-overlay__timer', {\n                    'market-is-closed-overlay__timer--main-page': is_main_page,\n                })}\n                line_height='m'\n                color='prominent'\n                size={is_main_page ? 's' : 'xs'}\n                weight='bold'\n            >\n                {timer_components}\n            </Text>\n            <div className='market-is-closed-overlay__separator' />\n        </React.Fragment>\n    );\n});\n\nMarketCountdownTimer.propTypes = {\n    is_main_page: PropTypes.bool,\n    setIsTimerLoading: PropTypes.func,\n    onMarketOpen: PropTypes.func,\n    symbol: PropTypes.string.isRequired,\n};\n\nexport default MarketCountdownTimer;\n","import { matchPath } from 'react-router';\nimport { routes } from '@deriv/shared';\n\nexport const normalizePath = path => (/^\\//.test(path) ? path : `/${path || ''}`); // Default to '/'\n\nexport const findRouteByPath = (path, routes_config) => {\n    let result;\n\n    routes_config.some(route_info => {\n        let match_path;\n        try {\n            match_path = matchPath(path, route_info);\n        } catch (e) {\n            if (/undefined/.test(e.message)) {\n                return undefined;\n            }\n        }\n\n        if (match_path) {\n            result = route_info;\n            return true;\n        } else if (route_info.routes) {\n            result = findRouteByPath(path, route_info.routes);\n            return result;\n        }\n        return false;\n    });\n\n    return result;\n};\n\nexport const isRouteVisible = (route, is_logged_in) => !(route && route.is_authenticated && !is_logged_in);\n\nexport const getPath = (route_path, params = {}) =>\n    Object.keys(params).reduce((p, name) => p.replace(`:${name}`, params[name]), route_path);\n\nexport const getContractPath = contract_id => getPath(routes.contract, { contract_id });\n","import React from 'react';\nimport { Icon, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\n\nconst EmptyPortfolioMessage = ({ error }) => (\n    <div className='portfolio-empty'>\n        <div className='portfolio-empty__wrapper'>\n            {error ? (\n                <Text color='disabled' size='xs'>\n                    {error}\n                </Text>\n            ) : (\n                <React.Fragment>\n                    <Icon icon='IcPortfolio' className='portfolio-empty__icon' size={96} color='disabled' />\n                    <Text align='center' className='portfolio-empty__text' color='disabled' size='xs'>\n                        {localize(\n                            'You have no open positions for this asset. To view other open positions, click Go to Reports'\n                        )}\n                    </Text>\n                </React.Fragment>\n            )}\n        </div>\n    </div>\n);\n\nexport default EmptyPortfolioMessage;\n","import EmptyPortfolioMessage from './empty-portfolio-message.jsx';\n\nexport default EmptyPortfolioMessage;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport { Icon, DataList, Text, PositionsDrawerCard } from '@deriv/components';\nimport { routes, useNewRowTransition } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport EmptyPortfolioMessage from '../EmptyPortfolioMessage';\nimport { filterByContractType } from './helpers';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer, useStore } from '@deriv/stores';\n\nconst PositionsDrawerCardItem = ({\n    row: portfolio_position,\n    measure,\n    onHoverPosition,\n    symbol,\n    is_new_row,\n    ...props\n}) => {\n    const { in_prop } = useNewRowTransition(is_new_row);\n\n    React.useEffect(() => {\n        measure();\n    }, [portfolio_position.contract_info.is_sold, measure]);\n\n    return (\n        <CSSTransition\n            in={in_prop}\n            timeout={150}\n            classNames={{\n                appear: 'dc-contract-card__wrapper--enter',\n                enter: 'dc-contract-card__wrapper--enter',\n                enterDone: 'dc-contract-card__wrapper--enter-done',\n                exit: 'dc-contract-card__wrapper--exit',\n            }}\n            onEntered={measure}\n            unmountOnExit\n        >\n            <div className='dc-contract-card__wrapper'>\n                <PositionsDrawerCard\n                    {...portfolio_position}\n                    {...props}\n                    onMouseEnter={() => {\n                        onHoverPosition(true, portfolio_position, symbol);\n                    }}\n                    onMouseLeave={() => {\n                        onHoverPosition(false, portfolio_position, symbol);\n                    }}\n                    onFooterEntered={measure}\n                    should_show_transition={is_new_row}\n                />\n            </div>\n        </CSSTransition>\n    );\n};\n\nconst PositionsDrawer = observer(({ ...props }) => {\n    const { symbol, contract_type: trade_contract_type } = useTraderStore();\n    const { client, common, contract_trade, portfolio, ui } = useStore();\n    const { currency } = client;\n    const { server_time } = common;\n    const { getContractById } = contract_trade;\n    const {\n        all_positions,\n        error,\n        onHoverPosition,\n        onMount,\n        onClickCancel,\n        onClickSell,\n        removePositionById: onClickRemove,\n    } = portfolio;\n    const {\n        is_mobile,\n        is_positions_drawer_on,\n        togglePositionsDrawer: toggleDrawer,\n        addToast,\n        current_focus,\n        removeToast,\n        setCurrentFocus,\n        should_show_cancellation_warning,\n        toggleCancellationWarning,\n        toggleUnsupportedContractModal,\n    } = ui;\n    const drawer_ref = React.useRef(null);\n    const list_ref = React.useRef(null);\n    const scrollbar_ref = React.useRef(null);\n\n    React.useEffect(() => {\n        onMount();\n    }, [onMount]);\n\n    React.useEffect(() => {\n        list_ref?.current?.scrollTo(0);\n        scrollbar_ref?.current?.scrollToTop();\n    }, [symbol, trade_contract_type]);\n\n    const positions = all_positions.filter(\n        p =>\n            p.contract_info &&\n            symbol === p.contract_info.underlying &&\n            filterByContractType(p.contract_info, trade_contract_type)\n    );\n\n    const body_content = (\n        <DataList\n            data_source={positions}\n            rowRenderer={args => (\n                <PositionsDrawerCardItem\n                    onHoverPosition={onHoverPosition}\n                    symbol={symbol}\n                    currency={currency}\n                    addToast={addToast}\n                    onClickCancel={onClickCancel}\n                    onClickSell={onClickSell}\n                    onClickRemove={onClickRemove}\n                    server_time={server_time}\n                    getContractById={getContractById}\n                    is_mobile={is_mobile}\n                    current_focus={current_focus}\n                    removeToast={removeToast}\n                    setCurrentFocus={setCurrentFocus}\n                    should_show_cancellation_warning={should_show_cancellation_warning}\n                    toggleCancellationWarning={toggleCancellationWarning}\n                    toggleUnsupportedContractModal={toggleUnsupportedContractModal}\n                    {...args}\n                    {...props}\n                />\n            )}\n            keyMapper={row => row.id}\n            row_gap={8}\n        />\n    );\n\n    return (\n        <React.Fragment>\n            <div\n                className={classNames('positions-drawer__bg', {\n                    'positions-drawer__bg--open': is_positions_drawer_on,\n                })}\n            />\n            <div\n                id='dt_positions_drawer'\n                className={classNames('positions-drawer', {\n                    'positions-drawer--open': is_positions_drawer_on,\n                })}\n            >\n                <div className='positions-drawer__header'>\n                    <Text color='prominent' weight='bold' size='xs'>\n                        {localize('Recent positions')}\n                    </Text>\n                    <div\n                        id='dt_positions_drawer_close_icon'\n                        className='positions-drawer__icon-close'\n                        onClick={toggleDrawer}\n                    >\n                        <Icon icon='IcMinusBold' />\n                    </div>\n                </div>\n                <div className='positions-drawer__body' ref={drawer_ref}>\n                    {positions.length === 0 || error ? <EmptyPortfolioMessage error={error} /> : body_content}\n                </div>\n                <div className='positions-drawer__footer'>\n                    <NavLink\n                        id='dt_positions_drawer_report_button'\n                        className='dc-btn dc-btn--secondary dc-btn__large'\n                        to={routes.reports}\n                    >\n                        <Text size='xs' weight='bold'>\n                            {localize('Go to Reports')}\n                        </Text>\n                    </NavLink>\n                </div>\n            </div>\n        </React.Fragment>\n    );\n});\n\nPositionsDrawer.propTypes = {\n    children: PropTypes.node,\n    onChangeContractUpdate: PropTypes.func,\n    onClickContractUpdate: PropTypes.func,\n};\n\nexport default PositionsDrawer;\n","import PositionsDrawer from './positions-drawer.jsx';\n\nexport default PositionsDrawer;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Text } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport MarketCountdownTimer from './market-countdown-timer.jsx';\n\nconst MarketIsClosedOverlay = ({ is_eu, is_synthetics_trading_market_available, onClick, onMarketOpen, symbol }) => {\n    const [is_timer_loading, setIsTimerLoading] = React.useState(true);\n\n    let message = (\n        <Localize i18n_default_text='In the meantime, try our synthetic indices. They simulate real-market volatility and are open 24/7.' />\n    );\n    let btn_lbl = localize('Try Synthetic Indices');\n\n    if (!is_synthetics_trading_market_available) {\n        message = null;\n        btn_lbl = localize('See open markets');\n    }\n\n    return (\n        <div\n            className={classNames('market-is-closed-overlay', {\n                'market-is-closed-overlay--loading': is_timer_loading,\n            })}\n        >\n            <Text as='p' className='market-is-closed-overlay__main-heading' color='prominent' weight='bold'>\n                <Localize i18n_default_text='This market is closed' />\n            </Text>\n            <MarketCountdownTimer\n                is_main_page\n                setIsTimerLoading={setIsTimerLoading}\n                onMarketOpen={onMarketOpen}\n                symbol={symbol}\n            />\n            {message && (\n                <Text align='center' as='p' className='market-is-closed-overlay__main-message' size='xs'>\n                    {message}\n                </Text>\n            )}\n            {(!is_eu || (is_eu && is_synthetics_trading_market_available)) && (\n                <Button className='market-is-closed-overlay__button' onClick={onClick} text={btn_lbl} primary />\n            )}\n        </div>\n    );\n};\n\nMarketIsClosedOverlay.propTypes = {\n    is_eu: PropTypes.bool,\n    is_synthetics_trading_market_available: PropTypes.bool,\n    onClick: PropTypes.func,\n    onMarketOpen: PropTypes.func,\n    symbol: PropTypes.string,\n};\n\nexport default MarketIsClosedOverlay;\n","import { toJS } from 'mobx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer, useStore } from '@deriv/stores';\n\nconst styles = {\n    container: {\n        fontSize: '10px',\n        lineHeight: '15px',\n        position: 'absolute',\n        zIndex: 1,\n        background: 'rgba(0, 0, 0, 0.8)',\n        color: '#ccc',\n        padding: '10px',\n        marginTop: '-10px',\n        display: 'none',\n        overflowY: 'auto',\n        height: '100%',\n        width: '100%',\n    },\n    prop_name: {\n        color: 'yellowgreen',\n    },\n    tabs: { display: 'flex', textAlign: 'center', marginBottom: '10px' },\n    tab: {\n        fontSize: '18px',\n        border: '1px solid grey',\n        width: '100%',\n        padding: '10px',\n    },\n};\n\nconst Test = observer(() => {\n    const stores = useStore();\n    const trade_store = useTraderStore();\n    const test_stores = {\n        trade: Object.entries(trade_store),\n        client: Object.entries(stores.client),\n        ui: Object.entries(stores.ui),\n        portfolio: Object.entries(stores.portfolio),\n    };\n\n    const [is_visible, setIsVisible] = React.useState(false);\n    const [store, setStore] = React.useState('trade');\n\n    React.useEffect(() => {\n        document.addEventListener('keyup', stateVisibility, false);\n        return () => {\n            document.removeEventListener('keyup', stateVisibility);\n        };\n    });\n\n    const stateVisibility = e => {\n        // Ctrl + s\n        if (e.ctrlKey && e.keyCode === 83) setIsVisible(!is_visible);\n    };\n\n    const renderStoreContent = ([k, v]) => {\n        return (\n            k !== 'root_store' &&\n            typeof v !== 'function' && (\n                <div key={k}>\n                    <span style={styles.prop_name}>{k}:</span>{' '}\n                    {v && typeof v === 'object' ? JSON.stringify(toJS(v), null, 1) : v}\n                </div>\n            )\n        );\n    };\n\n    const { container, tab, tabs } = styles;\n\n    return (\n        <code id='state_info' style={{ ...container, display: is_visible ? 'block' : 'none' }}>\n            <div style={tabs}>\n                {Object.keys(test_stores).map(storage => (\n                    <p\n                        key={storage}\n                        onClick={() => setStore(storage)}\n                        style={{ ...tab, fontWeight: storage === store && 'bold' }}\n                    >\n                        {storage}\n                    </p>\n                ))}\n            </div>\n            {test_stores[store].sort().map(renderStoreContent)}\n        </code>\n    );\n});\n\nTest.propTypes = {\n    entries: PropTypes.array,\n};\n\nexport default Test;\n","export const symbolChange = onSymbolChange =>\n    onSymbolChange &&\n    (symbol => {\n        onSymbolChange({\n            target: {\n                name: 'symbol',\n                value: symbol,\n            },\n        });\n    });\n","import React from 'react';\nimport { isMobile } from '@deriv/shared';\nimport Digits from 'Modules/Contract/Components/Digits';\nimport AccumulatorsStats from 'Modules/Contract/Components/AccumulatorsStats';\nimport BottomWidgets from '../../SmartChart/Components/bottom-widgets.jsx';\nimport TopWidgets from '../../SmartChart/Components/top-widgets.jsx';\nimport { symbolChange } from '../../SmartChart/Helpers/symbol';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer, useStore } from '@deriv/stores';\n\nexport const DigitsWidget = observer(({ digits, tick }) => {\n    const { contract_trade } = useStore();\n    const {\n        onChange: onDigitChange,\n        symbol: underlying,\n        contract_type: trade_type,\n        last_digit: selected_digit,\n    } = useTraderStore();\n    const { last_contract } = contract_trade;\n    const { contract_info = {}, digits_info = {}, display_status, is_digit_contract, is_ended } = last_contract;\n    return (\n        <Digits\n            contract_info={contract_info}\n            digits_array={digits}\n            digits_info={digits_info}\n            display_status={display_status}\n            is_digit_contract={is_digit_contract}\n            is_ended={is_ended}\n            onDigitChange={onDigitChange}\n            is_trade_page\n            tick={tick}\n            trade_type={trade_type}\n            selected_digit={selected_digit}\n            underlying={underlying}\n        />\n    );\n});\n\n// Chart widgets passed into SmartCharts\nexport const ChartTopWidgets = observer(({ charts_ref, is_digits_widget_active, open_market, open }) => {\n    const { ui } = useStore();\n    const { onChange: onSymbolChange } = useTraderStore();\n    const { is_dark_mode_on } = ui;\n    const theme = is_dark_mode_on ? 'dark' : 'light';\n    let yAxiswidth;\n    if (charts_ref && charts_ref.chart) {\n        yAxiswidth = charts_ref.chart.yAxiswidth;\n    }\n    return (\n        <TopWidgets\n            open_market={open_market}\n            open={open}\n            is_mobile={isMobile()}\n            is_digits_widget_active={is_digits_widget_active}\n            onSymbolChange={symbolChange(onSymbolChange)}\n            theme={theme}\n            y_axis_width={yAxiswidth}\n        />\n    );\n});\n\nexport const ChartBottomWidgets = ({ digits, tick, show_accumulators_stats }) => (\n    <BottomWidgets\n        Widget={show_accumulators_stats ? <AccumulatorsStats /> : <DigitsWidget digits={digits} tick={tick} />}\n    />\n);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport Loadable from 'react-loadable';\nimport { isMobile } from '@deriv/shared';\n\nconst Screen = Loadable({\n    loader: () =>\n        isMobile()\n            ? import(/* webpackChunkName: \"screen-small\" */ './screen-small.jsx')\n            : import(/* webpackChunkName: \"screen-large\" */ './screen-large.jsx'),\n    loading: () => null,\n    render(loaded, props) {\n        const Component = loaded.default;\n        return <Component {...props} />;\n    },\n});\n\nconst FormLayout = ({ is_market_closed, is_trade_enabled }) => (\n    <React.Fragment>\n        <Screen is_trade_enabled={is_trade_enabled} is_market_closed={isMobile() ? undefined : is_market_closed} />\n    </React.Fragment>\n);\n\nFormLayout.propTypes = {\n    is_market_closed: PropTypes.bool,\n    is_trade_enabled: PropTypes.bool,\n};\n\nexport default React.memo(FormLayout);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Text } from '@deriv/components';\nimport { FastMarker } from 'Modules/SmartChart';\nimport classNames from 'classnames';\n\nconst ACTIONS = {\n    INC: 'increment',\n    DEC: 'decrement',\n    ADD10: 'add10',\n};\n\nconst AccumulatorsProfitLossText = ({\n    current_spot,\n    current_spot_time,\n    currency,\n    className = 'sc-accumulators-profit-loss-text',\n    profit,\n}) => {\n    const [is_fading_in, setIsFadingIn] = React.useState(false);\n    const [is_sliding, setIsSliding] = React.useState(false);\n    const prev_profit = React.useRef(profit);\n    const prev_profit_tenth = +prev_profit.current?.toFixed(2).split('.')[1][0];\n    const [current_profit_tenth, setCurrentProfitTenth] = React.useState(prev_profit_tenth);\n    const profit_tenth_ref = React.useRef();\n    const interval_id_ref = React.useRef(null);\n    const fading_in_timeout_id = React.useRef();\n    const sliding_timeout_id = React.useRef();\n    const profit_portions_array = profit.toFixed(2).split('.');\n    const profit_whole_number = +profit_portions_array[0];\n    const profit_tenth = +profit_portions_array[1][0];\n    const profit_hundredths = +profit_portions_array[1].slice(1);\n    const won = profit >= 0;\n    const sign = profit > 0 ? '+' : '';\n\n    const runThroughTenthDigit = (action, interval_ms, start, end) => {\n        clearInterval(interval_id_ref.current);\n        const interval_id = setInterval(() => {\n            if (action === ACTIONS.INC && profit_tenth_ref.current < end) {\n                profit_tenth_ref.current = (profit_tenth_ref.current + 1) % 10;\n            } else if (action === ACTIONS.DEC && profit_tenth_ref.current > end) {\n                profit_tenth_ref.current = Math.abs(profit_tenth_ref.current - 1) % 10;\n            } else if (action === ACTIONS.ADD10 && profit_tenth_ref.current < start + 10) {\n                profit_tenth_ref.current += 1;\n            } else if (\n                action === ACTIONS.ADD10 ? profit_tenth_ref.current === start + 10 : profit_tenth_ref.current === end\n            ) {\n                clearInterval(interval_id);\n            }\n            setCurrentProfitTenth(profit_tenth_ref.current % 10);\n        }, interval_ms);\n        interval_id_ref.current = interval_id;\n    };\n\n    React.useEffect(() => {\n        if (profit) {\n            setIsFadingIn(true);\n            setIsSliding(true);\n            fading_in_timeout_id.current = setTimeout(() => {\n                setIsFadingIn(false);\n            }, 600);\n            sliding_timeout_id.current = setTimeout(() => {\n                setIsSliding(false);\n            }, 300);\n        }\n        if (profit !== 0) {\n            const updateTenth = (start, end) => {\n                const delta = Math.abs(end - start);\n                profit_tenth_ref.current = start;\n                if (start < end) {\n                    runThroughTenthDigit(ACTIONS.INC, 300 / delta, start, end);\n                } else if (start > end) {\n                    runThroughTenthDigit(ACTIONS.DEC, 300 / delta, start, end);\n                } else {\n                    runThroughTenthDigit(ACTIONS.ADD10, 30, start, end);\n                }\n            };\n            updateTenth(prev_profit_tenth, profit_tenth);\n        }\n        return () => {\n            clearTimeout(fading_in_timeout_id.current);\n            clearTimeout(sliding_timeout_id.current);\n            clearInterval(interval_id_ref.current);\n        };\n    }, [profit, prev_profit_tenth, profit_tenth]);\n\n    const onRef = ref => {\n        if (ref) {\n            if (!current_spot) {\n                // this call will hide the marker:\n                ref.setPosition({ epoch: null, price: null });\n            }\n            ref.setPosition({\n                epoch: +current_spot_time,\n                price: +current_spot,\n            });\n        }\n    };\n\n    return (\n        <FastMarker markerRef={onRef} className={classNames(className, won ? 'won' : 'lost')}>\n            <Text\n                weight='bold'\n                size='m'\n                color={won ? 'profit-success' : 'loss-danger'}\n                className={classNames(`${className}__profit`, {\n                    [`${className}__profit--fading-in`]: is_fading_in,\n                })}\n                data-testid='dt_accumulator_profit_text'\n            >\n                {`${sign}${profit_whole_number}.`}\n                <div className={is_sliding ? `${className}__sliding-tenth` : ''}>{current_profit_tenth}</div>\n                {`${profit_hundredths}`}\n            </Text>\n            <Text size='xxs' as='div' className={`${className}__currency`}>\n                {currency}\n            </Text>\n        </FastMarker>\n    );\n};\n\nAccumulatorsProfitLossText.propTypes = {\n    className: PropTypes.string,\n    currency: PropTypes.string,\n    current_spot: PropTypes.number,\n    current_spot_time: PropTypes.number,\n    profit: PropTypes.number,\n};\n\nexport default React.memo(AccumulatorsProfitLossText);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { CSSTransition } from 'react-transition-group';\nimport { Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { FastMarker } from 'Modules/SmartChart';\nimport AccumulatorsProfitLossText from './accumulators-profit-loss-text';\n\nconst AccumulatorsProfitLossTooltip = ({\n    alignment = 'right',\n    current_spot,\n    current_spot_time,\n    className = 'sc-accumulators-profit-loss-tooltip',\n    currency,\n    exit_tick,\n    exit_tick_time,\n    high_barrier,\n    is_sold,\n    profit,\n}) => {\n    const [is_tooltip_open, setIsTooltipOpen] = React.useState(false);\n    const won = profit >= 0;\n    const sign = profit > 0 ? '+' : '';\n    const tooltip_timeout = React.useRef(null);\n\n    React.useEffect(() => {\n        return () => {\n            clearTimeout(tooltip_timeout.current);\n        };\n    }, []);\n\n    React.useEffect(() => {\n        if (is_sold) {\n            setIsTooltipOpen(true);\n            tooltip_timeout.current = onCloseDelayed(3000);\n        }\n    }, [is_sold]);\n\n    const onCloseDelayed = duration =>\n        setTimeout(() => {\n            setIsTooltipOpen(false);\n        }, duration);\n\n    const onHoverOrTapHandler = () => {\n        clearTimeout(tooltip_timeout.current);\n        tooltip_timeout.current = onCloseDelayed(1500);\n    };\n\n    const opposite_arrow_position = React.useMemo(() => {\n        const horizontal = ['left', 'right'];\n        return horizontal.includes(alignment)\n            ? horizontal.find(el => el !== alignment)\n            : ['top', 'bottom'].find(el => el !== alignment);\n    }, [alignment]);\n\n    const onRef = ref => {\n        if (ref) {\n            if (!exit_tick) {\n                // this call will hide the marker:\n                ref.setPosition({ epoch: null, price: null });\n            }\n            ref.setPosition({\n                epoch: +exit_tick_time,\n                price: +exit_tick,\n            });\n        }\n    };\n\n    if (typeof profit !== 'number') return null;\n    if (!is_sold && current_spot_time && high_barrier)\n        return (\n            <AccumulatorsProfitLossText\n                currency={currency}\n                current_spot={current_spot}\n                current_spot_time={current_spot_time}\n                profit={profit}\n            />\n        );\n    return is_sold && exit_tick_time ? (\n        <FastMarker markerRef={onRef} className={classNames(className, won ? 'won' : 'lost')}>\n            <span\n                className={`${className}__spot-circle`}\n                onMouseEnter={() => setIsTooltipOpen(true)}\n                onMouseLeave={onHoverOrTapHandler}\n                onTouchStart={() => setIsTooltipOpen(true)}\n                onTouchEnd={onHoverOrTapHandler}\n                data-testid='dt_accumulator_tooltip_spot'\n            />\n            <CSSTransition\n                in={is_tooltip_open}\n                timeout={{\n                    exit: 500,\n                }}\n                unmountOnExit\n                classNames={`${className}__content`}\n            >\n                <div className={classNames(`${className}__content`, `arrow-${opposite_arrow_position}`)}>\n                    <Text size='xxs' className={`${className}__text`}>\n                        {localize('Total profit/loss:')}\n                    </Text>\n                    <Text\n                        size='xs'\n                        className={`${className}__text`}\n                        weight='bold'\n                    >{`${sign}${profit} ${currency}`}</Text>\n                </div>\n            </CSSTransition>\n        </FastMarker>\n    ) : null;\n};\n\nAccumulatorsProfitLossTooltip.propTypes = {\n    alignment: PropTypes.string,\n    current_spot: PropTypes.number,\n    current_spot_time: PropTypes.number,\n    className: PropTypes.string,\n    currency: PropTypes.string,\n    exit_tick: PropTypes.number,\n    exit_tick_time: PropTypes.number,\n    high_barrier: PropTypes.string,\n    is_sold: PropTypes.number,\n    profit: PropTypes.number,\n};\n\nexport default React.memo(AccumulatorsProfitLossTooltip);\n","import { filterByContractType } from 'App/Components/Elements/PositionsDrawer/helpers/positions-helper.js';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport AccumulatorsProfitLossTooltip from './accumulators-profit-loss-tooltip.jsx';\nimport ChartMarker from './marker.jsx';\n\nconst AccumulatorsChartElements = ({\n    all_positions,\n    current_spot,\n    current_spot_time,\n    has_crossed_accu_barriers,\n    symbol,\n}) => {\n    const accumulators_positions = all_positions.filter(\n        ({ contract_info }) =>\n            contract_info && symbol === contract_info.underlying && filterByContractType(contract_info, 'accumulator')\n    );\n\n    return (\n        <React.Fragment>\n            {!!accumulators_positions.length &&\n                accumulators_positions.map(({ contract_info }) => (\n                    <AccumulatorsProfitLossTooltip key={contract_info.contract_id} {...contract_info} />\n                ))}\n            {has_crossed_accu_barriers && !!current_spot_time && (\n                <ChartMarker\n                    marker_config={{\n                        ContentComponent: 'div',\n                        custom_className: 'sc-current-spot-emphasizer',\n                        x: current_spot_time,\n                        y: current_spot,\n                    }}\n                />\n            )}\n        </React.Fragment>\n    );\n};\n\nAccumulatorsChartElements.propTypes = {\n    all_positions: PropTypes.array,\n    current_spot: PropTypes.number,\n    current_spot_time: PropTypes.number,\n    has_crossed_accu_barriers: PropTypes.bool,\n    symbol: PropTypes.string,\n};\n\nexport default React.memo(AccumulatorsChartElements);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { isDesktop, isMobile } from '@deriv/shared';\nimport { ChartMode, DrawTools, Share, StudyLegend, Views, ToolbarWidget } from 'Modules/SmartChart';\n\nconst ToolbarWidgets = ({ position, updateChartType, updateGranularity }) => {\n    return (\n        <ToolbarWidget position={position || isMobile() ? 'bottom' : null}>\n            <ChartMode portalNodeId='modal_root' onChartType={updateChartType} onGranularity={updateGranularity} />\n            {isDesktop() && <StudyLegend portalNodeId='modal_root' searchInputClassName='data-hj-whitelist' />}\n            {isDesktop() && <Views portalNodeId='modal_root' searchInputClassName='data-hj-whitelist' />}\n            {isDesktop() && <DrawTools portalNodeId='modal_root' />}\n            {isDesktop() && <Share portalNodeId='modal_root' />}\n        </ToolbarWidget>\n    );\n};\n\nToolbarWidgets.propTypes = {\n    position: PropTypes.string,\n    updateChartType: PropTypes.func,\n    updateGranularity: PropTypes.func,\n};\n\nexport default React.memo(ToolbarWidgets);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { DesktopWrapper, Div100vhContainer, MobileWrapper, SwipeableWrapper } from '@deriv/components';\nimport { isDesktop, isMobile } from '@deriv/shared';\nimport ChartLoader from 'App/Components/Elements/chart-loader.jsx';\nimport PositionsDrawer from 'App/Components/Elements/PositionsDrawer';\nimport MarketIsClosedOverlay from 'App/Components/Elements/market-is-closed-overlay.jsx';\nimport Test from './test.jsx';\nimport { ChartBottomWidgets, ChartTopWidgets, DigitsWidget } from './chart-widgets.jsx';\nimport FormLayout from '../Components/Form/form-layout.jsx';\nimport AllMarkers from '../../SmartChart/Components/all-markers.jsx';\nimport AccumulatorsChartElements from '../../SmartChart/Components/Markers/accumulators-chart-elements.jsx';\nimport ToolbarWidgets from '../../SmartChart/Components/toolbar-widgets.jsx';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer, useStore } from '@deriv/stores';\n\nconst BottomWidgetsMobile = ({ tick, digits, setTick, setDigits }) => {\n    React.useEffect(() => {\n        setTick(tick);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [tick]);\n\n    React.useEffect(() => {\n        setDigits(digits);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [digits]);\n\n    // render nothing for bottom widgets on chart in mobile\n    return null;\n};\n\nconst Trade = observer(() => {\n    const { client, common, ui } = useStore();\n    const {\n        form_components,\n        getFirstOpenMarket,\n        should_show_active_symbols_loading,\n        is_chart_loading,\n        is_market_closed,\n        is_trade_enabled,\n        onChange,\n        onMount,\n        onUnmount,\n        prepareTradeStore,\n        setContractTypes,\n        setMobileDigitView,\n        show_digits_stats,\n        is_accumulator,\n        symbol,\n        is_synthetics_available,\n        is_synthetics_trading_market_available,\n        is_vanilla,\n    } = useTraderStore();\n    const {\n        notification_messages_ui: NotificationMessages,\n        has_only_forward_starting_contracts: is_market_unavailable_visible,\n        should_show_multipliers_onboarding,\n        is_dark_mode_on: is_dark_theme,\n    } = ui;\n    const { is_eu } = client;\n    const { network_status } = common;\n\n    const [digits, setDigits] = React.useState([]);\n    const [tick, setTick] = React.useState({});\n    const [try_synthetic_indices, setTrySyntheticIndices] = React.useState(false);\n    const [try_open_markets, setTryOpenMarkets] = React.useState(false);\n    const [category, setCategory] = React.useState(null);\n    const [subcategory, setSubcategory] = React.useState(null);\n    const [is_digits_widget_active, setIsDigitsWidgetActive] = React.useState(false);\n    const charts_ref = React.useRef();\n\n    const open_market = React.useMemo(() => {\n        if (try_synthetic_indices) {\n            return { category: 'synthetics' };\n        } else if (try_open_markets && category) {\n            return { category, subcategory };\n        }\n        return null;\n    }, [try_synthetic_indices, try_open_markets, category, subcategory]);\n\n    React.useEffect(() => {\n        onMount();\n        if (!is_synthetics_available) {\n            const setMarket = async () => {\n                const markets_to_search = ['forex', 'indices', 'commodities']; // none-synthetic\n                const { category: market_cat, subcategory: market_subcat } =\n                    (await getFirstOpenMarket(markets_to_search)) ?? {};\n                if (market_cat) {\n                    setCategory(market_cat);\n                    setSubcategory(market_subcat);\n                }\n            };\n\n            setMarket();\n        }\n        return () => onUnmount();\n    }, [onMount, onUnmount, getFirstOpenMarket, is_synthetics_available]);\n\n    React.useEffect(() => {\n        if (isMobile()) {\n            setDigits([]);\n        }\n        setTrySyntheticIndices(false);\n        setTryOpenMarkets(false);\n    }, [symbol, setDigits, setTrySyntheticIndices, is_synthetics_available]);\n\n    React.useEffect(() => {\n        const selectMultipliers = async () => {\n            await setContractTypes();\n\n            onChange({ target: { name: 'contract_type', value: 'multiplier' } });\n        };\n        if (should_show_multipliers_onboarding && !is_chart_loading && (is_synthetics_available || !is_market_closed)) {\n            selectMultipliers();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [should_show_multipliers_onboarding, is_chart_loading]);\n\n    const bottomWidgets = React.useCallback(({ digits: d, tick: t }) => {\n        return <BottomWidgetsMobile digits={d} tick={t} setTick={setTick} setDigits={setDigits} />;\n    }, []);\n\n    const onChangeSwipeableIndex = index => {\n        setMobileDigitView(index === 0);\n        setIsDigitsWidgetActive(index === 0);\n    };\n\n    const onTryOtherMarkets = async () => {\n        if (!is_synthetics_available) {\n            setTryOpenMarkets(true);\n            setTimeout(() => setTryOpenMarkets(false));\n        } else {\n            setTrySyntheticIndices(true);\n            setTimeout(() => setTrySyntheticIndices(false));\n        }\n    };\n\n    const topWidgets = React.useCallback(\n        ({ ...params }) => (\n            <ChartTopWidgets\n                open_market={open_market}\n                open={try_synthetic_indices || try_open_markets}\n                charts_ref={charts_ref}\n                is_digits_widget_active={is_digits_widget_active}\n                {...params}\n            />\n        ),\n        [open_market, try_synthetic_indices, try_open_markets, charts_ref, is_digits_widget_active]\n    );\n\n    const form_wrapper_class = isMobile() ? 'mobile-wrapper' : 'sidebar__container desktop-only';\n\n    return (\n        <div\n            id='trade_container'\n            className={classNames('trade-container', {\n                'trade-container--accumulators': is_accumulator,\n            })}\n        >\n            <DesktopWrapper>\n                <PositionsDrawer />\n            </DesktopWrapper>\n            {/* Div100vhContainer is workaround for browsers on devices\n                    with toolbars covering screen height,\n                    using css vh is not returning correct screen height */}\n            <Div100vhContainer\n                id='chart_container'\n                className='chart-container'\n                is_disabled={isDesktop()}\n                height_offset={is_accumulator ? '295px' : '259px'}\n            >\n                <NotificationMessages />\n                <React.Suspense\n                    fallback={<ChartLoader is_dark={is_dark_theme} is_visible={!symbol || is_chart_loading} />}\n                >\n                    <DesktopWrapper>\n                        <div className={classNames('chart-container__wrapper', { 'vanilla-trade-chart': is_vanilla })}>\n                            <ChartLoader is_visible={is_chart_loading || should_show_active_symbols_loading} />\n                            <ChartTrade\n                                topWidgets={topWidgets}\n                                charts_ref={charts_ref}\n                                is_accumulator={is_accumulator}\n                            />\n                        </div>\n                    </DesktopWrapper>\n                    <MobileWrapper>\n                        <ChartLoader is_visible={is_chart_loading || should_show_active_symbols_loading} />\n                        <SwipeableWrapper\n                            onChange={onChangeSwipeableIndex}\n                            is_disabled={\n                                !show_digits_stats ||\n                                !is_trade_enabled ||\n                                form_components.length === 0 ||\n                                is_chart_loading ||\n                                should_show_active_symbols_loading\n                            }\n                            className={classNames({ 'vanilla-trade-chart': is_vanilla })}\n                        >\n                            {show_digits_stats && <DigitsWidget digits={digits} tick={tick} />}\n                            <ChartTrade\n                                topWidgets={topWidgets}\n                                charts_ref={charts_ref}\n                                bottomWidgets={show_digits_stats ? bottomWidgets : undefined}\n                                is_accumulator={is_accumulator}\n                            />\n                        </SwipeableWrapper>\n                    </MobileWrapper>\n                </React.Suspense>\n\n                {/* Remove Test component for debugging below for production release */}\n                <Test />\n            </Div100vhContainer>\n            <div className={form_wrapper_class}>\n                {is_market_closed && !is_market_unavailable_visible && (\n                    <MarketIsClosedOverlay\n                        is_eu={is_eu}\n                        is_synthetics_trading_market_available={is_synthetics_trading_market_available}\n                        {...(is_eu && category)}\n                        onClick={onTryOtherMarkets}\n                        onMarketOpen={prepareTradeStore}\n                        symbol={symbol}\n                    />\n                )}\n                <FormLayout\n                    is_market_closed={is_market_closed}\n                    is_trade_enabled={\n                        is_trade_enabled && form_components.length > 0 && network_status.class === 'online'\n                    }\n                />\n            </div>\n        </div>\n    );\n});\n\nexport default Trade;\n\n// CHART (ChartTrade)--------------------------------------------------------\n\n/* eslint-disable */\nimport { SmartChart } from 'Modules/SmartChart';\n\nconst SmartChartWithRef = React.forwardRef((props, ref) => <SmartChart innerRef={ref} {...props} />);\n\n// ChartMarkers --------------------------\nconst ChartMarkers = observer(config => {\n    const { ui, client, contract_trade } = useStore();\n    const { markers_array, granularity } = contract_trade;\n    const { is_dark_mode_on: is_dark_theme } = ui;\n    const { currency } = client;\n    return markers_array.map(marker => {\n        const Marker = AllMarkers[marker.type];\n        return (\n            <Marker\n                key={marker.key}\n                is_dark_theme={is_dark_theme}\n                granularity={granularity}\n                currency={currency}\n                config={config}\n                {...marker}\n            />\n        );\n    });\n});\n\nconst ChartTrade = observer(props => {\n    const { is_accumulator, end_epoch, topWidgets, charts_ref } = props;\n    const { client, ui, common, contract_trade, portfolio } = useStore();\n    const {\n        accumulator_barriers_data,\n        chart_type,\n        granularity,\n        has_crossed_accu_barriers,\n        updateGranularity,\n        updateChartType,\n    } = contract_trade;\n    const { all_positions } = portfolio;\n    const { is_chart_layout_default, is_chart_countdown_visible, is_dark_mode_on } = ui;\n    const { is_socket_opened, current_language } = common;\n    const { should_show_eu_content } = client;\n    const {\n        chartStateChange,\n        is_trade_enabled,\n        main_barrier_flattened: main_barrier,\n        barriers_flattened: extra_barriers,\n        show_digits_stats,\n        symbol,\n        exportLayout,\n        setChartStatus,\n        chart_layout,\n        wsForget,\n        wsForgetStream,\n        wsSendRequest,\n        wsSubscribe,\n        active_symbols,\n        has_alternative_source,\n        refToAddTick,\n    } = useTraderStore();\n\n    const settings = {\n        assetInformation: false, // ui.is_chart_asset_info_visible,\n        countdown: is_chart_countdown_visible,\n        isHighestLowestMarkerEnabled: false, // TODO: Pending UI,\n        language: current_language.toLowerCase(),\n        position: is_chart_layout_default ? 'bottom' : 'left',\n        theme: is_dark_mode_on ? 'dark' : 'light',\n    };\n\n    const { current_spot, current_spot_time } = accumulator_barriers_data || {};\n\n    const bottomWidgets = React.useCallback(\n        ({ digits, tick }) => (\n            <ChartBottomWidgets digits={digits} tick={tick} show_accumulators_stats={is_accumulator} is_trade_page />\n        ),\n        [is_accumulator]\n    );\n\n    const getMarketsOrder = active_symbols => {\n        const synthetic_index = 'synthetic_index';\n\n        const has_synthetic_index = !!active_symbols.find(s => s.market === synthetic_index);\n        return active_symbols\n            .slice()\n            .sort((a, b) => (a.display_name < b.display_name ? -1 : 1))\n            .map(s => s.market)\n            .reduce(\n                (arr, market) => {\n                    if (arr.indexOf(market) === -1) arr.push(market);\n                    return arr;\n                },\n                has_synthetic_index ? [synthetic_index] : []\n            );\n    };\n\n    const barriers = main_barrier ? [main_barrier, ...extra_barriers] : extra_barriers;\n\n    // max ticks to display for mobile view for tick chart\n    const max_ticks = granularity === 0 ? 8 : 24;\n\n    if (!symbol || active_symbols.length === 0) return null;\n\n    return (\n        <SmartChartWithRef\n            ref={charts_ref}\n            barriers={barriers}\n            bottomWidgets={(is_accumulator || show_digits_stats) && isDesktop() ? bottomWidgets : props.bottomWidgets}\n            crosshair={isMobile() ? 0 : undefined}\n            crosshairTooltipLeftAllow={560}\n            showLastDigitStats={isDesktop() ? show_digits_stats : false}\n            chartControlsWidgets={null}\n            chartStatusListener={v => setChartStatus(!v)}\n            chartType={chart_type}\n            initialData={{\n                activeSymbols: JSON.parse(JSON.stringify(active_symbols)),\n            }}\n            chartData={{\n                activeSymbols: JSON.parse(JSON.stringify(active_symbols)),\n            }}\n            feedCall={{\n                activeSymbols: false,\n            }}\n            enabledNavigationWidget={isDesktop()}\n            enabledChartFooter={false}\n            id='trade'\n            isMobile={isMobile()}\n            maxTick={isMobile() ? max_ticks : undefined}\n            granularity={show_digits_stats || is_accumulator ? 0 : granularity}\n            requestAPI={wsSendRequest}\n            requestForget={wsForget}\n            requestForgetStream={wsForgetStream}\n            requestSubscribe={wsSubscribe}\n            settings={settings}\n            should_show_eu_content={should_show_eu_content}\n            allowTickChartTypeOnly={show_digits_stats || is_accumulator}\n            stateChangeListener={chartStateChange}\n            symbol={symbol}\n            topWidgets={is_trade_enabled ? topWidgets : null}\n            isConnectionOpened={is_socket_opened}\n            clearChart={false}\n            toolbarWidget={() => (\n                <ToolbarWidgets updateChartType={updateChartType} updateGranularity={updateGranularity} />\n            )}\n            importedLayout={chart_layout}\n            onExportLayout={exportLayout}\n            shouldFetchTradingTimes={!end_epoch}\n            hasAlternativeSource={has_alternative_source}\n            refToAddTick={refToAddTick}\n            getMarketsOrder={getMarketsOrder}\n            yAxisMargin={{\n                top: isMobile() ? 76 : 106,\n            }}\n        >\n            <ChartMarkers />\n            {is_accumulator && (\n                <AccumulatorsChartElements\n                    all_positions={all_positions}\n                    current_spot={current_spot}\n                    current_spot_time={current_spot_time}\n                    has_crossed_accu_barriers={has_crossed_accu_barriers}\n                    symbol={symbol}\n                />\n            )}\n        </SmartChartWithRef>\n    );\n});\n","import Trade from './Containers/trade.jsx';\n\nexport default Trade;\n","import React from 'react';\nimport { routes, moduleLoader } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport Trade from 'Modules/Trading';\n\nconst ContractDetails = React.lazy(() =>\n    moduleLoader(() => import(/* webpackChunkName: \"contract\" */ 'Modules/Contract'))\n);\n\n// Error Routes\nconst Page404 = React.lazy(() => moduleLoader(() => import(/* webpackChunkName: \"404\" */ 'Modules/Page404')));\n\n// Order matters\nconst initRoutesConfig = () => {\n    return [\n        {\n            path: routes.contract,\n            component: ContractDetails,\n            // Don't use `Localize` component since native html tag like `option` cannot render them\n            getTitle: () => localize('Contract Details'),\n            is_authenticated: true,\n        },\n        { path: routes.trade, component: Trade, getTitle: () => localize('Trader'), exact: true },\n    ];\n};\n\nlet routesConfig;\n\n// For default page route if page/path is not found, must be kept at the end of routes_config array\nconst route_default = { component: Page404, getTitle: () => localize('Error 404') };\n\nconst getRoutesConfig = () => {\n    if (!routesConfig) {\n        routesConfig = initRoutesConfig();\n        routesConfig.push(route_default);\n    }\n    return routesConfig;\n};\n\nexport default getRoutesConfig;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { findRouteByPath, normalizePath } from './helpers';\nimport getRoutesConfig from '../../Constants/routes-config';\n\n// TODO: solve circular dependency problem\n// when binary link is imported into components present in routes config\n// or into their descendants\nconst BinaryLink = ({ active_class, to, children, ...props }) => {\n    const path = normalizePath(to);\n    const route = findRouteByPath(path, getRoutesConfig());\n\n    if (!route) {\n        throw new Error(`Route not found: ${to}`);\n    }\n\n    return to ? (\n        <NavLink\n            data-testid='dt_binary_link'\n            to={path}\n            activeClassName={active_class || 'active'}\n            exact={route.exact}\n            {...props}\n        >\n            {children}\n        </NavLink>\n    ) : (\n        <a data-testid='dt_binary_link' {...props}>\n            {children}\n        </a>\n    );\n};\n\nBinaryLink.propTypes = {\n    active_class: PropTypes.string,\n    children: PropTypes.oneOfType([PropTypes.object, PropTypes.array, PropTypes.string]),\n    to: PropTypes.string,\n};\n\nexport default BinaryLink;\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport {\n    alternateLinkTagChange,\n    canonicalLinkTagChange,\n    redirectToLogin,\n    removeBranchName,\n    routes,\n    isEmptyObject,\n    default_title,\n} from '@deriv/shared';\nimport { getLanguage } from '@deriv/translations';\nimport Page404 from 'Modules/Page404';\n\nconst RouteWithSubRoutes = route => {\n    const validateRoute = pathname => {\n        if (pathname === '') return true;\n        if (route.path?.includes(':')) {\n            const static_pathname = pathname.substring(0, pathname.lastIndexOf('/') + 1);\n            return static_pathname === route.path.substring(0, route.path.indexOf(':'));\n        }\n        return route.path === pathname || !!(route.routes && route.routes.find(r => pathname === r.path));\n    };\n\n    const renderFactory = props => {\n        let result = null;\n\n        const pathname = removeBranchName(location.pathname).replace(/\\/$/, '');\n        const is_valid_route = validateRoute(pathname);\n\n        if (route.component === Redirect) {\n            let to = route.to;\n\n            // This if clause has been added just to remove '/index' from url in localhost env.\n            if (route.path === routes.index) {\n                const { location } = props;\n                to = location.pathname.toLowerCase().replace(route.path, '');\n            }\n            result = <Redirect to={to} />;\n        } else if (is_valid_route && route.is_authenticated && !route.is_logging_in && !route.is_logged_in) {\n            redirectToLogin(route.is_logged_in, getLanguage());\n        } else {\n            const default_subroute = route.routes ? route.routes.find(r => r.default) : {};\n            const has_default_subroute = !isEmptyObject(default_subroute);\n\n            result = (\n                <React.Fragment>\n                    {has_default_subroute && pathname === route.path && <Redirect to={default_subroute.path} />}\n                    {is_valid_route ? <route.component {...props} routes={route.routes} /> : <Page404 />}\n                </React.Fragment>\n            );\n        }\n\n        // eslint-disable-next-line no-nested-ternary\n        const title = route.getTitle?.() || '';\n        document.title = `${title} | ${default_title}`;\n\n        alternateLinkTagChange();\n        canonicalLinkTagChange();\n\n        return result;\n    };\n\n    return <Route exact={route.exact} path={route.path} render={renderFactory} />;\n};\n\nexport default RouteWithSubRoutes;\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\nimport getRoutesConfig from 'App/Constants/routes-config';\nimport RouteWithSubRoutes from './route-with-sub-routes.jsx';\n\nconst BinaryRoutes = props => (\n    <React.Suspense fallback={<div />}>\n        <Switch>\n            {getRoutesConfig().map((route, idx) => (\n                <RouteWithSubRoutes key={idx} {...route} {...props} />\n            ))}\n        </Switch>\n    </React.Suspense>\n);\n\nexport default BinaryRoutes;\n","import BinaryLink from './binary-link.jsx';\nimport RouteWithSubRoutes from './route-with-sub-routes.jsx';\nimport BinaryRoutes from './binary-routes.jsx';\n\nexport * from './helpers';\nexport { BinaryLink, RouteWithSubRoutes };\nexport default BinaryRoutes;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { withRouter, matchPath } from 'react-router';\nimport Loadable from 'react-loadable';\nimport { UILoader } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport BinaryRoutes from 'App/Components/Routes';\nimport getRoutesConfig from 'App/Constants/routes-config';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst checkRoutingMatch = (route_list, path) => {\n    return route_list.some(route => !!matchPath(path, { path: route, exact: true }));\n};\n\nconst tradePageMountingMiddleware = ({ path_from, path_to, action, match_patterns, callback }) => {\n    if (action === 'PUSH' || action === 'POP') {\n        // We use matchPath here because on route, there will be extra\n        // parameters which matchPath takes into account.\n        const has_match = match_patterns.some(\n            pattern => checkRoutingMatch(pattern.from, path_from) && checkRoutingMatch(pattern.to, path_to)\n        );\n\n        callback(has_match);\n    }\n\n    return true;\n};\n\nconst Error = Loadable({\n    loader: () => import(/* webpackChunkName: \"error-component\" */ 'App/Components/Elements/Errors'),\n    loading: UILoader,\n    render(loaded, props) {\n        const Component = loaded.default;\n        return <Component {...props} />;\n    },\n});\n\nconst Routes = observer(({ history, passthrough }) => {\n    const { client, common, ui, portfolio } = useStore();\n    const { setSkipPrePostLifecycle: setTradeMountingPolicy } = useTraderStore();\n    const { error, has_error } = common;\n    const { onUnmount: onUnmountPortfolio } = portfolio;\n    const { is_logged_in, is_logging_in } = client;\n    const { setPromptHandler } = ui;\n\n    React.useEffect(() => {\n        if (setPromptHandler) {\n            setPromptHandler(true, (route_to, action) => {\n                // clears portfolio when we navigate to mt5 dashboard\n                tradePageMountingMiddleware({\n                    path_from: history.location.pathname,\n                    path_to: route_to.pathname,\n                    match_patterns: [\n                        {\n                            from: getRoutesConfig()\n                                .flatMap(route => {\n                                    if (route.routes) {\n                                        return route.routes.map(subroute => subroute.path);\n                                    }\n                                    return [route.path];\n                                })\n                                .filter(path => path && path !== routes.mt5 && path !== routes.dxtrade),\n                            to: [routes.mt5, routes.dxtrade],\n                        },\n                    ],\n                    action,\n                    callback: has_match => {\n                        if (has_match) {\n                            onUnmountPortfolio();\n                        }\n                    },\n                });\n\n                return tradePageMountingMiddleware({\n                    path_from: history.location.pathname,\n                    path_to: route_to.pathname,\n                    match_patterns: [\n                        { from: [routes.contract], to: [routes.trade] },\n                        { from: [routes.trade], to: [routes.contract] },\n                    ],\n                    action,\n                    callback: setTradeMountingPolicy,\n                });\n            });\n        }\n\n        return () => {\n            setPromptHandler?.(false);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(() => {\n        return () => onUnmountPortfolio();\n    }, [onUnmountPortfolio]);\n\n    if (has_error) return <Error {...error} />;\n\n    return <BinaryRoutes is_logged_in={is_logged_in} is_logging_in={is_logging_in} passthrough={passthrough} />;\n});\n\nRoutes.propTypes = {\n    history: PropTypes.object,\n    passthrough: PropTypes.object,\n};\n\nexport default withRouter(Routes);\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Icon } from '@deriv/components';\nimport { localize } from '@deriv/translations';\n\nconst ResultMobile = ({ is_visible, result }) => {\n    const is_contract_won = result === 'won';\n    return (\n        <React.Fragment>\n            <CSSTransition\n                in={is_visible}\n                timeout={250}\n                classNames={{\n                    enter: 'positions-modal-card__result--enter',\n                    enterDone: 'positions-modal-card__result--enter-done',\n                    exit: 'positions-modal-card__result--exit',\n                }}\n                unmountOnExit\n            >\n                <div className='positions-modal-card__caption-wrapper' data-testid='result_mobile'>\n                    <span\n                        className={classNames('positions-modal-card__caption', {\n                            'positions-modal-card__caption--won': is_contract_won,\n                            'positions-modal-card__caption--lost': !is_contract_won,\n                        })}\n                    >\n                        {is_contract_won ? (\n                            <React.Fragment>\n                                {localize('Won')}\n                                <Icon icon='IcCheckmarkCircle' className='positions-modal-card__icon' color='green' />\n                            </React.Fragment>\n                        ) : (\n                            <React.Fragment>\n                                {localize('Lost')}\n                                <Icon icon='IcCrossCircle' className='positions-modal-card__icon' color='red' />\n                            </React.Fragment>\n                        )}\n                    </span>\n                </div>\n            </CSSTransition>\n        </React.Fragment>\n    );\n};\n\nResultMobile.propTypes = {\n    is_visible: PropTypes.bool,\n    result: PropTypes.string,\n};\n\nexport default ResultMobile;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { CSSTransition } from 'react-transition-group';\nimport { ContractCard, CurrencyBadge, Icon, Money, ProgressSliderMobile, Text } from '@deriv/components';\nimport {\n    getContractPath,\n    isAccumulatorContract,\n    isCryptoContract,\n    isMultiplierContract,\n    isHighLow,\n    isCryptocurrency,\n    hasContractEntered,\n    isOpen,\n    getSymbolDisplayName,\n    getEndTime,\n    getTotalProfit,\n    isVanillaContract,\n} from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { BinaryLink } from 'App/Components/Routes';\nimport { PositionsCardLoader } from 'App/Components/Elements/ContentLoader';\nimport { getContractTypeDisplay, getCardLabels } from 'Constants/contract';\nimport { getMarketInformation } from 'Utils/Helpers/market-underlying';\nimport ResultMobile from './result-mobile.jsx';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst PositionsModalCard = observer(\n    ({\n        className,\n        contract_info,\n        contract_update,\n        currency,\n        current_tick,\n        id,\n        indicative,\n        is_loading,\n        is_sell_requested,\n        is_unsupported,\n        onClickSell,\n        profit_loss,\n        onClickCancel,\n        result,\n        sell_price,\n        status,\n        togglePositions,\n        toggleUnsupportedContractModal,\n        type,\n    }) => {\n        const { ui, common, contract_trade } = useStore();\n        const { active_symbols } = useTraderStore();\n        const { server_time } = common;\n        const { getContractById } = contract_trade;\n        const {\n            addToast,\n            current_focus,\n            is_mobile,\n            removeToast,\n            setCurrentFocus,\n            should_show_cancellation_warning,\n            toggleCancellationWarning,\n        } = ui;\n        const loader_el = (\n            <div className='positions-modal-card__content-loader'>\n                <PositionsCardLoader speed={2} />\n            </div>\n        );\n        const is_multiplier = isMultiplierContract(contract_info.contract_type);\n        const is_accumulator = isAccumulatorContract(contract_info.contract_type);\n        const is_vanilla = isVanillaContract(contract_info.contract_type);\n        const is_crypto = isCryptoContract(contract_info.underlying);\n        const has_progress_slider = !is_multiplier || (is_crypto && is_multiplier);\n        const has_ended = !!getEndTime(contract_info);\n        const fallback_result = profit_loss >= 0 ? 'won' : 'lost';\n        const total_profit = getTotalProfit(contract_info);\n\n        const should_show_sell = hasContractEntered(contract_info) && isOpen(contract_info);\n        const display_name = getSymbolDisplayName(\n            active_symbols,\n            getMarketInformation(contract_info.shortcode).underlying\n        );\n\n        const contract_options_el = (\n            <React.Fragment>\n                <div className={classNames('positions-modal-card__grid', 'positions-modal-card__grid-header')}>\n                    <div className='positions-modal-card__underlying-name'>\n                        <Icon\n                            icon={contract_info.underlying ? `IcUnderlying${contract_info.underlying}` : 'IcUnknown'}\n                            size={34}\n                        />\n                        <Text size='xxs' className='positions-modal-card__symbol' weight='bold'>\n                            {contract_info.display_name}\n                        </Text>\n                    </div>\n                    <div className='positions-modal-card__type'>\n                        <ContractCard.ContractTypeCell\n                            getContractTypeDisplay={getContractTypeDisplay}\n                            is_high_low={isHighLow({ shortcode: contract_info.shortcode })}\n                            multiplier={contract_info.multiplier}\n                            type={type}\n                        />\n                    </div>\n                    <CSSTransition\n                        in={should_show_sell}\n                        timeout={250}\n                        classNames={{\n                            enter: 'positions-modal-card__sell-button--enter',\n                            enterDone: 'positions-modal-card__sell-button--enter-done',\n                            exit: 'positions-modal-card__sell-button--exit',\n                        }}\n                        unmountOnExit\n                    >\n                        <div className='positions-modal-card__sell-button'>\n                            <ContractCard.Sell\n                                contract_info={contract_info}\n                                is_sell_requested={is_sell_requested}\n                                getCardLabels={getCardLabels}\n                                onClickSell={onClickSell}\n                            />\n                        </div>\n                    </CSSTransition>\n                </div>\n                <CurrencyBadge currency={contract_info?.currency ?? ''} />\n                <div className={classNames('positions-modal-card__grid', 'positions-modal-card__grid-body')}>\n                    <div className={classNames('positions-modal-card__grid-profit-payout')}>\n                        <div\n                            className={classNames(\n                                'positions-modal-card__profit-loss',\n                                'positions-modal-card__profit-loss-label'\n                            )}\n                        >\n                            {result ? localize('Profit/Loss:') : localize('Potential profit/loss:')}\n                        </div>\n                        <div\n                            className={classNames(\n                                'positions-modal-card__indicative',\n                                'positions-modal-card__indicative-label'\n                            )}\n                        >\n                            {!result ? localize('Indicative price:') : localize('Payout:')}\n                        </div>\n                        <div\n                            className={classNames('positions-modal-card__profit-loss', {\n                                'positions-modal-card__profit-loss--is-crypto': isCryptocurrency(currency),\n                                'positions-modal-card__profit-loss--negative': profit_loss < 0,\n                                'positions-modal-card__profit-loss--positive': profit_loss > 0,\n                            })}\n                        >\n                            <Money amount={Math.abs(profit_loss)} currency={currency} />\n                            <div\n                                className={classNames('positions-modal-card__indicative--movement', {\n                                    'positions-modal-card__indicative--movement-complete': !!result,\n                                })}\n                            >\n                                {status === 'profit' && <Icon icon='IcProfit' />}\n                                {status === 'loss' && <Icon icon='IcLoss' />}\n                            </div>\n                        </div>\n                        <div className='positions-modal-card__indicative'>\n                            <Money amount={sell_price || indicative} currency={currency} />\n                            <div\n                                className={classNames('positions-modal-card__indicative--movement', {\n                                    'positions-modal-card__indicative--movement-complete': !!result,\n                                })}\n                            >\n                                {status === 'profit' && <Icon icon='IcProfit' />}\n                                {status === 'loss' && <Icon icon='IcLoss' />}\n                            </div>\n                        </div>\n                    </div>\n                    <div className={classNames('positions-modal-card__grid-price-payout')}>\n                        <div className='positions-modal-card__purchase-price'>\n                            <Text size='xxxs' className='positions-modal-card__purchase-label'>\n                                {localize('Purchase price:')}\n                            </Text>\n                            <Text weight='bold' size='xxs' className='positions-modal-card__purchase-value'>\n                                <Money amount={contract_info.buy_price} currency={currency} />\n                            </Text>\n                        </div>\n                        <div className='positions-modal-card__payout-price'>\n                            <Text size='xxxs' className='positions-modal-card__payout-label'>\n                                {localize('Potential payout:')}\n                            </Text>\n                            <Text weight='bold' size='xxs' className='positions-modal-card__payout-value'>\n                                {contract_info.payout ? (\n                                    <Money amount={contract_info.payout} currency={currency} />\n                                ) : (\n                                    <strong>-i</strong>\n                                )}\n                            </Text>\n                        </div>\n                    </div>\n\n                    {result || !!contract_info.is_sold ? (\n                        <ResultMobile\n                            contract_id={id}\n                            is_visible={!!contract_info.is_sold}\n                            result={result || fallback_result}\n                        />\n                    ) : (\n                        <ProgressSliderMobile\n                            className='positions-modal-card__progress'\n                            current_tick={current_tick}\n                            getCardLabels={getCardLabels}\n                            is_loading={is_loading}\n                            start_time={contract_info.date_start}\n                            expiry_time={contract_info.date_expiry}\n                            server_time={server_time}\n                            ticks_count={contract_info.tick_count}\n                        />\n                    )}\n                </div>\n            </React.Fragment>\n        );\n\n        const contract_vanilla_el = (\n            <React.Fragment>\n                <NavLink\n                    className={classNames('dc-contract-card', {\n                        'dc-contract-card--green': !is_multiplier && profit_loss > 0 && !result,\n                        'dc-contract-card--red': !is_multiplier && profit_loss < 0 && !result,\n                    })}\n                    to={{\n                        pathname: `/contract/${contract_info.contract_id}`,\n                    }}\n                >\n                    <ContractCard.Header\n                        contract_info={contract_info}\n                        display_name={display_name}\n                        getCardLabels={getCardLabels}\n                        getContractTypeDisplay={getContractTypeDisplay}\n                        has_progress_slider={!is_mobile && has_progress_slider}\n                        is_mobile={is_mobile}\n                        is_sell_requested={is_sell_requested}\n                        onClickSell={onClickSell}\n                        server_time={server_time}\n                    />\n                </NavLink>\n                <CurrencyBadge currency={contract_info?.currency ?? ''} />\n                <div className={classNames('positions-modal-card__grid', 'positions-modal-card__grid-body')}>\n                    <div className={classNames('positions-modal-card__grid-profit-payout')}>\n                        <div className='positions-modal-card__purchase-price'>\n                            <Text size='xxxs' className='positions-modal-card__purchase-label'>\n                                {localize('Buy price:')}\n                            </Text>\n                            <Text weight='bold' size='xxs' className='positions-modal-card__purchase-value'>\n                                <Money amount={contract_info.buy_price} currency={currency} />\n                            </Text>\n                        </div>\n                        <div className='positions-modal-card__payout-price'>\n                            <Text size='xxxs' className='positions-modal-card__payout-label'>\n                                {localize('Contract value:')}\n                            </Text>\n                            <Text weight='bold' size='xxs' className='positions-modal-card__payout-value'>\n                                <Money amount={contract_info.bid_price} currency={currency} />\n                            </Text>\n                        </div>\n                    </div>\n\n                    <div className={classNames('positions-modal-card__grid-price-payout')}>\n                        <div className='positions-modal-card__purchase-price'>\n                            <Text size='xxxs' className='positions-modal-card__purchase-label'>\n                                {localize('Entry spot:')}\n                            </Text>\n                            <Text weight='bold' size='xxs' className='positions-modal-card__purchase-value'>\n                                <Money amount={contract_info.entry_spot} currency={currency} />\n                            </Text>\n                        </div>\n                        <div className='positions-modal-card__payout-price'>\n                            <Text size='xxxs' className='positions-modal-card__payout-label'>\n                                {localize('Strike:')}\n                            </Text>\n                            <Text weight='bold' size='xxs' className='positions-modal-card__payout-value'>\n                                <Money amount={contract_info.barrier} currency={currency} />\n                            </Text>\n                        </div>\n                    </div>\n\n                    {result || !!contract_info.is_sold ? (\n                        <ResultMobile\n                            contract_id={id}\n                            is_visible={!!contract_info.is_sold}\n                            result={result || fallback_result}\n                        />\n                    ) : (\n                        <ProgressSliderMobile\n                            className='positions-modal-card__progress'\n                            current_tick={current_tick}\n                            getCardLabels={getCardLabels}\n                            is_loading={is_loading}\n                            start_time={contract_info.date_start}\n                            expiry_time={contract_info.date_expiry}\n                            server_time={server_time}\n                            ticks_count={contract_info.tick_count}\n                        />\n                    )}\n                </div>\n                <div className={classNames('positions-modal-card__item', className)}>\n                    <div className='dc-contract-card-item__header'>{getCardLabels().TOTAL_PROFIT_LOSS}</div>\n                    <div\n                        className={classNames('dc-contract-card-item__body', {\n                            'dc-contract-card-item__body--crypto': isCryptocurrency(currency),\n                            'dc-contract-card-item__body--loss': +total_profit < 0,\n                            'dc-contract-card-item__body--profit': +total_profit > 0,\n                        })}\n                    >\n                        <Money amount={total_profit} currency={currency} />\n                        <div\n                            className={classNames('dc-contract-card__indicative--movement', {\n                                'dc-contract-card__indicative--movement-complete': !!contract_info.is_sold,\n                            })}\n                        >\n                            {status === 'profit' && <Icon icon='IcProfit' />}\n                            {status === 'loss' && <Icon icon='IcLoss' />}\n                        </div>\n                    </div>\n                </div>\n                <ContractCard.Footer\n                    contract_info={contract_info}\n                    getCardLabels={getCardLabels}\n                    is_multiplier={is_multiplier}\n                    is_sell_requested={is_sell_requested}\n                    onClickCancel={onClickCancel}\n                    onClickSell={onClickSell}\n                    server_time={server_time}\n                    status={status}\n                />\n            </React.Fragment>\n        );\n\n        const custom_card_header = (\n            <ContractCard.Header\n                contract_info={contract_info}\n                display_name={display_name}\n                getCardLabels={getCardLabels}\n                getContractTypeDisplay={getContractTypeDisplay}\n                has_progress_slider={(!is_mobile && has_progress_slider) || is_accumulator}\n                is_mobile={is_mobile}\n                is_sell_requested={is_sell_requested}\n                onClickSell={onClickSell}\n                server_time={server_time}\n            />\n        );\n\n        const custom_card_body = (\n            <ContractCard.Body\n                addToast={addToast}\n                contract_info={contract_info}\n                contract_update={contract_update}\n                currency={currency}\n                current_focus={current_focus}\n                getCardLabels={getCardLabels}\n                getContractById={getContractById}\n                is_accumulator={is_accumulator}\n                is_mobile={is_mobile}\n                is_multiplier={is_multiplier}\n                is_positions\n                is_sold={!!contract_info.is_sold}\n                has_progress_slider={is_mobile && has_progress_slider && !has_ended}\n                removeToast={removeToast}\n                server_time={server_time}\n                setCurrentFocus={setCurrentFocus}\n                should_show_cancellation_warning={should_show_cancellation_warning}\n                status={status}\n                toggleCancellationWarning={toggleCancellationWarning}\n            />\n        );\n\n        const custom_card_footer = (\n            <ContractCard.Footer\n                contract_info={contract_info}\n                getCardLabels={getCardLabels}\n                is_multiplier={is_multiplier}\n                is_sell_requested={is_sell_requested}\n                onClickCancel={onClickCancel}\n                onClickSell={onClickSell}\n                server_time={server_time}\n                status={status}\n            />\n        );\n\n        const custom_contract_el = (\n            <React.Fragment>\n                <ContractCard\n                    contract_info={contract_info}\n                    getCardLabels={getCardLabels}\n                    is_multiplier={is_multiplier}\n                    profit_loss={profit_loss}\n                    should_show_result_overlay={false}\n                >\n                    {custom_card_header}\n                    {custom_card_body}\n                    {custom_card_footer}\n                </ContractCard>\n            </React.Fragment>\n        );\n\n        const options_el = is_vanilla ? contract_vanilla_el : contract_options_el;\n        const contract_el = is_multiplier || is_accumulator ? custom_contract_el : options_el;\n\n        return (\n            <div id={`dt_drawer_card_${id}`} className={classNames('positions-modal-card__wrapper', className)}>\n                {is_unsupported ? (\n                    <div\n                        className={classNames('positions-modal-card')}\n                        onClick={() => toggleUnsupportedContractModal(true)}\n                    >\n                        {contract_info.underlying ? contract_el : loader_el}\n                    </div>\n                ) : (\n                    <React.Fragment>\n                        <BinaryLink\n                            onClick={togglePositions}\n                            className={classNames('positions-modal-card', {\n                                'positions-modal-card--multiplier': is_multiplier,\n                            })}\n                            to={getContractPath(id)}\n                        >\n                            {contract_info.underlying ? contract_el : loader_el}\n                        </BinaryLink>\n                    </React.Fragment>\n                )}\n            </div>\n        );\n    }\n);\n\nPositionsModalCard.propTypes = {\n    className: PropTypes.string,\n    contract_info: PropTypes.object,\n    contract_update: PropTypes.object,\n    currency: PropTypes.string,\n    current_tick: PropTypes.number,\n    duration: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    duration_unit: PropTypes.string,\n    exit_spot: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n    id: PropTypes.number,\n    indicative: PropTypes.number,\n    is_loading: PropTypes.bool,\n    is_sell_requested: PropTypes.bool,\n    is_unsupported: PropTypes.bool,\n    is_valid_to_sell: PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n    onClickRemove: PropTypes.func,\n    onClickSell: PropTypes.func,\n    onClickCancel: PropTypes.func,\n    profit_loss: PropTypes.number,\n    result: PropTypes.string,\n    sell_price: PropTypes.number,\n    sell_time: PropTypes.number,\n    status: PropTypes.string,\n    togglePositions: PropTypes.func,\n    toggleUnsupportedContractModal: PropTypes.func,\n    type: PropTypes.string,\n};\n\nexport default PositionsModalCard;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Icon } from '@deriv/components';\nimport 'Sass/app/_common/components/positions-toggle.scss';\n\nconst TogglePositions = ({ positions_count, is_open, togglePositions }) => {\n    const positions_toggle_class = classNames('positions-toggle', {\n        'positions-toggle--active': is_open,\n        'positions-toggle--has-count': positions_count > 0,\n    });\n    return (\n        <a\n            id='dt_positions_toggle'\n            data-testid='dt_positions_toggle'\n            className={positions_toggle_class}\n            onClick={togglePositions}\n            data-count={positions_count}\n        >\n            <Icon data_testid='dt_icon' icon='IcPortfolio' className='positions-toggle__icon' />\n        </a>\n    );\n};\n\nTogglePositions.propTypes = {\n    is_open: PropTypes.bool,\n    is_positions_drawer_on: PropTypes.bool,\n    positions_count: PropTypes.number,\n    togglePositions: PropTypes.func,\n    togglePositionsDrawer: PropTypes.func,\n};\n\nexport default TogglePositions;\n","import React from 'react';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport { Icon, Div100vhContainer, Modal, Text } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { NavLink } from 'react-router-dom';\nimport EmptyPortfolioMessage from '../EmptyPortfolioMessage';\nimport PositionsModalCard from 'App/Components/Elements/PositionsDrawer/positions-modal-card.jsx';\nimport { filterByContractType } from 'App/Components/Elements/PositionsDrawer/helpers';\nimport TogglePositions from './toggle-positions.jsx';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer, useStore } from '@deriv/stores';\n\nconst TogglePositionsMobile = observer(\n    ({\n        active_positions_count,\n        all_positions,\n        currency,\n        disableApp,\n        enableApp,\n        error,\n        is_empty,\n        onClickSell,\n        onClickCancel,\n        toggleUnsupportedContractModal,\n    }) => {\n        const { portfolio, ui } = useStore();\n        const { symbol, contract_type: trade_contract_type } = useTraderStore();\n        const { removePositionById: onClickRemove } = portfolio;\n        const { togglePositionsDrawer, is_positions_drawer_on } = ui;\n        let filtered_positions = [];\n\n        const closeModal = () => {\n            filtered_positions.slice(0, 5).map(position => {\n                const { contract_info } = position;\n                if (contract_info?.is_sold) {\n                    onClickRemove(contract_info.contract_id);\n                }\n            });\n            togglePositionsDrawer();\n        };\n\n        filtered_positions = all_positions.filter(\n            p =>\n                p.contract_info &&\n                symbol === p.contract_info.underlying &&\n                filterByContractType(p.contract_info, trade_contract_type)\n        );\n\n        // Show only 5 most recent open contracts\n        const body_content = (\n            <React.Fragment>\n                <TransitionGroup component='div'>\n                    {filtered_positions.slice(0, 5).map(portfolio_position => (\n                        <CSSTransition\n                            appear\n                            key={portfolio_position.id}\n                            in={true}\n                            timeout={150}\n                            classNames={{\n                                appear: 'dc-contract-card__wrapper--enter',\n                                enter: 'dc-contract-card__wrapper--enter',\n                                enterDone: 'dc-contract-card__wrapper--enter-done',\n                                exit: 'dc-contract-card__wrapper--exit',\n                            }}\n                            unmountOnExit\n                        >\n                            <PositionsModalCard\n                                onClickSell={onClickSell}\n                                onClickCancel={onClickCancel}\n                                onClickRemove={onClickRemove}\n                                key={portfolio_position.id}\n                                currency={currency}\n                                toggleUnsupportedContractModal={toggleUnsupportedContractModal}\n                                togglePositions={togglePositionsDrawer}\n                                {...portfolio_position}\n                            />\n                        </CSSTransition>\n                    ))}\n                </TransitionGroup>\n            </React.Fragment>\n        );\n\n        return (\n            <React.Fragment>\n                <TogglePositions\n                    is_open={is_positions_drawer_on}\n                    togglePositions={togglePositionsDrawer}\n                    positions_count={active_positions_count}\n                />\n                <Modal\n                    is_open={is_positions_drawer_on}\n                    toggleModal={closeModal}\n                    id='dt_mobile_positions'\n                    is_vertical_top\n                    has_close_icon\n                    enableApp={enableApp}\n                    disableApp={disableApp}\n                    width='calc(100vw - 32px)'\n                >\n                    <Div100vhContainer className='positions-modal' height_offset='48px'>\n                        <div className='positions-modal__header'>\n                            <Text size='xxxs' className='positions-modal__title'>\n                                <Icon icon='IcPortfolio' className='positions-modal__title-icon' />\n                                {localize('Recent positions')}\n                            </Text>\n                            <div className='positions-modal__close-btn' onClick={closeModal}>\n                                <Icon icon='IcMinusBold' />\n                            </div>\n                        </div>\n                        <div className='positions-modal__body'>\n                            {is_empty || error ? <EmptyPortfolioMessage error={error} /> : body_content}\n                        </div>\n                        <div className='positions-modal__footer'>\n                            <NavLink\n                                onClick={closeModal}\n                                className='dc-btn dc-btn--secondary dc-btn__large positions-modal__footer-btn'\n                                to={routes.positions}\n                            >\n                                <Text size='xs' weight='bold'>\n                                    {localize('Go to Reports')}\n                                </Text>\n                            </NavLink>\n                        </div>\n                    </Div100vhContainer>\n                </Modal>\n            </React.Fragment>\n        );\n    }\n);\n\nexport default TogglePositionsMobile;\n","import React from 'react';\nimport TogglePositionsMobile from 'App/Components/Elements/TogglePositions/toggle-positions-mobile.jsx';\nimport { filterByContractType } from 'App/Components/Elements/PositionsDrawer/helpers';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer, useStore } from '@deriv/stores';\n\nconst PopulateHeader = observer(() => {\n    const { portfolio, ui, client } = useStore();\n    const { symbol, contract_type: trade_contract_type } = useTraderStore();\n    const { currency: positions_currency } = client;\n    const { disableApp, enableApp } = ui;\n    const {\n        active_positions_count,\n        all_positions: positions,\n        error: positions_error,\n        onClickSell: onPositionsSell,\n        removePositionById: onPositionsRemove,\n        onClickCancel: onPositionsCancel,\n    } = portfolio;\n\n    const symbol_positions = positions.filter(\n        p =>\n            p.contract_info &&\n            symbol === p.contract_info.underlying &&\n            filterByContractType(p.contract_info, trade_contract_type)\n    );\n\n    return (\n        <TogglePositionsMobile\n            active_positions_count={active_positions_count}\n            all_positions={positions}\n            currency={positions_currency}\n            disableApp={disableApp}\n            is_empty={!symbol_positions.length}\n            enableApp={enableApp}\n            error={positions_error}\n            onClickSell={onPositionsSell}\n            onClickRemove={onPositionsRemove}\n            onClickCancel={onPositionsCancel}\n        />\n    );\n});\n\nexport default PopulateHeader;\n","import React from 'react';\nimport { StoreProvider } from '@deriv/stores';\nimport { TraderStoreProvider } from 'Stores/useTraderStores';\nimport type { TCoreStores } from '@deriv/stores/types';\n\nexport const TraderProviders = ({ children, store }: React.PropsWithChildren<{ store: TCoreStores }>) => {\n    return (\n        <StoreProvider store={store}>\n            <TraderStoreProvider>{children}</TraderStoreProvider>\n        </StoreProvider>\n    );\n};\n\nexport default TraderProviders;\n","import React from 'react';\nimport { when } from 'mobx';\nimport { MobileWrapper } from '@deriv/components';\nimport { isMobile, routes, WS } from '@deriv/shared';\nimport PopulateHeader from './populate-header';\nimport { observer, useStore } from '@deriv/stores';\nimport TraderProviders from '../../trader-providers';\nimport { TCoreStores } from '@deriv/stores/types';\n\ntype TradeHeaderExtensionsProps = {\n    store: TCoreStores;\n};\n\nconst TradeHeaderExtensions = observer(({ store }: TradeHeaderExtensionsProps) => {\n    const { client, modules, ui, portfolio } = useStore();\n    const { populateHeaderExtensions } = ui;\n    const { onMount: onMountPositions } = portfolio;\n    const { is_logged_in, is_populating_account_list } = client;\n    const { onMountCommon: onMountCashier, setAccountSwitchListener } = modules.cashier.general_store;\n\n    const show_positions_toggle = location.pathname !== routes.mt5;\n    const show_component = is_logged_in && show_positions_toggle;\n\n    const populateHeaderfunction = React.useCallback(() => {\n        const header_items = show_component ? (\n            <MobileWrapper>\n                <TraderProviders store={store}>\n                    <PopulateHeader />\n                </TraderProviders>\n            </MobileWrapper>\n        ) : null;\n\n        populateHeaderExtensions(header_items);\n    }, [populateHeaderExtensions, store, show_positions_toggle, is_populating_account_list]);\n\n    React.useEffect(() => {\n        const waitForLogin = async () => {\n            if (isMobile() && show_positions_toggle) {\n                await when(() => !is_populating_account_list); // Waits for login to complete\n                if (is_logged_in) {\n                    await WS.wait('authorize');\n                    onMountPositions();\n                    onMountCashier(true);\n                    setAccountSwitchListener();\n                }\n            }\n\n            populateHeaderfunction();\n        };\n\n        waitForLogin().catch(() => {\n            // Do nothing: This is to remove the bug reported by SonarCloud about not having a catch statement here.\n        });\n\n        return () => populateHeaderExtensions(null);\n    }, [\n        onMountCashier,\n        onMountPositions,\n        populateHeaderfunction,\n        populateHeaderExtensions,\n        setAccountSwitchListener,\n        store,\n        show_positions_toggle,\n    ]);\n\n    React.useEffect(() => {\n        populateHeaderfunction();\n    });\n\n    return null;\n});\n\nexport default TradeHeaderExtensions;\n","import TogglePositions from './toggle-positions.jsx';\n\nexport default TogglePositions;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { routes } from '@deriv/shared';\nimport TogglePositions from 'App/Components/Elements/TogglePositions';\nimport { observer, useStore } from '@deriv/stores';\n\nconst TradeFooterExtensions = observer(() => {\n    const { client, portfolio, ui } = useStore();\n    const { is_logged_in } = client;\n    const { active_positions_count } = portfolio;\n    const { is_positions_drawer_on, populateFooterExtensions, togglePositionsDrawer } = ui;\n    React.useEffect(() => populateFooter());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    React.useEffect(() => () => populateFooterExtensions([]), []);\n\n    const TogglePositionsIcon = () => (\n        <TogglePositions\n            is_open={is_positions_drawer_on}\n            togglePositions={togglePositionsDrawer}\n            positions_count={active_positions_count}\n        />\n    );\n\n    const populateFooter = () => {\n        const show_positions_toggle = location.pathname === routes.trade;\n\n        if (is_logged_in && show_positions_toggle) {\n            populateFooterExtensions([\n                {\n                    position: 'left',\n                    Component: TogglePositionsIcon,\n                },\n            ]);\n        } else {\n            populateFooterExtensions([]);\n        }\n    };\n\n    return null;\n});\n\nTradeFooterExtensions.propTypes = {\n    location: PropTypes.object,\n};\n\nexport default withRouter(TradeFooterExtensions);\n","import React from 'react';\nimport Loadable from 'react-loadable';\nimport { UILoader } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\nimport TraderProviders from '../../trader-providers';\nimport type { TCoreStores } from '@deriv/stores/types';\n\ntype TTradeSettingsExtensionsProps = {\n    store: TCoreStores;\n};\n\nconst ChartSettingContainer = Loadable({\n    loader: () =>\n        import(\n            /* webpackChunkName: \"settings-chart\", webpackPrefetch: true */ 'App/Containers/SettingsModal/settings-chart.jsx'\n        ),\n    loading: UILoader,\n});\n\n// const PurchaseSettings = Loadable({\n//     loader: () =>\n//     import(/* webpackChunkName: \"settings-chart\", webpackPrefetch: true */'App/Containers/SettingsModal/settings-purchase.jsx'),\n//     loading: UILoader,\n// });\n\nconst renderItemValue = <T extends object>(props: T, store: TCoreStores) => (\n    <TraderProviders store={store}>\n        <ChartSettingContainer {...props} />\n    </TraderProviders>\n);\n\nconst TradeSettingsExtensions = observer(({ store }: TTradeSettingsExtensionsProps) => {\n    const { ui } = useStore();\n    const { populateSettingsExtensions } = ui;\n    const populateSettings = () => {\n        const menu_items: Parameters<typeof populateSettingsExtensions>[0] = [\n            {\n                icon: 'IcChart',\n                label: localize('Charts'),\n                value: props => renderItemValue(props, store),\n                // uncomment below lines to bring back purchase lock and purchase confirmation}\n                // }, {\n                //     icon : IconPurchase,\n                //     label: localize('Purchase'),\n                //     value: PurchaseSettings,\n            },\n        ];\n        populateSettingsExtensions(menu_items);\n    };\n\n    React.useEffect(() => {\n        return () => populateSettingsExtensions(null);\n    }, [populateSettingsExtensions]);\n\n    React.useEffect(() => populateSettings());\n\n    return null;\n});\n\nexport default TradeSettingsExtensions;\n","import { ContractType } from 'Stores/Modules/Trading/Helpers/contract-type';\n\nexport const onChangeSymbolAsync = async symbol => {\n    await ContractType.buildContractTypesConfig(symbol);\n};\n","import { localize } from '@deriv/translations';\nimport { isHourValid, isMinuteValid, isTimeValid, toMoment } from '@deriv/shared';\nimport { isSessionAvailable } from '../Helpers/start-date';\n\nconst tradeSpecificBarrierCheck = (is_vanilla, input) => is_vanilla || input !== 0;\n\nexport const getValidationRules = () => ({\n    amount: {\n        rules: [\n            ['req', { message: localize('Amount is a required field.') }],\n            ['number', { min: 0, type: 'float' }],\n        ],\n    },\n    barrier_1: {\n        rules: [\n            [\n                'req',\n                {\n                    condition: store => store.barrier_count && store.form_components.indexOf('barrier') > -1,\n                    message: localize('Barrier is a required field.'),\n                },\n            ],\n            ['barrier', { condition: store => store.barrier_count }],\n            [\n                'custom',\n                {\n                    func: (value, options, store, inputs) =>\n                        store.barrier_count > 1 ? +value > +inputs.barrier_2 : true,\n                    message: localize('Higher barrier must be higher than lower barrier.'),\n                },\n            ],\n            [\n                'custom',\n                {\n                    func: (value, options, store, inputs) =>\n                        /^[+-]/.test(inputs.barrier_1)\n                            ? tradeSpecificBarrierCheck(store.is_vanilla, +inputs.barrier_1)\n                            : true,\n                    message: localize('Barrier cannot be zero.'),\n                },\n            ],\n        ],\n        trigger: 'barrier_2',\n    },\n    barrier_2: {\n        rules: [\n            [\n                'req',\n                {\n                    condition: store => store.barrier_count > 1 && store.form_components.indexOf('barrier') > -1,\n                    message: localize('Barrier is a required field.'),\n                },\n            ],\n            ['barrier', { condition: store => store.barrier_count }],\n            [\n                'custom',\n                {\n                    func: (value, options, store, inputs) =>\n                        (/^[+-]/g.test(inputs.barrier_1) && /^[+-]/g.test(value)) ||\n                        (/^(?![+-])/g.test(inputs.barrier_1) && /^(?![+-])/g.test(value)),\n                    message: localize('Both barriers should be relative or absolute'),\n                },\n            ],\n            [\n                'custom',\n                {\n                    func: (value, options, store, inputs) => +inputs.barrier_1 > +value,\n                    message: localize('Lower barrier must be lower than higher barrier.'),\n                },\n            ],\n        ],\n        trigger: 'barrier_1',\n    },\n    duration: {\n        rules: [['req', { message: localize('Duration is a required field.') }]],\n    },\n    start_date: {\n        trigger: 'start_time',\n    },\n    expiry_date: {\n        trigger: 'expiry_time',\n    },\n    start_time: {\n        rules: [\n            [\n                'custom',\n                {\n                    func: (value, options, store) => store.contract_start_type === 'spot' || isTimeValid(value),\n                    message: localize('Please enter the start time in the format \"HH:MM\".'),\n                },\n            ],\n            [\n                'custom',\n                {\n                    func: (value, options, store) => store.contract_start_type === 'spot' || isHourValid(value),\n                    message: localize('Hour must be between 0 and 23.'),\n                },\n            ],\n            [\n                'custom',\n                {\n                    func: (value, options, store) => store.contract_start_type === 'spot' || isMinuteValid(value),\n                    message: localize('Minute must be between 0 and 59.'),\n                },\n            ],\n            [\n                'custom',\n                {\n                    func: (value, options, store) => {\n                        if (store.contract_start_type === 'spot') return true;\n                        if (!isTimeValid(value)) return false;\n                        const start_moment = toMoment(store.start_date);\n                        const start_moment_clone = start_moment.clone();\n                        const [h, m] = value.split(':');\n                        return isSessionAvailable(store.sessions, start_moment_clone.hour(h).minute(m), start_moment);\n                    },\n                    message: localize('Start time cannot be in the past.'),\n                },\n            ],\n        ],\n    },\n    expiry_time: {\n        rules: [\n            [\n                'custom',\n                {\n                    func: (value, options, store) => store.contract_start_type === 'spot' || isTimeValid(value),\n                    message: localize('Please enter the start time in the format \"HH:MM\".'),\n                },\n            ],\n            [\n                'custom',\n                {\n                    func: (value, options, store) => store.contract_start_type === 'spot' || isHourValid(value),\n                    message: localize('Hour must be between 0 and 23.'),\n                },\n            ],\n            [\n                'custom',\n                {\n                    func: (value, options, store) => store.contract_start_type === 'spot' || isMinuteValid(value),\n                    message: localize('Minute must be between 0 and 59.'),\n                },\n            ],\n            [\n                'custom',\n                {\n                    func: (value, options, store) => {\n                        if (store.contract_start_type === 'spot') return true;\n                        if (!isTimeValid(value)) return false;\n                        const start_moment = toMoment(store.start_date);\n                        const start_moment_clone = start_moment.clone();\n                        const [h, m] = value.split(':');\n                        return isSessionAvailable(store.sessions, start_moment_clone.hour(h).minute(m), start_moment);\n                    },\n                    message: localize('Expiry time cannot be in the past.'),\n                },\n            ],\n        ],\n    },\n    ...getMultiplierValidationRules(),\n});\n\nexport const getMultiplierValidationRules = () => ({\n    stop_loss: {\n        rules: [\n            [\n                'req',\n                {\n                    condition: store => store.has_stop_loss && !store.stop_loss,\n                    message: localize('Please enter a stop loss amount.'),\n                },\n            ],\n        ],\n    },\n    take_profit: {\n        rules: [\n            [\n                'req',\n                {\n                    condition: store => store.has_take_profit && !store.take_profit,\n                    message: localize('Please enter a take profit amount.'),\n                },\n            ],\n        ],\n    },\n});\n","import { WS } from '@deriv/shared';\n\nexport const processPurchase = async (proposal_id, price, passthrough) =>\n    WS.buy({\n        proposal_id,\n        price,\n        ...(passthrough && { passthrough }),\n    });\n","/**\n * @param {Object} previous_ticks_history_stats - an object of type: { ticks_stayed_in: number[], last_tick_epoch: number }\n *                                                with ticks_stayed_in starting with the latest counter value;\n * @param {number[]} new_ticks_history_stats - an array of ticks counters containing 100 last values at first, and then only 1 latest updated counter value;\n * @param {number} last_tick_epoch - an epoch of the latest tick counted by the latest (last) ticks counter in new_ticks_stayed_in array;\n * @returns an object of the same type as previous_ticks_history_stats.\n */\nexport const getUpdatedTicksHistoryStats = ({\n    previous_ticks_history_stats = {},\n    new_ticks_history_stats = [],\n    last_tick_epoch,\n}) => {\n    // we anticipate that the latest counter value will be the last one in the received new_ticks_stayed_in array:\n    let ticks_stayed_in = [];\n    const previous_history = previous_ticks_history_stats.ticks_stayed_in || [];\n    const previous_epoch = previous_ticks_history_stats.last_tick_epoch;\n    if (!new_ticks_history_stats.length || !last_tick_epoch) return previous_ticks_history_stats;\n    if (new_ticks_history_stats.length > 1) {\n        ticks_stayed_in = [...new_ticks_history_stats].reverse();\n    } else if (new_ticks_history_stats[0] <= previous_history[0] && last_tick_epoch > previous_epoch) {\n        ticks_stayed_in = [new_ticks_history_stats[0], ...previous_history.slice(0, previous_history.length - 1)];\n    } else if (last_tick_epoch === previous_epoch) {\n        ticks_stayed_in = previous_history;\n    } else {\n        ticks_stayed_in = [new_ticks_history_stats[0], ...previous_history.slice(1)];\n    }\n    return { ticks_stayed_in, last_tick_epoch };\n};\n","import { ContractType } from 'Stores/Modules/Trading/Helpers/contract-type';\n\nexport const onChangeContractTypeList = ({ contract_types_list, contract_type }) => {\n    return ContractType.getContractType(contract_types_list, contract_type);\n};\nexport const onChangeContractType = store => ContractType.getContractValues(store);\n","import { getExpiryType, getDurationMinMaxValues } from '@deriv/shared';\nimport { ContractType } from 'Stores/Modules/Trading/Helpers/contract-type';\n\nexport const onChangeExpiry = store => {\n    const contract_expiry_type = getExpiryType(store);\n\n    // TODO: there will be no barrier available if contract is only daily but client chooses intraday endtime. we should find a way to handle this.\n    const obj_barriers =\n        store.contract_expiry_type !== contract_expiry_type && // barrier value changes for tick/intraday/daily\n        ContractType.getBarriers(store.contract_type, contract_expiry_type);\n\n    return {\n        contract_expiry_type,\n        ...obj_barriers,\n    };\n};\n\nexport const onChangeContractType = store => {\n    const contract_expiry_type = getExpiryType(store);\n\n    const { duration, duration_min_max, duration_unit } = store;\n\n    const obj_duration = assertDuration({ contract_expiry_type, duration, duration_min_max, duration_unit });\n\n    return {\n        ...obj_duration,\n    };\n};\n\nconst assertDuration = ({ contract_expiry_type, duration, duration_min_max, duration_unit } = {}) => {\n    const [min, max] = getDurationMinMaxValues(duration_min_max, contract_expiry_type, duration_unit);\n\n    if (duration < min) {\n        return { duration: min };\n    }\n    if (duration > max) {\n        return { duration: max };\n    }\n    return {};\n};\n","import { ContractType } from 'Stores/Modules/Trading/Helpers/contract-type';\n\nexport const onChangeStartDate = async store => {\n    const { contract_type, duration_unit, start_date } = store;\n    const server_time = store.root_store.common.server_time;\n    let { start_time, expiry_date, expiry_type } = store;\n\n    start_time = start_time || server_time.clone().add(6, 'minute').format('HH:mm'); // when there is not a default value for start_time, it should be set more than 5 min after server_time\n\n    const obj_contract_start_type = ContractType.getStartType(start_date);\n    const contract_start_type = obj_contract_start_type.contract_start_type;\n    const obj_sessions = ContractType.getSessions(contract_type, start_date);\n    const sessions = obj_sessions.sessions;\n    const obj_start_time = ContractType.getStartTime(sessions, start_date, start_time);\n    start_time = obj_start_time.start_time;\n\n    const obj_duration_units_list = ContractType.getDurationUnitsList(contract_type, contract_start_type);\n    const duration_units_list = obj_duration_units_list.duration_units_list;\n    const obj_duration_unit = ContractType.getDurationUnit(duration_unit, contract_type, contract_start_type);\n\n    const obj_expiry_type = ContractType.getExpiryType(duration_units_list, expiry_type);\n    expiry_type = obj_expiry_type.expiry_type;\n    const obj_expiry_date = ContractType.getExpiryDate(duration_units_list, expiry_date, expiry_type, start_date);\n    expiry_date = obj_expiry_date.expiry_date;\n\n    const obj_duration_min_max = ContractType.getDurationMinMax(contract_type, contract_start_type);\n\n    return {\n        ...obj_contract_start_type,\n        ...obj_duration_units_list,\n        ...obj_duration_min_max,\n        ...obj_duration_unit,\n        ...obj_sessions,\n        ...obj_start_time,\n        ...obj_expiry_date,\n        ...obj_expiry_type,\n    };\n};\n\nexport const onChangeExpiry = async store => {\n    const { start_time, expiry_date, expiry_type, expiry_time, start_date, symbol, sessions } = store;\n\n    const trading_times = await ContractType.getTradingTimes(expiry_date, symbol);\n    const obj_market_open_times = { market_open_times: trading_times.open };\n    const obj_market_close_times = { market_close_times: trading_times.close };\n\n    const market_close_times = obj_market_close_times.market_close_times;\n    const obj_expiry_time = ContractType.getExpiryTime(\n        expiry_date,\n        expiry_time,\n        expiry_type,\n        market_close_times,\n        sessions,\n        start_date,\n        start_time\n    );\n\n    return {\n        ...obj_expiry_time,\n        ...obj_market_open_times,\n        ...obj_market_close_times,\n    };\n};\n","import { ContractType as ContractTypeHelper } from 'Stores/Modules/Trading/Helpers/contract-type';\nimport * as ContractType from '../Actions/contract-type';\nimport * as Duration from '../Actions/duration';\nimport * as StartDate from '../Actions/start-date';\n\nconst processInSequence = async (store, functions) => {\n    const snapshot = store.getSnapshot();\n    // To make sure that every function is invoked and affects the snapshot respectively, we have to use for instead of forEach\n    for (let i = 0; i < functions.length; i++) {\n        // Shallow copy with Object.assign is good enough to extend the snapshot with new state\n        // we don't need deep extension here, since each function in functions array composes a property of the store completely\n        Object.assign(snapshot, await functions[i](snapshot)); // eslint-disable-line no-await-in-loop\n    }\n    store.updateStore({\n        ...snapshot,\n    });\n};\n\nexport const processTradeParams = async (store, new_state) => {\n    const functions = getMethodsList(store, new_state);\n    await processInSequence(store, functions);\n\n    const duration_functions = getExpiryMethodsList();\n    await processInSequence(store, duration_functions);\n\n    store.updateStore({\n        is_trade_enabled: true,\n    });\n};\n\nconst getMethodsList = (store, new_state) => [\n    ContractTypeHelper.getContractCategories,\n    ContractType.onChangeContractTypeList,\n    ...(/\\b(symbol|contract_type|is_equal)\\b/.test(Object.keys(new_state)) || !store.contract_type // symbol/contract_type changed or contract_type not set yet\n        ? [ContractType.onChangeContractType]\n        : []),\n    StartDate.onChangeStartDate,\n    Duration.onChangeExpiry, // it should be always after StartDate.onChangeStartDate\n    ...(/\\b(symbol|contract_type|is_equal)\\b/.test(Object.keys(new_state)) || !store.contract_type // symbol/contract_type changed or contract_type not set yet\n        ? [Duration.onChangeContractType]\n        : []),\n];\n\nconst getExpiryMethodsList = () => [StartDate.onChangeExpiry];\n","export const CONTRACT_SHADES = {\n    CALL: 'ABOVE',\n    PUT: 'BELOW',\n    CALLE: 'ABOVE',\n    PUTE: 'BELOW',\n    EXPIRYRANGE: 'BETWEEN',\n    EXPIRYMISS: 'OUTSIDE',\n    RANGE: 'BETWEEN',\n    UPORDOWN: 'OUTSIDE',\n    ONETOUCH: 'NONE_SINGLE', // no shade\n    NOTOUCH: 'NONE_SINGLE', // no shade\n    ASIANU: 'ABOVE',\n    ASIAND: 'BELOW',\n    MULTUP: 'ABOVE',\n    MULTDOWN: 'BELOW',\n    ACCU: 'NONE_DOUBLE',\n};\n\n// Default non-shade according to number of barriers\nexport const DEFAULT_SHADES = {\n    1: 'NONE_SINGLE',\n    2: 'NONE_DOUBLE',\n};\n\nexport const BARRIER_COLORS = {\n    GREEN: '#4bb4b3',\n    RED: '#ec3f3f',\n    ORANGE: '#ff6444',\n    GRAY: '#999999',\n    DARK_GRAY: '#6E6E6E',\n};\n\nexport const BARRIER_LINE_STYLES = {\n    DASHED: 'dashed',\n    DOTTED: 'dotted',\n    SOLID: 'solid',\n};\n","class Errors {\n    constructor() {\n        this.errors = {};\n    }\n\n    add(attribute, message) {\n        if (!this.has(attribute)) {\n            this.errors[attribute] = [];\n        }\n\n        if (this.errors[attribute].indexOf(message) === -1) {\n            this.errors[attribute].push(message);\n        }\n    }\n\n    all() {\n        return this.errors;\n    }\n\n    first(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute][0];\n        }\n        return null;\n    }\n\n    get(attribute) {\n        if (this.has(attribute)) {\n            return this.errors[attribute];\n        }\n\n        return [];\n    }\n\n    has(attribute) {\n        return Object.prototype.hasOwnProperty.call(this.errors, attribute);\n    }\n}\n\nexport default Errors;\n","import { template } from '_common/utility';\nimport { getPreBuildDVRs } from '@deriv/shared';\nimport Error from './errors';\n\nclass Validator {\n    constructor(input, rules, store = null) {\n        this.input = input;\n        this.rules = rules;\n        this.store = store;\n        this.errors = new Error();\n\n        this.error_count = 0;\n    }\n\n    /**\n     * Add failure and error message for given rule\n     *\n     * @param {string} attribute\n     * @param {object} rule\n     */\n    addFailure(attribute, rule, error_message) {\n        let message = error_message || rule.options.message || getPreBuildDVRs()[rule.name].message();\n        if (rule.name === 'length') {\n            message = template(message, [\n                rule.options.min === rule.options.max ? rule.options.min : `${rule.options.min}-${rule.options.max}`,\n            ]);\n        } else if (rule.name === 'min') {\n            message = template(message, [rule.options.min]);\n        } else if (rule.name === 'not_equal') {\n            message = template(message, [rule.options.name1, rule.options.name2]);\n        }\n        this.errors.add(attribute, message);\n        this.error_count++;\n    }\n\n    /**\n     * Runs validator\n     *\n     * @return {boolean} Whether it passes; true = passes, false = fails\n     */\n    check() {\n        Object.keys(this.input).forEach(attribute => {\n            if (!Object.prototype.hasOwnProperty.call(this.rules, attribute)) {\n                return;\n            }\n\n            this.rules[attribute].forEach(rule => {\n                const ruleObject = Validator.getRuleObject(rule);\n\n                if (!ruleObject.validator && typeof ruleObject.validator !== 'function') {\n                    return;\n                }\n\n                if (ruleObject.options.condition && !ruleObject.options.condition(this.store)) {\n                    return;\n                }\n\n                if (this.input[attribute] === '' && ruleObject.name !== 'req') {\n                    return;\n                }\n\n                let is_valid, error_message;\n                if (ruleObject.name === 'number') {\n                    const { is_ok, message } = ruleObject.validator(\n                        this.input[attribute],\n                        ruleObject.options,\n                        this.store,\n                        this.input\n                    );\n                    is_valid = is_ok;\n                    error_message = message;\n                } else {\n                    is_valid = ruleObject.validator(this.input[attribute], ruleObject.options, this.store, this.input);\n                }\n\n                if (!is_valid) {\n                    this.addFailure(attribute, ruleObject, error_message);\n                }\n            });\n        });\n        return !this.error_count;\n    }\n\n    /**\n     * Determine if validation passes\n     *\n     * @return {boolean}\n     */\n    isPassed() {\n        return this.check();\n    }\n\n    /**\n     * Converts the rule array to an object\n     *\n     * @param {array} rule\n     * @return {object}\n     */\n    static getRuleObject(rule) {\n        const is_rule_string = typeof rule === 'string';\n        const rule_object = {\n            name: is_rule_string ? rule : rule[0],\n            options: is_rule_string ? {} : rule[1] || {},\n        };\n\n        rule_object.validator = rule_object.name === 'custom' ? rule[1].func : getPreBuildDVRs()[rule_object.name].func;\n\n        return rule_object;\n    }\n}\n\nexport default Validator;\n","import Validator from './validator';\n\nexport default Validator;\n","import { action, intercept, observable, reaction, toJS, when, makeObservable } from 'mobx';\nimport { isProduction, isEmptyObject } from '@deriv/shared';\n\nimport Validator from 'Utils/Validator';\n\n/**\n * BaseStore class is the base class for all defined stores in the application. It handles some stuff such as:\n *  1. Creating snapshot object from the store.\n *  2. Saving the store's snapshot in local/session storage and keeping them in sync.\n */\nexport default class BaseStore {\n    /**\n     * An enum object to define LOCAL_STORAGE and SESSION_STORAGE\n     */\n    static STORAGES = Object.freeze({\n        LOCAL_STORAGE: Symbol('LOCAL_STORAGE'),\n        SESSION_STORAGE: Symbol('SESSION_STORAGE'),\n    });\n\n    validation_errors = {};\n\n    validation_rules = {};\n\n    preSwitchAccountDisposer = null;\n    pre_switch_account_listener = null;\n\n    switchAccountDisposer = null;\n    switch_account_listener = null;\n\n    logoutDisposer = null;\n    logout_listener = null;\n\n    clientInitDisposer = null;\n    client_init_listener = null;\n\n    networkStatusChangeDisposer = null;\n    network_status_change_listener = null;\n\n    themeChangeDisposer = null;\n    theme_change_listener = null;\n\n    realAccountSignupEndedDisposer = null;\n    real_account_signup_ended_listener = null;\n\n    partial_fetch_time = 0;\n\n    /**\n     * Constructor of the base class that gets properties' name of child which should be saved in storages\n     *\n     * @param {Object} options - An object that contains the following properties:\n     *     @property {Object}   root_store - An object that contains the root store of the app.\n     *     @property {String[]} local_storage_properties - A list of properties' names that should be kept in localStorage.\n     *     @property {String[]} session_storage_properties - A list of properties' names that should be kept in sessionStorage.\n     *     @property {Object}   validation_rules - An object that contains the validation rules for each property of the store.\n     *     @property {String}   store_name - Explicit store name for browser application storage (to bypass minification)\n     */\n    constructor(options = {}) {\n        makeObservable(this, {\n            validation_errors: observable,\n            validation_rules: observable,\n            partial_fetch_time: observable,\n            retrieveFromStorage: action,\n            setValidationErrorMessages: action,\n            setValidationRules: action,\n            addRule: action,\n            validateProperty: action,\n            validateAllProperties: action,\n            onSwitchAccount: action.bound,\n            onPreSwitchAccount: action.bound,\n            onLogout: action.bound,\n            onClientInit: action.bound,\n            onNetworkStatusChange: action.bound,\n            onThemeChange: action.bound,\n            onRealAccountSignupEnd: action.bound,\n            disposePreSwitchAccount: action.bound,\n            disposeSwitchAccount: action.bound,\n            disposeLogout: action.bound,\n            disposeClientInit: action.bound,\n            disposeNetworkStatusChange: action.bound,\n            disposeThemeChange: action.bound,\n            disposeRealAccountSignupEnd: action.bound,\n            onUnmount: action.bound,\n            assertHasValidCache: action.bound,\n        });\n\n        const { root_store, local_storage_properties, session_storage_properties, validation_rules, store_name } =\n            options;\n\n        Object.defineProperty(this, 'root_store', {\n            enumerable: false,\n            writable: true,\n        });\n        Object.defineProperty(this, 'local_storage_properties', {\n            enumerable: false,\n            writable: true,\n        });\n        Object.defineProperty(this, 'session_storage_properties', {\n            enumerable: false,\n            writable: true,\n        });\n\n        const has_local_or_session_storage =\n            (local_storage_properties && local_storage_properties.length) ||\n            (session_storage_properties && session_storage_properties.length);\n\n        if (has_local_or_session_storage) {\n            if (!store_name) {\n                throw new Error('store_name is required for local/session storage');\n            }\n\n            Object.defineProperty(this, 'store_name', {\n                value: store_name,\n                enumerable: false,\n                writable: false,\n            });\n        }\n\n        this.root_store = root_store;\n        this.local_storage_properties = local_storage_properties || [];\n        this.session_storage_properties = session_storage_properties || [];\n\n        setTimeout(() => {\n            this.setValidationRules(validation_rules);\n\n            this.setupReactionForLocalStorage();\n            this.setupReactionForSessionStorage();\n            this.retrieveFromStorage();\n        }, 0);\n    }\n\n    /**\n     * Returns an snapshot of the current store\n     *\n     * @param {String[]} properties - A list of properties' names that should be in the snapshot.\n     *\n     * @return {Object} Returns a cloned object of the store.\n     */\n    getSnapshot(properties) {\n        let snapshot = toJS(this);\n\n        if (!isEmptyObject(this.root_store)) {\n            snapshot.root_store = this.root_store;\n        }\n\n        if (properties && properties.length) {\n            snapshot = properties.reduce((result, p) => Object.assign(result, { [p]: snapshot[p] }), {});\n        }\n\n        return snapshot;\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `local_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForLocalStorage() {\n        if (this.local_storage_properties.length) {\n            reaction(\n                () => this.local_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.local_storage_properties, BaseStore.STORAGES.LOCAL_STORAGE)\n            );\n        }\n    }\n\n    /**\n     * Sets up a reaction on properties which are mentioned in `session_storage_properties`\n     *  and invokes `saveToStorage` when there are any changes on them.\n     *\n     */\n    setupReactionForSessionStorage() {\n        if (this.session_storage_properties.length) {\n            reaction(\n                () => this.session_storage_properties.map(i => this[i]),\n                () => this.saveToStorage(this.session_storage_properties, BaseStore.STORAGES.SESSION_STORAGE)\n            );\n        }\n    }\n\n    /**\n     * Removes properties that are not passed from the snapshot of the store and saves it to the passed storage\n     *\n     * @param {String[]} properties - A list of the store's properties' names which should be saved in the storage.\n     * @param {Symbol}   storage    - A symbol object that defines the storage which the snapshot should be stored in it.\n     *\n     */\n    saveToStorage(properties, storage) {\n        const snapshot = JSON.stringify(this.getSnapshot(properties), (key, value) => {\n            if (value !== null) return value;\n            return undefined;\n        });\n\n        if (storage === BaseStore.STORAGES.LOCAL_STORAGE) {\n            localStorage.setItem(this.store_name, snapshot);\n        } else if (storage === BaseStore.STORAGES.SESSION_STORAGE) {\n            sessionStorage.setItem(this.store_name, snapshot);\n        }\n    }\n\n    /**\n     * Retrieves saved snapshot of the store and assigns to the current instance.\n     *\n     */\n    retrieveFromStorage() {\n        const local_storage_snapshot = JSON.parse(localStorage.getItem(this.store_name, {}));\n        const session_storage_snapshot = JSON.parse(sessionStorage.getItem(this.store_name, {}));\n\n        const snapshot = { ...local_storage_snapshot, ...session_storage_snapshot };\n\n        Object.keys(snapshot).forEach(k => (this[k] = snapshot[k]));\n    }\n\n    /**\n     * Sets validation error messages for an observable property of the store\n     *\n     * @param {String} propertyName - The observable property's name\n     * @param [{String}] messages - An array of strings that contains validation error messages for the particular property.\n     *\n     */\n    setValidationErrorMessages(propertyName, messages) {\n        const is_different = () =>\n            !!this.validation_errors[propertyName]\n                .filter(x => !messages.includes(x))\n                .concat(messages.filter(x => !this.validation_errors[propertyName].includes(x))).length;\n        if (!this.validation_errors[propertyName] || is_different()) {\n            this.validation_errors[propertyName] = messages;\n        }\n    }\n\n    /**\n     * Sets validation rules\n     *\n     * @param {object} rules\n     *\n     */\n    setValidationRules(rules = {}) {\n        Object.keys(rules).forEach(key => {\n            this.addRule(key, rules[key]);\n        });\n    }\n\n    /**\n     * Adds rules to the particular property\n     *\n     * @param {String} property\n     * @param {String} rules\n     *\n     */\n    addRule(property, rules) {\n        this.validation_rules[property] = rules;\n\n        intercept(this, property, change => {\n            this.validateProperty(property, change.newValue);\n            return change;\n        });\n    }\n\n    /**\n     * Validates a particular property of the store\n     *\n     * @param {String} property - The name of the property in the store\n     * @param {object} value    - The value of the property, it can be undefined.\n     *\n     */\n    validateProperty(property, value) {\n        const trigger = this.validation_rules[property].trigger;\n        const inputs = { [property]: value !== undefined ? value : this[property] };\n        const validation_rules = { [property]: this.validation_rules[property].rules || [] };\n\n        if (!!trigger && Object.hasOwnProperty.call(this, trigger)) {\n            inputs[trigger] = this[trigger];\n            validation_rules[trigger] = this.validation_rules[trigger].rules || [];\n        }\n\n        const validator = new Validator(inputs, validation_rules, this);\n\n        validator.isPassed();\n\n        Object.keys(inputs).forEach(key => {\n            this.setValidationErrorMessages(key, validator.errors.get(key));\n        });\n    }\n\n    /**\n     * Validates all properties which validation rule has been set for.\n     *\n     */\n    validateAllProperties() {\n        const validation_rules = Object.keys(this.validation_rules);\n        const validation_errors = Object.keys(this.validation_errors);\n        validation_rules.forEach(p => {\n            this.validateProperty(p, this[p]);\n        });\n\n        // Remove keys that are present in error, but not in rules:\n        validation_errors.forEach(error => {\n            if (!validation_rules.includes(error)) {\n                delete this.validation_errors[error];\n            }\n        });\n    }\n\n    onSwitchAccount(listener) {\n        if (listener) {\n            this.switch_account_listener = listener;\n\n            this.switchAccountDisposer = when(\n                () => this.root_store.client.switch_broadcast,\n                () => {\n                    try {\n                        const result = this.switch_account_listener();\n                        if (result && result.then && typeof result.then === 'function') {\n                            result.then(() => {\n                                this.root_store.client.switchEndSignal();\n                                this.onSwitchAccount(this.switch_account_listener);\n                            });\n                        } else {\n                            throw new Error('Switching account listeners are required to return a promise.');\n                        }\n                    } catch (error) {\n                        // there is no listener currently active. so we can just ignore the error raised from treating\n                        // a null object as a function. Although, in development mode, we throw a console error.\n                        if (!isProduction()) {\n                            console.error(error); // eslint-disable-line\n                        }\n                    }\n                }\n            );\n        }\n    }\n\n    onPreSwitchAccount(listener) {\n        if (listener) {\n            this.pre_switch_account_listener = listener;\n            this.preSwitchAccountDisposer = when(\n                () => this.root_store.client.pre_switch_broadcast,\n                () => {\n                    try {\n                        const result = this.pre_switch_account_listener?.();\n                        if (result && result.then && typeof result.then === 'function') {\n                            result.then(() => {\n                                this.root_store.client.setPreSwitchAccount(false);\n                                this.onPreSwitchAccount(this.pre_switch_account_listener);\n                            });\n                        } else {\n                            throw new Error('Pre-switch account listeners are required to return a promise.');\n                        }\n                    } catch (error) {\n                        // there is no listener currently active. so we can just ignore the error raised from treating\n                        // a null object as a function. Although, in development mode, we throw a console error.\n                        if (!isProduction()) {\n                            console.error(error); // eslint-disable-line\n                        }\n                    }\n                }\n            );\n        }\n    }\n\n    onLogout(listener) {\n        this.logoutDisposer = when(\n            () => this.root_store.client.has_logged_out,\n            async () => {\n                try {\n                    const result = this.logout_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.setLogout(false);\n                            this.onLogout(this.logout_listener);\n                        });\n                    } else {\n                        throw new Error('Logout listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n        this.logout_listener = listener;\n    }\n\n    onClientInit(listener) {\n        this.clientInitDisposer = when(\n            () => this.root_store.client.initialized_broadcast,\n            async () => {\n                try {\n                    const result = this.client_init_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.client.setInitialized(false);\n                            this.onClientInit(this.client_init_listener);\n                        });\n                    } else {\n                        throw new Error('Client init listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n        this.client_init_listener = listener;\n    }\n\n    onNetworkStatusChange(listener) {\n        this.networkStatusChangeDisposer = reaction(\n            () => this.root_store.common.is_network_online,\n            is_online => {\n                try {\n                    this.network_status_change_listener(is_online);\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n\n        this.network_status_change_listener = listener;\n    }\n\n    onThemeChange(listener) {\n        this.themeChangeDisposer = reaction(\n            () => this.root_store.ui.is_dark_mode_on,\n            is_dark_mode_on => {\n                try {\n                    this.theme_change_listener(is_dark_mode_on);\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n\n        this.theme_change_listener = listener;\n    }\n\n    onRealAccountSignupEnd(listener) {\n        this.realAccountSignupEndedDisposer = when(\n            () => this.root_store.ui.has_real_account_signup_ended,\n            () => {\n                try {\n                    const result = this.real_account_signup_ended_listener();\n                    if (result && result.then && typeof result.then === 'function') {\n                        result.then(() => {\n                            this.root_store.ui.setRealAccountSignupEnd(false);\n                            this.onRealAccountSignupEnd(this.real_account_signup_ended_listener);\n                        });\n                    } else {\n                        throw new Error('Real account signup listeners are required to return a promise.');\n                    }\n                } catch (error) {\n                    // there is no listener currently active. so we can just ignore the error raised from treating\n                    // a null object as a function. Although, in development mode, we throw a console error.\n                    if (!isProduction()) {\n                        console.error(error); // eslint-disable-line\n                    }\n                }\n            }\n        );\n\n        this.real_account_signup_ended_listener = listener;\n    }\n\n    disposePreSwitchAccount() {\n        if (typeof this.preSwitchAccountDisposer === 'function') {\n            this.preSwitchAccountDisposer();\n        }\n        this.pre_switch_account_listener = null;\n    }\n\n    disposeSwitchAccount() {\n        if (typeof this.switchAccountDisposer === 'function') {\n            this.switchAccountDisposer();\n        }\n        this.switch_account_listener = null;\n    }\n\n    disposeLogout() {\n        if (typeof this.logoutDisposer === 'function') {\n            this.logoutDisposer();\n        }\n        this.logout_listener = null;\n    }\n\n    disposeClientInit() {\n        if (typeof this.clientInitDisposer === 'function') {\n            this.clientInitDisposer();\n        }\n        this.client_init_listener = null;\n    }\n\n    disposeNetworkStatusChange() {\n        if (typeof this.networkStatusChangeDisposer === 'function') {\n            this.networkStatusChangeDisposer();\n        }\n        this.network_status_change_listener = null;\n    }\n\n    disposeThemeChange() {\n        if (typeof this.themeChangeDisposer === 'function') {\n            this.themeChangeDisposer();\n        }\n        this.theme_change_listener = null;\n    }\n\n    disposeRealAccountSignupEnd() {\n        if (typeof this.realAccountSignupEndedDisposer === 'function') {\n            this.realAccountSignupEndedDisposer();\n        }\n        this.real_account_signup_ended_listener = null;\n    }\n\n    onUnmount() {\n        this.disposePreSwitchAccount();\n        this.disposeSwitchAccount();\n        this.disposeLogout();\n        this.disposeClientInit();\n        this.disposeNetworkStatusChange();\n        this.disposeThemeChange();\n        this.disposeRealAccountSignupEnd();\n    }\n\n    assertHasValidCache(loginid, ...reactions) {\n        // account was changed when this was unmounted.\n        if (this.root_store.client.loginid !== loginid) {\n            reactions.forEach(act => act());\n            this.partial_fetch_time = false;\n        }\n    }\n}\n","import { toJS } from 'mobx';\nimport { isEmptyObject } from '@deriv/shared';\nimport { CONTRACT_SHADES } from '../Constants/barriers';\n\nexport const isBarrierSupported = contract_type => contract_type in CONTRACT_SHADES;\n\nexport const barriersToString = (is_relative, ...barriers_list) =>\n    barriers_list\n        .filter(barrier => barrier !== undefined && barrier !== null)\n        .map(barrier => `${is_relative && !/^[+-]/.test(barrier) ? '+' : ''}${barrier}`);\n\nexport const barriersObjectToArray = (barriers, reference_array) => {\n    Object.keys(barriers).forEach(barrier => {\n        const js_object = toJS(barriers[barrier]);\n        if (!isEmptyObject(js_object)) {\n            reference_array.push(js_object);\n        }\n    });\n\n    return reference_array;\n};\n\nexport const removeBarrier = (barriers, key) => {\n    const index = barriers.findIndex(b => b.key === key);\n    if (index > -1) {\n        barriers.splice(index, 1);\n    }\n};\n","import { action, computed, observable, makeObservable } from 'mobx';\nimport { BARRIER_COLORS, BARRIER_LINE_STYLES, CONTRACT_SHADES, DEFAULT_SHADES } from './Constants/barriers';\nimport { barriersToString } from './Helpers/barriers';\n\nexport class ChartBarrierStore {\n    color;\n    lineStyle;\n    shade;\n    shadeColor;\n\n    high;\n    low;\n\n    relative;\n    draggable;\n\n    hidePriceLines;\n    hideBarrierLine;\n    hideOffscreenLine;\n    title;\n\n    onChartBarrierChange;\n\n    constructor(high_barrier, low_barrier, onChartBarrierChange = null, { color, line_style, not_draggable } = {}) {\n        makeObservable(this, {\n            color: observable,\n            lineStyle: observable,\n            shade: observable,\n            shadeColor: observable,\n            high: observable,\n            low: observable,\n            relative: observable,\n            draggable: observable,\n            hidePriceLines: observable,\n            hideBarrierLine: observable,\n            hideOffscreenLine: observable,\n            title: observable,\n            updateBarriers: action.bound,\n            updateBarrierShade: action.bound,\n            onBarrierChange: action.bound,\n            updateBarrierColor: action.bound,\n            barrier_count: computed,\n            default_shade: computed,\n        });\n\n        this.color = color;\n        this.lineStyle = line_style || BARRIER_LINE_STYLES.SOLID;\n        this.onChange = this.onBarrierChange;\n\n        // trade_store's action to process new barriers on dragged\n        this.onChartBarrierChange =\n            typeof onChartBarrierChange === 'function' ? onChartBarrierChange.bind(this) : () => {};\n\n        this.high = high_barrier || 0; // 0 to follow the price\n        if (low_barrier) {\n            this.low = low_barrier;\n        }\n\n        this.shade = this.default_shade;\n\n        const has_barrier = !!high_barrier;\n        this.relative = !has_barrier || /^[+-]/.test(high_barrier);\n        this.draggable = !not_draggable && has_barrier;\n        this.hidePriceLines = !has_barrier;\n    }\n\n    updateBarriers(high, low, isFromChart = false) {\n        if (!isFromChart) {\n            this.relative = /^[+-]/.test(high);\n        }\n        this.high = high || undefined;\n        this.low = low || undefined;\n    }\n\n    updateBarrierShade(should_display, contract_type) {\n        this.shade = (should_display && CONTRACT_SHADES[contract_type]) || this.default_shade;\n    }\n\n    onBarrierChange({ high, low }) {\n        this.updateBarriers(high, low, true);\n        this.onChartBarrierChange(...barriersToString(this.relative, high, low));\n    }\n\n    updateBarrierColor(is_dark_mode) {\n        this.color = is_dark_mode ? BARRIER_COLORS.DARK_GRAY : BARRIER_COLORS.GRAY;\n    }\n\n    get barrier_count() {\n        return (typeof this.high !== 'undefined') + (typeof this.low !== 'undefined');\n    }\n\n    get default_shade() {\n        return DEFAULT_SHADES[this.barrier_count];\n    }\n}\n","import { isMultiplierContract } from '@deriv/shared';\nimport { BARRIER_COLORS, BARRIER_LINE_STYLES } from '../../SmartChart/Constants/barriers';\nimport { ChartBarrierStore } from '../../SmartChart/chart-barrier-store';\nimport { removeBarrier } from '../../SmartChart/Helpers/barriers';\n\nconst isLimitOrderBarrierSupported = (contract_type, contract_info) =>\n    isMultiplierContract(contract_type) && contract_info.limit_order;\n\nexport const LIMIT_ORDER_TYPES = {\n    STOP_OUT: 'stop_out',\n    TAKE_PROFIT: 'take_profit',\n    STOP_LOSS: 'stop_loss',\n};\n\nexport const setLimitOrderBarriers = ({ barriers, contract_type, contract_info = {}, is_over }) => {\n    if (is_over && isLimitOrderBarrierSupported(contract_type, contract_info)) {\n        const limit_orders = Object.values(LIMIT_ORDER_TYPES);\n        const has_stop_loss = Object.keys(contract_info.limit_order).some(\n            k => k === LIMIT_ORDER_TYPES.STOP_LOSS && contract_info.limit_order[k].value\n        );\n\n        limit_orders.forEach(key => {\n            const obj_limit_order = contract_info.limit_order[key];\n\n            if (!obj_limit_order || !obj_limit_order.value) {\n                removeBarrier(barriers, key);\n                return;\n            }\n\n            let barrier = barriers.find(b => b.key === key);\n\n            if (barrier) {\n                if (barrier.high === +obj_limit_order.value) {\n                    return;\n                }\n\n                barrier.onChange({\n                    high: obj_limit_order.value,\n                });\n            } else {\n                const obj_barrier = {\n                    key,\n                    title: `${obj_limit_order.display_name}`,\n                    color: key === LIMIT_ORDER_TYPES.TAKE_PROFIT ? BARRIER_COLORS.GREEN : BARRIER_COLORS.ORANGE,\n                    draggable: false,\n                    lineStyle:\n                        key === LIMIT_ORDER_TYPES.STOP_OUT ? BARRIER_LINE_STYLES.DOTTED : BARRIER_LINE_STYLES.SOLID,\n                    hidePriceLines: has_stop_loss && key === LIMIT_ORDER_TYPES.STOP_OUT,\n                    hideOffscreenLine: true,\n                    showOffscreenArrows: true,\n                    isSingleBarrier: true,\n                    opacityOnOverlap: key === LIMIT_ORDER_TYPES.STOP_OUT && 0.15,\n                };\n                barrier = new ChartBarrierStore(obj_limit_order.value);\n\n                Object.assign(barrier, obj_barrier);\n                barriers.push(barrier);\n            }\n        });\n    } else {\n        const limit_orders = Object.values(LIMIT_ORDER_TYPES);\n        limit_orders.forEach(l => removeBarrier(barriers, l));\n    }\n};\n\n/**\n * Get limit_order for contract_update API\n * @param {object} contract_update - contract_update input & checkbox values\n */\nexport const getLimitOrder = contract_update => {\n    const {\n        has_contract_update_stop_loss,\n        has_contract_update_take_profit,\n        contract_update_stop_loss,\n        contract_update_take_profit,\n        contract_info,\n    } = contract_update;\n\n    const limit_order = {};\n\n    const new_take_profit = has_contract_update_take_profit ? +contract_update_take_profit : null;\n    const has_take_profit_changed =\n        Math.abs(contract_info.limit_order?.take_profit?.order_amount) !== Math.abs(new_take_profit);\n\n    if (has_take_profit_changed) {\n        // send positive take_profit to update or null cancel\n        limit_order.take_profit = new_take_profit;\n    }\n\n    const new_stop_loss = has_contract_update_stop_loss ? +contract_update_stop_loss : null;\n    const has_stop_loss_changed =\n        Math.abs(contract_info.limit_order?.stop_loss?.order_amount) !== Math.abs(new_stop_loss);\n\n    if (has_stop_loss_changed) {\n        // send positive stop_loss to update or null to cancel\n        limit_order.stop_loss = new_stop_loss;\n    }\n\n    return limit_order;\n};\n","import * as Symbol from './Actions/symbol';\n\nimport {\n    WS,\n    cloneObject,\n    convertDurationLimit,\n    extractInfoFromShortcode,\n    findFirstOpenMarket,\n    getBarrierPipSize,\n    getMinPayout,\n    getPlatformSettings,\n    getPropertyValue,\n    isBarrierSupported,\n    isCryptocurrency,\n    isDesktop,\n    isEmptyObject,\n    isMarketClosed,\n    isMobile,\n    pickDefaultSymbol,\n    removeBarrier,\n    resetEndTimeOnVolatilityIndices,\n    showDigitalOptionsUnavailableError,\n    showMxMltUnavailableError,\n    showUnavailableLocationError,\n    formatMoney,\n    getCurrencyDisplayCode,\n    unsupported_contract_types_list,\n} from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { getValidationRules, getMultiplierValidationRules } from 'Stores/Modules/Trading/Constants/validation-rules';\nimport { ContractType } from 'Stores/Modules/Trading/Helpers/contract-type';\nimport { isDigitContractType, isDigitTradeType } from 'Modules/Trading/Helpers/digits';\nimport ServerTime from '_common/base/server_time';\nimport { processPurchase } from './Actions/purchase';\nimport { getAvailableContractTypes } from 'Modules/Trading/Helpers/contract-type';\nimport { getUpdatedTicksHistoryStats } from './Helpers/accumulator';\nimport { processTradeParams } from './Helpers/process';\nimport { action, computed, makeObservable, observable, override, reaction, runInAction, toJS, when } from 'mobx';\nimport { createProposalRequests, getProposalErrorField, getProposalInfo } from './Helpers/proposal';\nimport { BARRIER_COLORS } from '../SmartChart/Constants/barriers';\nimport BaseStore from '../../base-store';\nimport { ChartBarrierStore } from '../SmartChart/chart-barrier-store';\nimport debounce from 'lodash.debounce';\nimport { setLimitOrderBarriers } from './Helpers/limit-orders';\n\nconst store_name = 'trade_store';\nconst g_subscribers_map = {}; // blame amin.m\n\nexport default class TradeStore extends BaseStore {\n    // Control values\n    is_trade_component_mounted = false;\n    is_purchase_enabled = false;\n    is_trade_enabled = false;\n    is_equal = 0;\n    has_equals_only = false;\n\n    // Underlying\n    symbol;\n    is_market_closed = false;\n    previous_symbol = '';\n    active_symbols = [];\n\n    form_components = [];\n\n    // Contract Type\n    contract_expiry_type = '';\n    contract_start_type = '';\n    contract_type = '';\n    contract_types_list = {};\n    trade_types = {};\n\n    // Amount\n    amount = 10;\n    basis = '';\n    basis_list = [];\n    currency = '';\n    stake_boundary = { VANILLALONGCALL: {}, VANILLALONGPUT: {} };\n\n    // Duration\n    duration = 5;\n    duration_unit = '';\n    duration_units_list = [];\n    duration_min_max = {};\n    expiry_date = '';\n    expiry_time = '';\n    expiry_type = 'duration';\n\n    // Barrier\n    barrier_1 = '';\n    barrier_2 = '';\n    barrier_count = 0;\n    main_barrier = null;\n    barriers = [];\n    strike_price_choices = [];\n\n    // Start Time\n    start_date = Number(0); // Number(0) refers to 'now'\n    start_dates_list = [];\n    start_time = null;\n    sessions = [];\n\n    market_open_times = [];\n    // End Date Time\n    /**\n     * An array that contains market closing time.\n     *\n     * e.g. [\"04:00:00\", \"08:00:00\"]\n     *\n     */\n    market_close_times = [];\n\n    // Last Digit\n    last_digit = 5;\n    is_mobile_digit_view_selected = false;\n\n    // Purchase\n    proposal_info = {};\n    purchase_info = {};\n\n    // Chart loader observables\n    is_chart_loading;\n    should_show_active_symbols_loading = false;\n\n    // Accumulator trade params\n    accumulator_range_list = [];\n    growth_rate = 0.03;\n    maximum_payout = 0;\n    maximum_ticks = 0;\n    ticks_history_stats = {};\n    tick_size_barrier = 0;\n\n    // Multiplier trade params\n    multiplier;\n    multiplier_range_list = [];\n    stop_loss;\n    take_profit;\n    has_stop_loss = false;\n    has_take_profit = false;\n    has_cancellation = false;\n    commission;\n    cancellation_price;\n    stop_out;\n    expiration;\n    hovered_contract_type;\n    cancellation_duration = '60m';\n    cancellation_range_list = [];\n\n    // Vanilla trade params\n    vanilla_trade_type = 'VANILLALONGCALL';\n\n    // Mobile\n    is_trade_params_expanded = true;\n\n    //Toastbox\n    contract_purchase_toast_box;\n\n    addTickByProposal = () => null;\n    debouncedProposal = debounce(this.requestProposal, 500);\n    proposal_requests = {};\n    is_purchasing_contract = false;\n\n    initial_barriers;\n    is_initial_barrier_applied = false;\n\n    should_skip_prepost_lifecycle = false;\n\n    constructor({ root_store }) {\n        const local_storage_properties = [\n            'amount',\n            'currency',\n            'barrier_1',\n            'barrier_2',\n            'basis',\n            'contract_start_type',\n            'contract_type',\n            'duration',\n            'duration_unit',\n            'expiry_date',\n            'expiry_type',\n            'growth_rate',\n            'has_take_profit',\n            'has_stop_loss',\n            'has_cancellation',\n            'is_equal',\n            'last_digit',\n            'multiplier',\n            'start_date',\n            'start_time',\n            'symbol',\n            'stop_loss',\n            'take_profit',\n            'is_trade_params_expanded',\n        ];\n        super({\n            root_store,\n            local_storage_properties,\n            store_name,\n            validation_rules: getValidationRules(),\n        });\n\n        makeObservable(this, {\n            accumulator_range_list: observable,\n            active_symbols: observable,\n            amount: observable,\n            barrier_1: observable,\n            barrier_2: observable,\n            barrier_count: observable,\n            barriers: observable,\n            basis_list: observable,\n            basis: observable,\n            cancellation_duration: observable,\n            cancellation_price: observable,\n            cancellation_range_list: observable,\n            commission: observable,\n            contract_expiry_type: observable,\n            contract_start_type: observable,\n            contract_type: observable,\n            contract_types_list: observable,\n            currency: observable,\n            duration_min_max: observable,\n            duration_unit: observable,\n            duration_units_list: observable,\n            duration: observable,\n            expiration: observable,\n            expiry_date: observable,\n            expiry_time: observable,\n            expiry_type: observable,\n            form_components: observable,\n            growth_rate: observable,\n            has_cancellation: observable,\n            has_equals_only: observable,\n            has_stop_loss: observable,\n            has_take_profit: observable,\n            hovered_contract_type: observable,\n            is_accumulator: computed,\n            is_chart_loading: observable,\n            is_equal: observable,\n            is_market_closed: observable,\n            is_mobile_digit_view_selected: observable,\n            is_purchase_enabled: observable,\n            is_trade_component_mounted: observable,\n            is_trade_enabled: observable,\n            is_trade_params_expanded: observable,\n            last_digit: observable,\n            main_barrier: observable,\n            market_close_times: observable,\n            market_open_times: observable,\n            maximum_payout: observable,\n            maximum_ticks: observable,\n            multiplier_range_list: observable,\n            multiplier: observable,\n            previous_symbol: observable,\n            proposal_info: observable.ref,\n            purchase_info: observable.ref,\n            sessions: observable,\n            setDefaultGrowthRate: action.bound,\n            should_show_active_symbols_loading: observable,\n            should_skip_prepost_lifecycle: observable,\n            stake_boundary: observable,\n            start_date: observable,\n            start_dates_list: observable,\n            start_time: observable,\n            stop_loss: observable,\n            stop_out: observable,\n            strike_price_choices: observable,\n            symbol: observable,\n            take_profit: observable,\n            ticks_history_stats: observable,\n            tick_size_barrier: observable,\n            trade_types: observable,\n            accountSwitcherListener: action.bound,\n            barrier_pipsize: computed,\n            barriers_flattened: computed,\n            changeDurationValidationRules: action.bound,\n            chartStateChange: action.bound,\n            clearContracts: action.bound,\n            clearLimitOrderBarriers: action.bound,\n            clearPurchaseInfo: action.bound,\n            clientInitListener: action.bound,\n            enablePurchase: action.bound,\n            exportLayout: action.bound,\n            forgetAllProposal: action.bound,\n            getFirstOpenMarket: action.bound,\n            has_alternative_source: computed,\n            initAccountCurrency: action.bound,\n            is_multiplier: computed,\n            is_symbol_in_active_symbols: computed,\n            is_synthetics_available: computed,\n            is_vanilla: computed,\n            loadActiveSymbols: action.bound,\n            logoutListener: action.bound,\n            main_barrier_flattened: computed,\n            manageMxMltRemovalNotification: action.bound,\n            networkStatusChangeListener: action.bound,\n            onAllowEqualsChange: action.bound,\n            onChange: action.bound,\n            onChangeMultiple: action.bound,\n            onChartBarrierChange: action.bound,\n            onHoverPurchase: action.bound,\n            onMount: action.bound,\n            onProposalResponse: action.bound,\n            onPurchase: action.bound,\n            onUnmount: override,\n            prepareTradeStore: action.bound,\n            preSwitchAccountListener: action.bound,\n            processPurchase: action.bound,\n            pushPurchaseDataToGtm: action.bound,\n            refresh: action.bound,\n            requestProposal: action.bound,\n            resetAccumulatorData: action.bound,\n            resetErrorServices: action.bound,\n            resetPreviousSymbol: action.bound,\n            setActiveSymbols: action.bound,\n            setAllowEqual: action.bound,\n            setChartStatus: action.bound,\n            setContractTypes: action.bound,\n            setDefaultSymbol: action.bound,\n            setIsTradeParamsExpanded: action.bound,\n            setMarketStatus: action.bound,\n            setMobileDigitView: action.bound,\n            setPreviousSymbol: action.bound,\n            setPurchaseSpotBarrier: action.bound,\n            setSkipPrePostLifecycle: action.bound,\n            setStakeBoundary: action.bound,\n            setStrikeChoices: action.bound,\n            setTradeStatus: action.bound,\n            show_digits_stats: computed,\n            themeChangeListener: action.bound,\n            updateBarrierColor: action.bound,\n            updateLimitOrderBarriers: action.bound,\n            updateStore: action.bound,\n            updateSymbol: action.bound,\n            contract_purchase_toast_box: observable,\n            clearContractPurchaseToastBox: action.bound,\n            setContractPurchaseToastbox: action.bound,\n        });\n\n        // Adds intercept to change min_max value of duration validation\n        reaction(\n            () => [this.contract_expiry_type, this.duration_min_max, this.duration_unit, this.expiry_type],\n            () => {\n                this.changeDurationValidationRules();\n            }\n        );\n        reaction(\n            () => this.is_equal,\n            () => {\n                this.onAllowEqualsChange();\n            }\n        );\n        reaction(\n            () => this.symbol,\n            () => {\n                const date = resetEndTimeOnVolatilityIndices(this.symbol, this.expiry_type);\n                if (date) {\n                    this.expiry_date = date;\n                }\n                this.setDefaultGrowthRate();\n                this.resetAccumulatorData();\n            }\n        );\n        reaction(\n            () => this.duration_unit,\n            () => {\n                this.contract_expiry_type = this.duration_unit === 't' ? 'tick' : 'intraday';\n            }\n        );\n        reaction(\n            () => [this.has_stop_loss, this.has_take_profit],\n            () => {\n                if (!this.has_stop_loss) {\n                    this.validation_errors.stop_loss = [];\n                }\n                if (!this.has_take_profit) {\n                    this.validation_errors.take_profit = [];\n                }\n            }\n        );\n        reaction(\n            () => [this.contract_type],\n            () => {\n                this.root_store.portfolio.setContractType(this.contract_type);\n                if (this.is_multiplier || this.is_accumulator) {\n                    // when switching back to Multiplier contract, re-apply Stop loss / Take profit validation rules\n                    Object.assign(this.validation_rules, getMultiplierValidationRules());\n                } else {\n                    // we need to remove these two validation rules on contract_type change\n                    // to be able to remove any existing Stop loss / Take profit validation errors\n                    delete this.validation_rules.stop_loss;\n                    delete this.validation_rules.take_profit;\n                }\n                this.resetAccumulatorData();\n            }\n        );\n        reaction(\n            () => this.root_store.common.current_language,\n            () => {\n                this.setValidationRules(getValidationRules());\n                this.changeDurationValidationRules();\n                if (!this.amount) {\n                    this.validateAllProperties();\n                }\n            }\n        );\n        when(\n            () => this.accumulator_range_list.length,\n            () => this.setDefaultGrowthRate()\n        );\n    }\n\n    get is_symbol_in_active_symbols() {\n        return this.active_symbols.some(\n            symbol_info => symbol_info.symbol === this.symbol && symbol_info.exchange_is_open === 1\n        );\n    }\n\n    resetAccumulatorData() {\n        if (!isEmptyObject(this.root_store.contract_trade.accumulator_barriers_data)) {\n            this.root_store.contract_trade.clearAccumulatorBarriersData();\n        }\n    }\n\n    setDefaultGrowthRate() {\n        if (\n            this.is_accumulator &&\n            !this.accumulator_range_list.includes(this.growth_rate) &&\n            this.accumulator_range_list.length\n        ) {\n            this.growth_rate = this.accumulator_range_list[0];\n        }\n    }\n\n    setSkipPrePostLifecycle(should_skip) {\n        if (!!should_skip !== !!this.should_skip_prepost_lifecycle) {\n            // to skip assignment if no change is made\n            this.should_skip_prepost_lifecycle = should_skip;\n        }\n    }\n\n    setTradeStatus(status) {\n        this.is_trade_enabled = status;\n    }\n\n    refresh() {\n        this.forgetAllProposal();\n        this.proposal_info = {};\n        this.purchase_info = {};\n        this.proposal_requests = {};\n    }\n\n    clearContracts = () => {\n        this.root_store.contract_trade.contracts = [];\n    };\n\n    async loadActiveSymbols(should_set_default_symbol = true, should_show_loading = true) {\n        this.should_show_active_symbols_loading = should_show_loading;\n\n        await this.setActiveSymbols();\n        await this.root_store.active_symbols.setActiveSymbols();\n        if (should_set_default_symbol) await this.setDefaultSymbol();\n\n        const r = await WS.storage.contractsFor(this.symbol);\n        if (['InvalidSymbol', 'InputValidationFailed'].includes(r.error?.code)) {\n            const symbol_to_update = await pickDefaultSymbol(this.active_symbols);\n            await this.processNewValuesAsync({ symbol: symbol_to_update });\n        }\n\n        runInAction(() => {\n            this.should_show_active_symbols_loading = false;\n        });\n    }\n\n    async setDefaultSymbol() {\n        if (!this.is_symbol_in_active_symbols) {\n            this.is_trade_enabled = false;\n\n            const symbol = await pickDefaultSymbol(this.active_symbols);\n            await this.processNewValuesAsync({ symbol });\n        }\n    }\n\n    async setActiveSymbols() {\n        const is_on_mf_account = this.root_store.client.landing_company_shortcode === 'maltainvest';\n        const hide_close_mx_mlt_storage_flag = !!parseInt(\n            localStorage.getItem('hide_close_mx_mlt_account_notification')\n        );\n        const is_logged_in = this.root_store.client.is_logged_in;\n        const clients_country = this.root_store.client.clients_country;\n        const showError = this.root_store.common.showError;\n        const setError = this.root_store.common.setError;\n\n        // To resolve infinite load for Belgium and Isle of man logout IPs\n        if (['be', 'im'].includes(clients_country) && !is_logged_in) {\n            showUnavailableLocationError(showError, is_logged_in);\n        }\n\n        const { active_symbols, error } = await WS.authorized.activeSymbols();\n\n        if (error) {\n            showError({ message: localize('Trading is unavailable at this time.') });\n            return;\n        }\n\n        if (!active_symbols || !active_symbols.length) {\n            await WS.wait('get_settings');\n            /*\n             * This logic is related to EU country checks\n             * Avoid moving this upward in the scope since mobx will lose reactivity\n             */\n            const can_have_mx_account = this.root_store.client.can_have_mx_account;\n            const can_have_mlt_account = this.root_store.client.can_have_mlt_account;\n            const can_have_mlt_or_mx_account = can_have_mlt_account || can_have_mx_account;\n\n            if (can_have_mlt_or_mx_account && is_logged_in && !hide_close_mx_mlt_storage_flag) {\n                setError(true, {\n                    type: 'mx_mlt_removal',\n                });\n            } else if (is_logged_in && hide_close_mx_mlt_storage_flag) {\n                showMxMltUnavailableError(showError, can_have_mlt_account, can_have_mx_account);\n            } else if (!is_on_mf_account) {\n                if (!hide_close_mx_mlt_storage_flag) {\n                    setError(true, {\n                        type: 'mx_mlt_removal',\n                    });\n                } else {\n                    showUnavailableLocationError(showError, is_logged_in);\n                }\n                return;\n            } else if (is_on_mf_account) {\n                showDigitalOptionsUnavailableError(showError, {\n                    text: localize(\n                        'We’re working to have this available for you soon. If you have another account, switch to that account to continue trading. You may add a Deriv MT5 Financial.'\n                    ),\n                    title: localize('{{platform_name_trader}} is not available for this account', {\n                        platform_name_trader: getPlatformSettings('trader').name,\n                    }),\n                    link: localize('Go to {{platform_name_mt5}} dashboard', {\n                        platform_name_mt5: getPlatformSettings('mt5').name,\n                    }),\n                });\n                return;\n            }\n        }\n        await this.processNewValuesAsync({ active_symbols });\n    }\n\n    async setContractTypes() {\n        if (this.symbol && this.is_symbol_in_active_symbols) {\n            await Symbol.onChangeSymbolAsync(this.symbol);\n            runInAction(() => {\n                const contract_categories = ContractType.getContractCategories();\n                this.processNewValuesAsync({\n                    ...contract_categories,\n                    ...ContractType.getContractType(contract_categories.contract_types_list, this.contract_type),\n                });\n                this.processNewValuesAsync(ContractType.getContractValues(this));\n            });\n        }\n        this.root_store.common.setSelectedContractType(this.contract_type);\n        this.root_store.portfolio.setContractType(this.contract_type);\n    }\n\n    async prepareTradeStore(should_set_default_symbol = true) {\n        this.initial_barriers = { barrier_1: this.barrier_1, barrier_2: this.barrier_2 };\n        await when(() => !this.root_store.client.is_populating_account_list);\n\n        // waits for `website_status` in order to set `stake_default` for the selected currency\n        await WS.wait('website_status');\n        await runInAction(async () => {\n            await this.processNewValuesAsync(\n                {\n                    // fallback to default currency if current logged-in client hasn't selected a currency yet\n                    currency: this.root_store.client.currency || this.root_store.client.default_currency,\n                },\n                true,\n                null,\n                false\n            );\n        });\n        await this.loadActiveSymbols(should_set_default_symbol);\n        await this.setContractTypes();\n        await this.processNewValuesAsync(\n            {\n                is_market_closed: isMarketClosed(this.active_symbols, this.symbol),\n            },\n            true,\n            null,\n            false\n        );\n    }\n\n    async onChangeMultiple(values) {\n        Object.keys(values).forEach(name => {\n            if (!(name in this)) {\n                throw new Error(`Invalid Argument: ${name}`);\n            }\n        });\n\n        await this.processNewValuesAsync({ ...values }, true); // wait for store to be updated\n        this.validateAllProperties(); // then run validation before sending proposal\n    }\n\n    async onChange(e) {\n        const { name, value } = e.target;\n        if (name === 'symbol' && value) {\n            // set trade params skeleton and chart loader to true until processNewValuesAsync resolves\n            this.setChartStatus(true);\n            // reset market close status\n            this.setMarketStatus(false);\n            this.is_trade_enabled = false;\n            // this.root_store.modules.contract_trade.contracts = [];\n            // TODO: Clear the contracts in contract-trade-store\n        } else if (name === 'currency') {\n            // Only allow the currency dropdown change if client is not logged in\n            if (!this.root_store.client.is_logged_in) {\n                this.root_store.client.selectCurrency(value);\n            }\n        } else if (name === 'expiry_date') {\n            this.expiry_time = null;\n        } else if (!(name in this)) {\n            throw new Error(`Invalid Argument: ${name}`);\n        }\n\n        await this.processNewValuesAsync(\n            { [name]: value },\n            true,\n            name === 'contract_type' ? { contract_type: this.contract_type } : {}, // refer to [Multiplier validation rules] below\n            true\n        ); // wait for store to be updated\n        this.validateAllProperties(); // then run validation before sending proposal\n        this.root_store.common.setSelectedContractType(this.contract_type);\n    }\n\n    setPreviousSymbol(symbol) {\n        if (this.previous_symbol !== symbol) this.previous_symbol = symbol;\n    }\n\n    setAllowEqual(is_equal) {\n        this.is_equal = is_equal;\n    }\n\n    setIsTradeParamsExpanded(value) {\n        this.is_trade_params_expanded = value;\n    }\n\n    async resetPreviousSymbol() {\n        this.setMarketStatus(isMarketClosed(this.active_symbols, this.previous_symbol));\n\n        await Symbol.onChangeSymbolAsync(this.previous_symbol);\n        await this.updateSymbol(this.symbol);\n\n        this.setChartStatus(false);\n        runInAction(() => {\n            this.previous_symbol = ''; // reset the symbol to default\n        });\n    }\n\n    updateBarrierColor(is_dark_mode) {\n        if (this.main_barrier) {\n            this.main_barrier.updateBarrierColor(is_dark_mode);\n        }\n    }\n\n    onHoverPurchase(is_over, contract_type) {\n        if (this.is_accumulator) return;\n        if (this.is_purchase_enabled && this.main_barrier && !this.is_multiplier) {\n            this.main_barrier.updateBarrierShade(is_over, contract_type);\n        } else if (!is_over && this.main_barrier && !this.is_multiplier) {\n            this.main_barrier.updateBarrierShade(false, contract_type);\n        }\n\n        this.hovered_contract_type = is_over ? contract_type : null;\n        setLimitOrderBarriers({\n            barriers: this.root_store.portfolio.barriers,\n            is_over,\n            contract_type,\n            contract_info: this.proposal_info[contract_type],\n        });\n    }\n\n    setPurchaseSpotBarrier(is_over, position) {\n        const key = 'PURCHASE_SPOT_BARRIER';\n        if (!is_over) {\n            removeBarrier(this.root_store.portfolio.barriers, key);\n            return;\n        }\n\n        let purchase_spot_barrier = this.root_store.portfolio.barriers.find(b => b.key === key);\n        if (purchase_spot_barrier) {\n            if (purchase_spot_barrier.high !== +position.contract_info.entry_spot) {\n                purchase_spot_barrier.onChange({\n                    high: position.contract_info.entry_spot,\n                });\n            }\n        } else {\n            purchase_spot_barrier = new ChartBarrierStore(position.contract_info.entry_spot);\n            purchase_spot_barrier.key = key;\n            purchase_spot_barrier.draggable = false;\n            purchase_spot_barrier.hideOffscreenBarrier = true;\n            purchase_spot_barrier.isSingleBarrier = true;\n            purchase_spot_barrier.updateBarrierColor(this.root_store.ui.is_dark_mode_on);\n            this.barriers.push(purchase_spot_barrier);\n            this.root_store.portfolio.barriers.push(purchase_spot_barrier);\n        }\n    }\n\n    updateLimitOrderBarriers(is_over, position) {\n        const contract_info = position.contract_info;\n        const { barriers } = this;\n        setLimitOrderBarriers({\n            barriers,\n            contract_info,\n            contract_type: contract_info.contract_type,\n            is_over,\n        });\n    }\n\n    clearLimitOrderBarriers() {\n        this.hovered_contract_type = null;\n        const { barriers } = this;\n        setLimitOrderBarriers({\n            barriers,\n            is_over: false,\n        });\n    }\n\n    get barrier_pipsize() {\n        return getBarrierPipSize(this.barrier_1);\n    }\n\n    get main_barrier_flattened() {\n        const is_digit_trade_type = isDigitTradeType(this.contract_type);\n        return is_digit_trade_type ? null : toJS(this.main_barrier);\n    }\n\n    get barriers_flattened() {\n        return this.root_store.portfolio.barriers && toJS(this.root_store.portfolio.barriers);\n    }\n\n    setMainBarrier = proposal_info => {\n        if (!proposal_info) {\n            return;\n        }\n        const { contract_type, barrier, high_barrier, low_barrier } = proposal_info;\n\n        if (isBarrierSupported(contract_type)) {\n            const color = this.root_store.ui.is_dark_mode_on ? BARRIER_COLORS.DARK_GRAY : BARRIER_COLORS.GRAY;\n            // create barrier only when it's available in response\n            this.main_barrier = new ChartBarrierStore(barrier || high_barrier, low_barrier, this.onChartBarrierChange, {\n                color,\n                not_draggable: this.is_vanilla,\n            });\n            // this.main_barrier.updateBarrierShade(true, contract_type);\n        } else {\n            this.main_barrier = null;\n        }\n    };\n\n    onPurchase = debounce(this.processPurchase, 300);\n\n    processPurchase(proposal_id, price, type) {\n        if (!this.is_purchase_enabled) return;\n        if (proposal_id) {\n            this.is_purchase_enabled = false;\n            this.is_purchasing_contract = true;\n            const is_tick_contract = this.duration_unit === 't';\n            processPurchase(proposal_id, price).then(\n                action(response => {\n                    if (!this.is_trade_component_mounted) {\n                        this.enablePurchase();\n                        this.is_purchasing_contract = false;\n                        return;\n                    }\n\n                    const last_digit = +this.last_digit;\n                    if (response.error) {\n                        // using javascript to disable purchase-buttons manually to compensate for mobx lag\n                        this.disablePurchaseButtons();\n                        // invalidToken error will handle in socket-general.js\n                        if (response.error.code !== 'InvalidToken') {\n                            this.root_store.common.setServicesError({\n                                type: response.msg_type,\n                                ...response.error,\n                            });\n\n                            // Clear purchase info on mobile after toast box error disappears (mobile_toast_timeout = 3500)\n                            if (isMobile() && this.root_store.common?.services_error?.type === 'buy') {\n                                setTimeout(() => {\n                                    this.clearPurchaseInfo();\n                                    this.requestProposal();\n                                }, 3500);\n                            }\n                        }\n                    } else if (response.buy) {\n                        if (this.proposal_info[type] && this.proposal_info[type].id !== proposal_id) {\n                            throw new Error('Proposal ID does not match.');\n                        }\n                        const contract_data = {\n                            ...this.proposal_requests[type],\n                            ...this.proposal_info[type],\n                            buy_price: response.buy.buy_price,\n                        };\n                        const { contract_id, longcode, start_time } = response.buy;\n\n                        // toggle smartcharts to contract mode\n                        if (contract_id) {\n                            const shortcode = response.buy.shortcode;\n                            const { category, underlying } = extractInfoFromShortcode(shortcode);\n                            const is_digit_contract = isDigitContractType(category.toUpperCase());\n                            const contract_type = category.toUpperCase();\n                            this.root_store.contract_trade.addContract({\n                                contract_id,\n                                start_time,\n                                longcode,\n                                underlying,\n                                barrier: is_digit_contract ? last_digit : null,\n                                contract_type,\n                                is_tick_contract,\n                            });\n                            this.root_store.portfolio.onBuyResponse({\n                                contract_id,\n                                longcode,\n                                contract_type,\n                            });\n                            // NOTE: changing chart granularity and chart_type has to be done in a different render cycle\n                            // so we have to set chart granularity to zero, and change the chart_type to 'mountain' first,\n                            // and then set the chart view to the start_time\n                            // draw the start time line and show longcode then mount contract\n                            // this.root_store.modules.contract_trade.drawContractStartTime(start_time, longcode, contract_id);\n                            if (isDesktop()) {\n                                this.root_store.ui.openPositionsDrawer();\n                            } else if (isMobile()) {\n                                // TODO: Remove this when markers for multipliers are enabled\n                                if (this.is_multiplier || this.is_accumulator) {\n                                    this.root_store.ui.openPositionsDrawer();\n                                }\n                            }\n                            this.proposal_info = {};\n                            this.forgetAllProposal();\n                            this.purchase_info = response;\n                            this.proposal_requests = {};\n                            this.debouncedProposal();\n                            this.clearLimitOrderBarriers();\n                            this.pushPurchaseDataToGtm(contract_data);\n                            this.setContractPurchaseToastbox(response.buy);\n                            this.is_purchasing_contract = false;\n                            return;\n                        }\n                    }\n                    this.forgetAllProposal();\n                    this.purchase_info = response;\n                    this.enablePurchase();\n                    this.is_purchasing_contract = false;\n                })\n            );\n        }\n    }\n\n    enablePurchase() {\n        if (!this.root_store.client.is_unwelcome) {\n            this.is_purchase_enabled = true;\n        }\n    }\n\n    disablePurchaseButtons = () => {\n        const el_purchase_value = document.getElementsByClassName('trade-container__price-info');\n        const el_purchase_buttons = document.getElementsByClassName('btn-purchase');\n        [].forEach.bind(el_purchase_buttons, el => {\n            el.classList.add('btn-purchase--disabled');\n        })();\n        [].forEach.bind(el_purchase_value, el => {\n            el.classList.add('trade-container__price-info--fade');\n        })();\n    };\n\n    /**\n     * Updates the store with new values\n     * @param  {Object} new_state - new values to update the store with\n     * @return {Object} returns the object having only those values that are updated\n     */\n    updateStore(new_state) {\n        Object.keys(cloneObject(new_state) || {}).forEach(key => {\n            if (key === 'root_store' || ['validation_rules', 'validation_errors', 'currency'].indexOf(key) > -1) return;\n            if (JSON.stringify(this[key]) === JSON.stringify(new_state[key])) {\n                delete new_state[key];\n            } else {\n                if (key === 'symbol') {\n                    this.is_purchase_enabled = false;\n                    this.is_trade_enabled = false;\n                }\n\n                if (new_state.start_date && typeof new_state.start_date === 'string') {\n                    new_state.start_date = parseInt(new_state.start_date);\n                }\n\n                this[key] = new_state[key];\n\n                // validation is done in mobx intercept (base_store.js)\n                // when barrier_1 is set, it is compared with store.barrier_2 (which is not updated yet)\n                if (key === 'barrier_2' && new_state.barrier_1) {\n                    this.barrier_1 = new_state.barrier_1; // set it again, after barrier_2 is updated in store\n                }\n            }\n        });\n        return new_state;\n    }\n\n    async processNewValuesAsync(\n        obj_new_values = {},\n        is_changed_by_user = false,\n        obj_old_values = {},\n        should_forget_first = true\n    ) {\n        // To switch to rise_fall_equal contract type when allow equal is checked on first page refresh or\n        // when switch back to Rise/Fall from another contract type i.e.\n        if (obj_new_values.contract_type && obj_new_values.contract_type === 'rise_fall' && !!this.is_equal) {\n            obj_new_values.contract_type = 'rise_fall_equal';\n        }\n        // when accumulator is selected, we need to change chart type to mountain and granularity to 0\n        // and we need to restore previous chart type and granularity when accumulator is unselected\n        const {\n            prev_chart_type,\n            prev_granularity,\n            chart_type,\n            granularity,\n            savePreviousChartMode,\n            updateChartType,\n            updateGranularity,\n        } = this.root_store.contract_trade || {};\n        if (obj_new_values.contract_type === 'accumulator') {\n            savePreviousChartMode(chart_type, granularity);\n            updateGranularity(0);\n            updateChartType('mountain');\n        } else if (\n            (obj_new_values.contract_type || obj_new_values.symbol) &&\n            prev_chart_type &&\n            prev_granularity &&\n            (prev_chart_type !== chart_type || prev_granularity !== granularity)\n        ) {\n            updateGranularity(prev_granularity);\n            updateChartType(prev_chart_type);\n            savePreviousChartMode('', null);\n        }\n\n        if (/\\bduration\\b/.test(Object.keys(obj_new_values))) {\n            // TODO: fix this in input-field.jsx\n            if (typeof obj_new_values.duration === 'string') {\n                obj_new_values.duration = +obj_new_values.duration;\n            }\n        }\n        // Sets the default value to Amount when Currency has changed from Fiat to Crypto and vice versa.\n        // The source of default values is the website_status response.\n        if (should_forget_first) {\n            this.forgetAllProposal();\n            this.proposal_requests = {};\n        }\n        if (is_changed_by_user && /\\bcurrency\\b/.test(Object.keys(obj_new_values))) {\n            const prev_currency = obj_old_values?.currency || this.currency;\n            const has_currency_changed = obj_new_values.currency !== prev_currency;\n\n            const should_reset_stake =\n                isCryptocurrency(obj_new_values.currency) ||\n                // For switch between fiat and crypto and vice versa\n                isCryptocurrency(obj_new_values.currency) !== isCryptocurrency(prev_currency);\n\n            if (has_currency_changed && should_reset_stake) {\n                obj_new_values.amount = obj_new_values.amount || getMinPayout(obj_new_values.currency);\n            }\n            this.currency = obj_new_values.currency;\n        }\n\n        let has_only_forward_starting_contracts;\n\n        if (Object.keys(obj_new_values).includes('symbol')) {\n            this.setPreviousSymbol(this.symbol);\n            await Symbol.onChangeSymbolAsync(obj_new_values.symbol);\n            this.setMarketStatus(isMarketClosed(this.active_symbols, obj_new_values.symbol));\n            has_only_forward_starting_contracts =\n                ContractType.getContractCategories().has_only_forward_starting_contracts;\n        }\n        // TODO: remove all traces of setHasOnlyForwardingContracts and has_only_forward_starting_contracts in app\n        //  once future contracts are implemented\n        this.root_store.ui.setHasOnlyForwardingContracts(has_only_forward_starting_contracts);\n        if (has_only_forward_starting_contracts) return;\n\n        const new_state = this.updateStore(cloneObject(obj_new_values));\n\n        if (is_changed_by_user || /\\b(symbol|contract_types_list)\\b/.test(Object.keys(new_state))) {\n            this.updateStore({\n                // disable purchase button(s), clear contract info\n                is_purchase_enabled: false,\n                proposal_info: {},\n            });\n\n            // To prevent infinite loop when changing from advanced end_time to digit type contract\n            if (obj_new_values.contract_type && this.root_store.ui.is_advanced_duration) {\n                if (isDigitTradeType(obj_new_values.contract_type)) {\n                    this.barrier_1 = '';\n                    this.barrier_2 = '';\n                    this.expiry_type = 'duration';\n                    this.root_store.ui.is_advanced_duration = false;\n                }\n            }\n\n            // TODO: handle barrier updates on proposal api\n            // const is_barrier_changed = 'barrier_1' in new_state || 'barrier_2' in new_state;\n            await processTradeParams(this, new_state);\n\n            this.updateStore({\n                ...(!this.is_initial_barrier_applied ? this.initial_barriers : {}),\n            });\n            this.is_initial_barrier_applied = true;\n            if (/\\b(contract_type|currency)\\b/.test(Object.keys(new_state))) {\n                this.validateAllProperties();\n            }\n            this.debouncedProposal();\n        }\n    }\n\n    get is_synthetics_available() {\n        return !!this.active_symbols?.find(item => item.market === 'synthetic_index');\n    }\n\n    get is_synthetics_trading_market_available() {\n        return !!this.active_symbols?.find(\n            item => item.market === 'synthetic_index' && !isMarketClosed(this.active_symbols, item.symbol)\n        );\n    }\n\n    get show_digits_stats() {\n        return isDigitTradeType(this.contract_type);\n    }\n\n    setMobileDigitView(bool) {\n        this.is_mobile_digit_view_selected = bool;\n    }\n\n    pushPurchaseDataToGtm(contract_data) {\n        const data = {\n            event: 'buy_contract',\n            bom_ui: 'new',\n            contract: {\n                amount: contract_data.amount,\n                barrier1: contract_data.barrier,\n                barrier2: contract_data.barrier2,\n                basis: contract_data.basis,\n                buy_price: contract_data.buy_price,\n                contract_type: contract_data.contract_type,\n                currency: contract_data.currency,\n                date_expiry: contract_data.date_expiry,\n                date_start: contract_data.date_start,\n                duration: contract_data.duration,\n                duration_unit: contract_data.duration_unit,\n                payout: contract_data.payout,\n                symbol: contract_data.symbol,\n            },\n            settings: {\n                theme: this.root_store.ui.is_dark_mode_on ? 'dark' : 'light',\n                positions_drawer: this.root_store.ui.is_positions_drawer_on ? 'open' : 'closed',\n                chart: {\n                    toolbar_position: this.root_store.ui.is_chart_layout_default ? 'bottom' : 'left',\n                    chart_asset_info: this.root_store.ui.is_chart_asset_info_visible ? 'visible' : 'hidden',\n                    chart_type: this.root_store.contract_trade.chart_type,\n                    granularity: this.root_store.contract_trade.granularity,\n                },\n            },\n        };\n        this.root_store.gtm.pushDataLayer(data);\n    }\n\n    clearPurchaseInfo() {\n        this.purchase_info = {};\n        this.proposal_requests = {};\n        this.proposal_info = {};\n    }\n\n    requestProposal() {\n        const requests = createProposalRequests(this);\n        if (Object.values(this.validation_errors).some(e => e.length)) {\n            this.proposal_info = {};\n            this.purchase_info = {};\n            this.forgetAllProposal();\n            return;\n        }\n\n        if (!isEmptyObject(requests)) {\n            this.proposal_requests = requests;\n            this.purchase_info = {};\n            Object.keys(this.proposal_requests).forEach(type => {\n                WS.subscribeProposal(this.proposal_requests[type], this.onProposalResponse);\n            });\n        }\n        this.root_store.ui.resetPurchaseStates();\n    }\n\n    forgetAllProposal() {\n        const length = Object.keys(this.proposal_requests).length;\n        if (length > 0) WS.forgetAll('proposal');\n    }\n\n    setMarketStatus(status) {\n        this.is_market_closed = status;\n    }\n\n    onProposalResponse(response) {\n        const { contract_type } = response.echo_req;\n        const prev_proposal_info = getPropertyValue(this.proposal_info, contract_type) || {};\n        const obj_prev_contract_basis = getPropertyValue(prev_proposal_info, 'obj_contract_basis') || {};\n\n        // add/update expiration or date_expiry for crypto indices from proposal\n        const date_expiry = response.proposal?.date_expiry;\n\n        if (!response.error && !!date_expiry && this.is_crypto_multiplier) {\n            this.expiration = date_expiry;\n        }\n\n        this.proposal_info = {\n            ...this.proposal_info,\n            [contract_type]: getProposalInfo(this, response, obj_prev_contract_basis),\n        };\n\n        if (this.is_multiplier && this.proposal_info && this.proposal_info.MULTUP) {\n            const { commission, cancellation, limit_order } = this.proposal_info.MULTUP;\n            // commission and cancellation.ask_price is the same for MULTUP/MULTDOWN\n            if (commission) {\n                this.commission = commission;\n            }\n            if (cancellation) {\n                this.cancellation_price = cancellation.ask_price;\n            }\n            this.stop_out = limit_order?.stop_out?.order_amount;\n        }\n        if (this.is_accumulator && this.proposal_info?.ACCU) {\n            const {\n                barrier_spot_distance,\n                maximum_ticks,\n                ticks_stayed_in,\n                tick_size_barrier,\n                last_tick_epoch,\n                maximum_payout,\n                high_barrier,\n                low_barrier,\n                spot,\n                spot_time,\n            } = this.proposal_info.ACCU;\n            this.ticks_history_stats = getUpdatedTicksHistoryStats({\n                previous_ticks_history_stats: this.ticks_history_stats,\n                new_ticks_history_stats: ticks_stayed_in,\n                last_tick_epoch,\n            });\n            this.maximum_ticks = maximum_ticks;\n            this.maximum_payout = maximum_payout;\n            this.tick_size_barrier = tick_size_barrier;\n            const { updateAccumulatorBarriersData } = this.root_store.contract_trade || {};\n            if (updateAccumulatorBarriersData) {\n                updateAccumulatorBarriersData({\n                    accumulators_high_barrier: high_barrier,\n                    accumulators_low_barrier: low_barrier,\n                    barrier_spot_distance,\n                    current_spot: spot,\n                    current_spot_time: spot_time,\n                    underlying: this.symbol,\n                });\n            }\n        }\n\n        if (!this.main_barrier || this.main_barrier?.shade) {\n            this.setMainBarrier(response.echo_req);\n        }\n\n        if (this.hovered_contract_type === contract_type) {\n            this.addTickByProposal(response);\n            setLimitOrderBarriers({\n                barriers: this.root_store.portfolio.barriers,\n                contract_info: this.proposal_info[this.hovered_contract_type],\n                contract_type,\n                is_over: true,\n            });\n        }\n\n        if (response.error) {\n            const error_id = getProposalErrorField(response);\n            if (error_id) {\n                if (this.is_vanilla) {\n                    /**\n                     * This if-block ensures only the particular trade type's error message is selected\n                     * even though 2 proposal calls are made\n                     */\n                    if (this.vanilla_trade_type === contract_type) {\n                        this.setValidationErrorMessages(error_id, [response.error.message]);\n                    }\n                } else {\n                    this.setValidationErrorMessages(error_id, [response.error.message]);\n                }\n            }\n            // Commission for multipliers is normally set from proposal response.\n            // But when we change the multiplier and if it is invalid, we don't get the proposal response to set the commission. We only get error message.\n            // This is a work around to set the commission from error message.\n            if (this.is_multiplier) {\n                const { message, details } = response.error;\n                const commission_match = (message || '').match(/\\((\\d+\\.*\\d*)\\)/);\n                if (details?.field === 'stop_loss' && commission_match?.[1]) {\n                    this.commission = commission_match[1];\n                }\n            }\n\n            // Sometimes the initial barrier doesn't match with current barrier choices received from API.\n            // When this happens we want to populate the list of barrier choices to choose from since the value cannot be specified manually\n            if (this.is_vanilla) {\n                const { barrier_choices, max_stake, min_stake } = response.error.details;\n                this.setStakeBoundary(contract_type, min_stake, max_stake);\n                this.setStrikeChoices(barrier_choices);\n                if (!this.strike_price_choices.includes(this.barrier_1)) {\n                    // Since on change of duration `proposal` API call is made which returns a new set of barrier values.\n                    // The new list is set and the mid value is assigned\n                    const index = Math.floor(this.strike_price_choices.length / 2);\n                    this.barrier_1 = this.strike_price_choices[index];\n                    this.onChange({\n                        target: {\n                            name: 'barrier_1',\n                            value: this.barrier_1,\n                        },\n                    });\n                }\n            }\n\n            // Sometimes when we navigate fast, `forget_all` proposal is called immediately after proposal subscription calls.\n            // But, in the BE, `forget_all` proposal call is processed before the proposal subscriptions are registered. In this case, `forget_all` proposal doesn't forget the new subscriptions.\n            // So when we send new proposal subscription requests, we get `AlreadySubscribed` error.\n            // If we get an error message with code `AlreadySubscribed`, `forget_all` proposal will be called and all the existing subscriptions will be marked as complete in `deriv-api` and will subscribe to new proposals\n            if (response.error.code === 'AlreadySubscribed') {\n                this.refresh();\n\n                if (this.is_trade_component_mounted) {\n                    this.debouncedProposal();\n                }\n                return;\n            }\n        } else {\n            this.validateAllProperties();\n            if (this.is_vanilla) {\n                const { max_stake, min_stake, barrier_choices } = response.proposal;\n                this.setStrikeChoices(barrier_choices);\n                this.setStakeBoundary(contract_type, min_stake, max_stake);\n            }\n        }\n\n        if (!this.is_purchasing_contract) {\n            this.enablePurchase();\n        }\n    }\n\n    onChartBarrierChange(barrier_1, barrier_2) {\n        this.processNewValuesAsync({ barrier_1, barrier_2 }, true);\n    }\n\n    onAllowEqualsChange() {\n        this.processNewValuesAsync({ contract_type: parseInt(this.is_equal) ? 'rise_fall_equal' : 'rise_fall' }, true);\n    }\n\n    updateSymbol(underlying) {\n        if (!underlying) return;\n        this.onChange({\n            target: {\n                name: 'symbol',\n                value: underlying,\n            },\n        });\n    }\n\n    changeDurationValidationRules() {\n        if (this.expiry_type === 'endtime') {\n            this.validation_errors.duration = [];\n            return;\n        }\n\n        if (!this.validation_rules.duration) return;\n\n        const index = this.validation_rules.duration.rules.findIndex(item => item[0] === 'number');\n        const limits = this.duration_min_max[this.contract_expiry_type] || false;\n\n        if (limits) {\n            const duration_options = {\n                min: convertDurationLimit(+limits.min, this.duration_unit),\n                max: convertDurationLimit(+limits.max, this.duration_unit),\n            };\n\n            if (index > -1) {\n                this.validation_rules.duration.rules[index][1] = duration_options;\n            } else {\n                this.validation_rules.duration.rules.push(['number', duration_options]);\n            }\n            this.validateProperty('duration', this.duration);\n        }\n    }\n\n    async accountSwitcherListener() {\n        if (this.root_store.common.is_language_changing) {\n            await this.loadActiveSymbols(false, false);\n            this.root_store.common.is_language_changing = false;\n        } else {\n            await this.loadActiveSymbols(true, false);\n        }\n\n        this.resetErrorServices();\n        await this.setContractTypes();\n        runInAction(async () => {\n            this.processNewValuesAsync(\n                { currency: this.root_store.client.currency || this.root_store.client.default_currency },\n                true,\n                { currency: this.currency },\n                false\n            );\n        });\n        return Promise.resolve();\n    }\n\n    preSwitchAccountListener() {\n        this.clearContracts();\n        this.is_trade_enabled = false;\n        return Promise.resolve();\n    }\n\n    async logoutListener() {\n        this.clearContracts();\n        this.refresh();\n        this.resetErrorServices();\n        if (this.root_store.common.is_language_changing) {\n            await this.loadActiveSymbols(false);\n            this.root_store.common.is_language_changing = false;\n        } else {\n            await this.loadActiveSymbols();\n        }\n        await this.setContractTypes();\n        this.is_trade_enabled = true;\n        this.debouncedProposal();\n    }\n\n    clientInitListener() {\n        this.initAccountCurrency(this.root_store.client.currency || this.root_store.client.default_currency);\n        return Promise.resolve();\n    }\n\n    networkStatusChangeListener(is_online) {\n        this.setTradeStatus(is_online);\n    }\n\n    themeChangeListener(is_dark_mode_on) {\n        this.updateBarrierColor(is_dark_mode_on);\n    }\n\n    resetErrorServices() {\n        this.root_store.ui.toggleServicesErrorModal(false);\n    }\n\n    onMount() {\n        if (this.is_trade_component_mounted && this.should_skip_prepost_lifecycle) {\n            return;\n        }\n        this.root_store.notifications.setShouldShowPopups(false);\n        this.onPreSwitchAccount(this.preSwitchAccountListener);\n        this.onSwitchAccount(this.accountSwitcherListener);\n        this.onLogout(this.logoutListener);\n        this.onClientInit(this.clientInitListener);\n        this.onNetworkStatusChange(this.networkStatusChangeListener);\n        this.onThemeChange(this.themeChangeListener);\n        this.setChartStatus(true);\n        runInAction(async () => {\n            this.is_trade_component_mounted = true;\n            await this.prepareTradeStore();\n            this.root_store.notifications.setShouldShowPopups(true);\n        });\n        // TODO: remove this function when the closure of MX and MLT accounts is completed.\n        this.manageMxMltRemovalNotification();\n    }\n\n    manageMxMltRemovalNotification() {\n        const { addNotificationMessage, client_notifications, notification_messages, unmarkNotificationMessage } =\n            this.root_store.notifications;\n        const get_notification_messages = JSON.parse(localStorage.getItem('notification_messages'));\n        const { has_iom_account, has_malta_account, is_logged_in } = this.root_store.client;\n        unmarkNotificationMessage({ key: 'close_mx_mlt_account' });\n        if (get_notification_messages !== null && is_logged_in && (has_iom_account || has_malta_account)) {\n            when(\n                () => is_logged_in && notification_messages.length === 0,\n                () => {\n                    const hidden_close_account_notification =\n                        parseInt(localStorage.getItem('hide_close_mx_mlt_account_notification')) === 1;\n                    const should_retain_notification =\n                        (has_iom_account || has_malta_account) && !hidden_close_account_notification;\n                    if (should_retain_notification) {\n                        addNotificationMessage(client_notifications.close_mx_mlt_account);\n                    }\n                }\n            );\n        }\n    }\n\n    setChartStatus(status) {\n        this.is_chart_loading = status;\n    }\n\n    async initAccountCurrency(new_currency) {\n        if (this.currency === new_currency) return;\n\n        await this.processNewValuesAsync({ currency: new_currency }, true, { currency: this.currency }, false);\n        this.refresh();\n        this.debouncedProposal();\n    }\n\n    onUnmount() {\n        if (this.should_skip_prepost_lifecycle) {\n            return;\n        }\n        this.disposePreSwitchAccount();\n        this.disposeSwitchAccount();\n        this.disposeLogout();\n        this.disposeClientInit();\n        this.disposeNetworkStatusChange();\n        this.disposeThemeChange();\n        this.is_trade_component_mounted = false;\n        // TODO: Find a more elegant solution to unmount contract-trade-store\n        this.root_store.contract_trade.onUnmount();\n        this.refresh();\n        this.resetErrorServices();\n        if (this.root_store.notifications.is_notifications_visible) {\n            this.root_store.notifications.toggleNotificationsModal();\n        }\n        if (this.prev_chart_layout) {\n            this.prev_chart_layout.is_used = false;\n        }\n        this.resetAccumulatorData();\n    }\n\n    prev_chart_layout = null;\n\n    get chart_layout() {\n        let layout = null;\n        if (this.prev_chart_layout && this.prev_chart_layout.is_used === false) {\n            layout = this.prev_chart_layout;\n        }\n        return layout;\n    }\n\n    get is_crypto_multiplier() {\n        return this.contract_type === 'multiplier' && /^cry/.test(this.symbol);\n    }\n\n    exportLayout(layout) {\n        delete layout.previousMaxTicks; // TODO: fix it in smartcharts\n        this.prev_chart_layout = layout;\n        this.prev_chart_layout.isDone = () => {\n            this.prev_chart_layout.is_used = true;\n            this.setChartStatus(false);\n        };\n    }\n\n    // ---------- WS ----------\n    wsSubscribe = (req, callback) => {\n        if (req.subscribe === 1) {\n            const key = JSON.stringify(req);\n            const subscriber = WS.subscribeTicksHistory(req, callback);\n            g_subscribers_map[key] = subscriber;\n        }\n    };\n\n    wsForget = req => {\n        const key = JSON.stringify(req);\n        if (g_subscribers_map[key]) {\n            g_subscribers_map[key].unsubscribe();\n            delete g_subscribers_map[key];\n        }\n        // WS.forget('ticks_history', callback, match);\n    };\n\n    wsForgetStream = stream_id => {\n        WS.forgetStream(stream_id);\n    };\n\n    wsSendRequest = req => {\n        if (req.time) {\n            return ServerTime.timePromise().then(server_time => {\n                if (server_time) {\n                    return {\n                        msg_type: 'time',\n                        time: server_time.unix(),\n                    };\n                }\n                return WS.time();\n            });\n        }\n        if (req.active_symbols) {\n            return WS.activeSymbols('brief');\n        }\n        if (req.trading_times) {\n            return WS.tradingTimes(req.trading_times);\n        }\n        return WS.storage.send(req);\n    };\n\n    chartStateChange(state, option) {\n        const market_close_prop = 'isClosed';\n        switch (state) {\n            case 'MARKET_STATE_CHANGE':\n                if (option && market_close_prop in option) {\n                    if (this.is_trade_component_mounted && option[market_close_prop] !== this.is_market_closed)\n                        this.prepareTradeStore(false);\n                }\n                break;\n            default:\n        }\n    }\n\n    refToAddTick = ref => {\n        this.addTickByProposal = ref;\n    };\n\n    get has_alternative_source() {\n        return this.is_multiplier && !!this.hovered_contract_type;\n    }\n\n    get is_accumulator() {\n        return this.contract_type === 'accumulator';\n    }\n\n    get is_multiplier() {\n        return this.contract_type === 'multiplier';\n    }\n\n    get is_vanilla() {\n        return this.contract_type === 'vanilla';\n    }\n\n    setContractPurchaseToastbox(response) {\n        const list = getAvailableContractTypes(this.contract_types_list, unsupported_contract_types_list);\n\n        return (this.contract_purchase_toast_box = {\n            key: true,\n            buy_price: formatMoney(this.root_store.client.currency, response.buy_price, true, 0, 0),\n            contract_type: this.contract_type,\n            currency: getCurrencyDisplayCode(this.root_store.client.currency),\n            list,\n        });\n    }\n\n    clearContractPurchaseToastBox() {\n        this.contract_purchase_toast_box = undefined;\n    }\n\n    async getFirstOpenMarket(markets_to_search) {\n        if (this.active_symbols?.length) {\n            return findFirstOpenMarket(this.active_symbols, markets_to_search);\n        }\n        const { active_symbols, error } = await WS.authorized.activeSymbols();\n        if (error) {\n            this.root_store.common.showError({ message: localize('Trading is unavailable at this time.') });\n            return undefined;\n        }\n        return findFirstOpenMarket(active_symbols, markets_to_search);\n    }\n\n    setStrikeChoices(strike_prices) {\n        this.strike_price_choices = strike_prices ?? [];\n    }\n\n    setStakeBoundary(type, min_stake, max_stake) {\n        this.stake_boundary[type] = { min_stake, max_stake };\n    }\n}\n","import TradeStore from './Trading/trade-store';\n\nexport default class ModulesStore {\n    constructor(root_store, core_store) {\n        this.cashier = core_store.modules.cashier;\n        this.trade = new TradeStore({ root_store });\n    }\n}\n","import ModulesStore from './Modules';\n\nexport default class RootStore {\n    constructor(core_store) {\n        this.client = core_store.client;\n        this.common = core_store.common;\n        this.modules = new ModulesStore(this, core_store);\n        this.ui = core_store.ui;\n        this.gtm = core_store.gtm;\n        this.rudderstack = core_store.rudderstack;\n        this.pushwoosh = core_store.pushwoosh;\n        this.notifications = core_store.notifications;\n        this.contract_replay = core_store.contract_replay;\n        this.contract_trade = core_store.contract_trade;\n        this.portfolio = core_store.portfolio;\n        this.chart_barrier_store = core_store.chart_barrier_store;\n        this.active_symbols = core_store.active_symbols;\n    }\n}\n","import { configure } from 'mobx';\nimport RootStore from 'Stores';\nimport { setWebsocket } from '@deriv/shared';\nimport ServerTime from '_common/base/server_time';\n\nconfigure({ enforceActions: 'observed' });\n\nlet root_store;\n\nconst initStore = (core_store, websocket) => {\n    if (root_store) return root_store;\n\n    ServerTime.init(core_store.common);\n    setWebsocket(websocket);\n    root_store = new RootStore(core_store);\n\n    return root_store;\n};\n\nexport default initStore;\n","import React from 'react';\nimport Loadable from 'react-loadable';\nimport Routes from 'App/Containers/Routes/routes.jsx';\nimport TradeHeaderExtensions from 'App/Containers/trade-header-extensions';\nimport TradeFooterExtensions from 'App/Containers/trade-footer-extensions.jsx';\nimport TradeSettingsExtensions from 'App/Containers/trade-settings-extensions';\nimport { NetworkStatusToastErrorPopup } from 'Modules/Trading/Containers/toast-popup.jsx';\nimport initStore from './init-store';\nimport 'Sass/app.scss';\nimport type { TCoreStores } from '@deriv/stores/types';\nimport TraderProviders from '../trader-providers';\n\ntype Apptypes = {\n    passthrough: {\n        root_store: TCoreStores;\n        WS: unknown;\n    };\n};\n\nconst TradeModals = Loadable({\n    loader: () => import(/* webpackChunkName: \"trade-modals\", webpackPrefetch: true */ './Containers/Modals'),\n    loading: () => null,\n});\n\nconst App = ({ passthrough }: Apptypes) => {\n    const root_store = initStore(passthrough.root_store, passthrough.WS);\n    React.useEffect(() => {\n        return () => root_store.ui.setPromptHandler(false);\n    }, [root_store]);\n\n    return (\n        <TraderProviders store={root_store}>\n            <Routes />\n            <TradeModals />\n            <NetworkStatusToastErrorPopup />\n            <TradeHeaderExtensions store={root_store} />\n            <TradeFooterExtensions />\n            <TradeSettingsExtensions store={root_store} />\n        </TraderProviders>\n    );\n};\n\nexport default App;\n","import App from './app';\n\nexport default App;\n","import React from 'react';\nimport { localize, Localize } from '@deriv/translations';\n\nexport const getCardLabels = () => ({\n    APPLY: localize('Apply'),\n    BUY_PRICE: localize('Buy price:'),\n    CANCEL: localize('Cancel'),\n    CLOSE: localize('Close'),\n    CONTRACT_VALUE: localize('Contract value:'),\n    CURRENT_STAKE: localize('Current stake:'),\n    DAY: localize('day'),\n    DAYS: localize('days'),\n    DEAL_CANCEL_FEE: localize('Deal cancel. fee:'),\n    DECREMENT_VALUE: localize('Decrement value'),\n    DONT_SHOW_THIS_AGAIN: localize(\"Don't show this again\"),\n    ENTRY_SPOT: localize('Entry spot:'),\n    INCREMENT_VALUE: localize('Increment value'),\n    NOT_AVAILABLE: localize('N/A'),\n    RESALE_NOT_OFFERED: localize('Resale not offered'),\n    SELL: localize('Sell'),\n    STAKE: localize('Stake:'),\n    STOP_LOSS: localize('Stop loss:'),\n    STRIKE: localize('Strike:'),\n    TICK: localize('Tick '),\n    TICKS: localize('Ticks'),\n    TOTAL_PROFIT_LOSS: localize('Total profit/loss:'),\n    PROFIT_LOSS: localize('Profit/Loss:'),\n    POTENTIAL_PROFIT_LOSS: localize('Potential profit/loss:'),\n    INDICATIVE_PRICE: localize('Indicative price:'),\n    INITIAL_STAKE: localize('Initial stake:'),\n    LOST: localize('Lost'),\n    PAYOUT: localize('Sell price:'),\n    PURCHASE_PRICE: localize('Buy price:'),\n    POTENTIAL_PAYOUT: localize('Payout limit:'),\n    TAKE_PROFIT: localize('Take profit:'),\n    TAKE_PROFIT_LOSS_NOT_AVAILABLE: localize(\n        'Take profit and/or stop loss are not available while deal cancellation is active.'\n    ),\n    WON: localize('Won'),\n});\n\nexport const getMarketNamesMap = () => ({\n    FRXAUDCAD: localize('AUD/CAD'),\n    FRXAUDCHF: localize('AUD/CHF'),\n    FRXAUDJPY: localize('AUD/JPY'),\n    FRXAUDNZD: localize('AUD/NZD'),\n    FRXAUDPLN: localize('AUD/PLN'),\n    FRXAUDUSD: localize('AUD/USD'),\n    FRXBROUSD: localize('Oil/USD'),\n    FRXEURAUD: localize('EUR/AUD'),\n    FRXEURCAD: localize('EUR/CAD'),\n    FRXEURCHF: localize('EUR/CHF'),\n    FRXEURGBP: localize('EUR/GBP'),\n    FRXEURJPY: localize('EUR/JPY'),\n    FRXEURNZD: localize('EUR/NZD'),\n    FRXEURUSD: localize('EUR/USD'),\n    FRXGBPAUD: localize('GBP/AUD'),\n    FRXGBPCAD: localize('GBP/CAD'),\n    FRXGBPCHF: localize('GBP/CHF'),\n    FRXGBPJPY: localize('GBP/JPY'),\n    FRXGBPNOK: localize('GBP/NOK'),\n    FRXGBPUSD: localize('GBP/USD'),\n    FRXNZDJPY: localize('NZD/JPY'),\n    FRXNZDUSD: localize('NZD/USD'),\n    FRXUSDCAD: localize('USD/CAD'),\n    FRXUSDCHF: localize('USD/CHF'),\n    FRXUSDJPY: localize('USD/JPY'),\n    FRXUSDNOK: localize('USD/NOK'),\n    FRXUSDPLN: localize('USD/PLN'),\n    FRXUSDSEK: localize('USD/SEK'),\n    FRXXAGUSD: localize('Silver/USD'),\n    FRXXAUUSD: localize('Gold/USD'),\n    FRXXPDUSD: localize('Palladium/USD'),\n    FRXXPTUSD: localize('Platinum/USD'),\n    OTC_AEX: localize('Netherlands 25'),\n    OTC_AS51: localize('Australia 200'),\n    OTC_DJI: localize('Wall Street 30'),\n    OTC_FCHI: localize('France 40'),\n    OTC_FTSE: localize('UK 100'),\n    OTC_GDAXI: localize('Germany 40'),\n    OTC_HSI: localize('Hong Kong 50'),\n    OTC_IBEX35: localize('Spanish Index'),\n    OTC_N225: localize('Japan 225'),\n    OTC_NDX: localize('US Tech 100'),\n    OTC_SPC: localize('US 500'),\n    OTC_SSMI: localize('Swiss 20'),\n    OTC_SX5E: localize('Euro 50'),\n    R_10: localize('Volatility 10 Index'),\n    R_25: localize('Volatility 25 Index'),\n    R_50: localize('Volatility 50 Index'),\n    R_75: localize('Volatility 75 Index'),\n    R_100: localize('Volatility 100 Index'),\n    BOOM300N: localize('Boom 300 Index'),\n    BOOM500: localize('Boom 500 Index'),\n    BOOM1000: localize('Boom 1000 Index'),\n    CRASH300N: localize('Crash 300 Index'),\n    CRASH500: localize('Crash 500 Index'),\n    CRASH1000: localize('Crash 1000 Index'),\n    RDBEAR: localize('Bear Market Index'),\n    RDBULL: localize('Bull Market Index'),\n    STPRNG: localize('Step Index'),\n    WLDAUD: localize('AUD Basket'),\n    WLDEUR: localize('EUR Basket'),\n    WLDGBP: localize('GBP Basket'),\n    WLDXAU: localize('Gold Basket'),\n    WLDUSD: localize('USD Basket'),\n    '1HZ10V': localize('Volatility 10 (1s) Index'),\n    '1HZ100V': localize('Volatility 100 (1s) Index'),\n    '1HZ150V': localize('Volatility 150 (1s) Index'),\n    '1HZ200V': localize('Volatility 200 (1s) Index'),\n    '1HZ250V': localize('Volatility 250 (1s) Index'),\n    '1HZ300V': localize('Volatility 300 (1s) Index'),\n    JD10: localize('Jump 10 Index'),\n    JD25: localize('Jump 25 Index'),\n    JD50: localize('Jump 50 Index'),\n    JD75: localize('Jump 75 Index'),\n    JD100: localize('Jump 100 Index'),\n    JD150: localize('Jump 150 Index'),\n    JD200: localize('Jump 200 Index'),\n    CRYBCHUSD: localize('BCH/USD'),\n    CRYBNBUSD: localize('BNB/USD'),\n    CRYBTCLTC: localize('BTC/LTC'),\n    CRYIOTUSD: localize('IOT/USD'),\n    CRYNEOUSD: localize('NEO/USD'),\n    CRYOMGUSD: localize('OMG/USD'),\n    CRYTRXUSD: localize('TRX/USD'),\n    CRYBTCETH: localize('BTC/ETH'),\n    CRYZECUSD: localize('ZEC/USD'),\n    CRYXMRUSD: localize('ZMR/USD'),\n    CRYXMLUSD: localize('XLM/USD'),\n    CRYXRPUSD: localize('XRP/USD'),\n    CRYBTCUSD: localize('BTC/USD'),\n    CRYDSHUSD: localize('DSH/USD'),\n    CRYETHUSD: localize('ETH/USD'),\n    CRYEOSUSD: localize('EOS/USD'),\n    CRYLTCUSD: localize('LTC/USD'),\n});\n\nexport const getUnsupportedContracts = () => ({\n    EXPIRYMISS: {\n        name: <Localize i18n_default_text='Ends Outside' />,\n        position: 'top',\n    },\n    EXPIRYRANGE: {\n        name: <Localize i18n_default_text='Ends Between' />,\n        position: 'bottom',\n    },\n    RANGE: {\n        name: <Localize i18n_default_text='Stays Between' />,\n        position: 'top',\n    },\n    UPORDOWN: {\n        name: <Localize i18n_default_text='Goes Outside' />,\n        position: 'bottom',\n    },\n    RESETCALL: {\n        name: <Localize i18n_default_text='Reset Call' />,\n        position: 'top',\n    },\n    RESETPUT: {\n        name: <Localize i18n_default_text='Reset Put' />,\n        position: 'bottom',\n    },\n    TICKHIGH: {\n        name: <Localize i18n_default_text='High Tick' />,\n        position: 'top',\n    },\n    TICKLOW: {\n        name: <Localize i18n_default_text='Low Tick' />,\n        position: 'bottom',\n    },\n    ASIANU: {\n        name: <Localize i18n_default_text='Asian Up' />,\n        position: 'top',\n    },\n    ASIAND: {\n        name: <Localize i18n_default_text='Asian Down' />,\n        position: 'bottom',\n    },\n    LBFLOATCALL: {\n        name: <Localize i18n_default_text='Close-to-Low' />,\n        position: 'top',\n    },\n    LBFLOATPUT: {\n        name: <Localize i18n_default_text='High-to-Close' />,\n        position: 'top',\n    },\n    LBHIGHLOW: {\n        name: <Localize i18n_default_text='High-to-Low' />,\n        position: 'top',\n    },\n    CALLSPREAD: {\n        name: <Localize i18n_default_text='Spread Up' />,\n        position: 'top',\n    },\n    PUTSPREAD: {\n        name: <Localize i18n_default_text='Spread Down' />,\n        position: 'bottom',\n    },\n    RUNHIGH: {\n        name: <Localize i18n_default_text='Only Ups' />,\n        position: 'top',\n    },\n    RUNLOW: {\n        name: <Localize i18n_default_text='Only Downs' />,\n        position: 'bottom',\n    },\n});\n\n// Config to display trade button and their position\nexport const getSupportedContracts = is_high_low => ({\n    ACCU: {\n        button_name: <Localize i18n_default_text='Buy' />,\n        name: <Localize i18n_default_text='Accumulator' />,\n        position: 'top',\n    },\n    CALL: {\n        name: is_high_low ? <Localize i18n_default_text='Higher' /> : <Localize i18n_default_text='Rise' />,\n        position: 'top',\n    },\n    PUT: {\n        name: is_high_low ? <Localize i18n_default_text='Lower' /> : <Localize i18n_default_text='Fall' />,\n        position: 'bottom',\n    },\n    CALLE: {\n        name: <Localize i18n_default_text='Rise' />,\n        position: 'top',\n    },\n    PUTE: {\n        name: <Localize i18n_default_text='Fall' />,\n        position: 'bottom',\n    },\n    DIGITMATCH: {\n        name: <Localize i18n_default_text='Matches' />,\n        position: 'top',\n    },\n    DIGITDIFF: {\n        name: <Localize i18n_default_text='Differs' />,\n        position: 'bottom',\n    },\n    DIGITEVEN: {\n        name: <Localize i18n_default_text='Even' />,\n        position: 'top',\n    },\n    DIGITODD: {\n        name: <Localize i18n_default_text='Odd' />,\n        position: 'bottom',\n    },\n    DIGITOVER: {\n        name: <Localize i18n_default_text='Over' />,\n        position: 'top',\n    },\n    DIGITUNDER: {\n        name: <Localize i18n_default_text='Under' />,\n        position: 'bottom',\n    },\n    ONETOUCH: {\n        name: <Localize i18n_default_text='Touch' />,\n        position: 'top',\n    },\n    NOTOUCH: {\n        name: <Localize i18n_default_text='No Touch' />,\n        position: 'bottom',\n    },\n    MULTUP: {\n        name: <Localize i18n_default_text='Up' />,\n        position: 'top',\n    },\n    MULTDOWN: {\n        name: <Localize i18n_default_text='Down' />,\n        position: 'bottom',\n    },\n    VANILLALONGCALL: {\n        name: <Localize i18n_default_text='Call' />,\n        position: 'top',\n    },\n    VANILLALONGPUT: {\n        name: <Localize i18n_default_text='Put' />,\n        position: 'bottom',\n    },\n});\n\nexport const getContractConfig = is_high_low => ({\n    ...getSupportedContracts(is_high_low),\n    ...getUnsupportedContracts(),\n});\n\nexport const getContractTypeDisplay = (type, is_high_low = false, show_button_name = false) => {\n    const contract_config = getContractConfig(is_high_low)[type];\n    return (show_button_name && contract_config.button_name) || contract_config.name || '';\n};\n\nexport const getContractTypePosition = (type, is_high_low = false) =>\n    getContractConfig(is_high_low)[type] ? getContractConfig(is_high_low)[type.toUpperCase()].position : 'top';\n","import React from 'react';\nimport classNames from 'classnames';\n\ntype TTicksHistoryCounter = {\n    has_progress_dots: boolean;\n    should_emphasize_last_counter?: boolean;\n    value: number;\n};\n\nconst TicksHistoryCounter = ({ has_progress_dots, value, should_emphasize_last_counter }: TTicksHistoryCounter) => {\n    const should_highlight_last_counter = should_emphasize_last_counter && has_progress_dots && value === 0;\n    return (\n        <div\n            data-testid='dt_accu_stats_history_counter'\n            className={classNames('accumulators-stats__history-counter', {\n                'accumulators-stats__history-counter--emphasized': should_highlight_last_counter,\n            })}\n        >\n            {value}\n            {has_progress_dots && (\n                <div className='accumulators-stats__progress-dots'>\n                    {[1, 2, 3].map(dot => {\n                        return <span key={`ticks-dot-counter${dot}`} className={`dot-${dot}`} />;\n                    })}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default React.memo(TicksHistoryCounter);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Text } from '@deriv/components';\nimport TicksHistoryCounter from './ticks-history-counter';\n\ntype TExpandedTicksHistoryProps = {\n    history_text_size: string;\n    rows: number[][];\n};\n\nconst ExpandedTicksHistory = ({ history_text_size, rows }: TExpandedTicksHistoryProps) => (\n    <Text size={history_text_size} className='accumulators-stats__history--expanded'>\n        {rows.map((row, i) => (\n            <div\n                key={i.toString() + row[0]}\n                data-testid='dt_accu_stats_history_row'\n                className='accumulators-stats__row'\n            >\n                {row.map((counter, idx) => (\n                    <TicksHistoryCounter\n                        key={idx.toString() + counter}\n                        value={counter}\n                        has_progress_dots={i === 0 && idx === 0}\n                    />\n                ))}\n            </div>\n        ))}\n    </Text>\n);\n\nExpandedTicksHistory.propTypes = {\n    history_text_size: PropTypes.string,\n    rows: PropTypes.array,\n};\n\nexport default React.memo(ExpandedTicksHistory);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Icon, Loading, Modal, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { getUrlBase, isMobile } from '@deriv/shared';\nimport 'Sass/app/modules/contract/accumulators-stats.scss';\n\nconst AccumulatorsStatsManualModal = ({ icon_classname, is_dark_theme, is_manual_open, title, toggleManual }) => {\n    const [is_loading, setIsLoading] = React.useState(true);\n    const is_mobile = isMobile();\n    // memoize file paths for videos and open the modal only after we get them\n    const getVideoSource = React.useCallback(\n        extension => {\n            return getUrlBase(\n                `/public/images/common/accumulators_manual_${is_mobile ? 'mobile' : 'desktop'}${\n                    is_dark_theme ? '_dark' : ''\n                }.${extension}`\n            );\n        },\n        [is_mobile, is_dark_theme]\n    );\n    const mp4_src = React.useMemo(() => getVideoSource('mp4'), [getVideoSource]);\n    const webm_src = React.useMemo(() => getVideoSource('webm'), [getVideoSource]);\n\n    return (\n        <React.Fragment>\n            <Icon icon='IcInfoOutline' onClick={toggleManual} size={16} className={icon_classname} />\n            <Modal\n                is_open={is_manual_open && !!mp4_src && !!webm_src}\n                should_header_stick_body={false}\n                title={title}\n                toggleModal={toggleManual}\n                width={is_mobile ? '328px' : '596px'}\n                className='accumulators-stats-manual-modal'\n            >\n                <Modal.Body className='accumulators-stats-modal-body'>\n                    <div className='accumulators-stats-modal-body__video'>\n                        {is_loading && <Loading is_fullscreen={false} />}\n                        <video\n                            autoPlay\n                            data-testid='dt_accumulators_stats_manual_video'\n                            loop\n                            onLoadedData={() => setIsLoading(false)}\n                            playsInline\n                            preload='auto'\n                            width={is_mobile ? 296 : 563}\n                        >\n                            {/* a browser will select a source with extension it recognizes */}\n                            <source src={mp4_src} type='video/mp4' />\n                            <source src={webm_src} type='video/webm' />\n                            {localize('Unfortunately, your browser does not support the video.')}\n                        </video>\n                    </div>\n                    <Text\n                        as='p'\n                        size={is_mobile ? 'xs' : 's'}\n                        color='prominent'\n                        className='accumulators-stats-modal-body__text'\n                    >\n                        {localize(\n                            'Stats show the history of consecutive tick counts, i.e. the number of ticks the price remained within range continuously.'\n                        )}\n                    </Text>\n                </Modal.Body>\n            </Modal>\n        </React.Fragment>\n    );\n};\n\nAccumulatorsStatsManualModal.propTypes = {\n    icon_classname: PropTypes.string,\n    is_dark_theme: PropTypes.bool,\n    is_manual_open: PropTypes.bool,\n    title: PropTypes.string,\n    toggleManual: PropTypes.func,\n};\n\nexport { AccumulatorsStatsManualModal };\n","import React from 'react';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { DesktopWrapper, Icon, MobileDialog, MobileWrapper, Text } from '@deriv/components';\nimport { isDesktop, isMobile } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport ExpandedTicksHistory from './expanded-ticks-history';\nimport TicksHistoryCounter from './ticks-history-counter';\nimport { AccumulatorsStatsManualModal } from './accumulators-stats-manual-modal';\nimport 'Sass/app/modules/contract/accumulators-stats.scss';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer, useStore } from '@deriv/stores';\n\nexport const ROW_SIZES = {\n    DESKTOP_COLLAPSED: 10,\n    DESKTOP_EXPANDED: 10,\n    MOBILE_COLLAPSED: 15,\n    MOBILE_EXPANDED: 5,\n};\n\nconst AccumulatorsStats = observer(({ is_expandable = true }) => {\n    const { ui } = useStore();\n    const { ticks_history_stats = {} } = useTraderStore();\n    const { is_dark_mode_on: is_dark_theme } = ui;\n\n    const [is_collapsed, setIsCollapsed] = React.useState(true);\n    const [is_manual_open, setIsManualOpen] = React.useState(false);\n    const widget_title = localize('Stats');\n    const ticks_history = ticks_history_stats?.ticks_stayed_in || [];\n    const history_text_size = isDesktop() || !is_collapsed ? 'xxs' : 'xxxs';\n\n    const rows = ticks_history.reduce((acc, _el, index) => {\n        const desktop_row_size = is_collapsed ? ROW_SIZES.DESKTOP_COLLAPSED : ROW_SIZES.DESKTOP_EXPANDED;\n        const mobile_row_size = is_collapsed ? ROW_SIZES.MOBILE_COLLAPSED : ROW_SIZES.MOBILE_EXPANDED;\n        const row_size = isDesktop() ? desktop_row_size : mobile_row_size;\n        if (index % row_size === 0) {\n            acc.push(ticks_history.slice(index, index + row_size));\n        }\n        return acc;\n    }, []);\n\n    if (!ticks_history.length) return null;\n\n    return (\n        <div className='accumulators-stats'>\n            <div className={classNames('accumulators-stats__container--collapsed')}>\n                <div className='accumulators-stats__title'>\n                    <AccumulatorsStatsManualModal\n                        is_dark_theme={is_dark_theme}\n                        icon_classname='info'\n                        is_manual_open={is_manual_open}\n                        title={widget_title}\n                        toggleManual={() => setIsManualOpen(!is_manual_open)}\n                    />\n                    <Text weight='bold' size={isMobile() ? 'xxxs' : 'xxs'} className='accumulators-stats__title-text'>\n                        {widget_title}\n                    </Text>\n                </div>\n                <Text size={history_text_size} className='accumulators-stats__history'>\n                    {!is_collapsed ? (\n                        <div className='accumulators-stats__history-heading'>{localize('Number of ticks')}</div>\n                    ) : (\n                        rows[0]?.map((el, i) => <TicksHistoryCounter key={i} value={el} has_progress_dots={i === 0} />)\n                    )}\n                </Text>\n            </div>\n            {is_expandable && !is_collapsed && (\n                <React.Fragment>\n                    <DesktopWrapper>\n                        <ExpandedTicksHistory history_text_size={history_text_size} rows={rows} />\n                    </DesktopWrapper>\n                    <MobileWrapper>\n                        <MobileDialog\n                            onClose={() => setIsCollapsed(!is_collapsed)}\n                            portal_element_id='modal_root'\n                            title={widget_title}\n                            visible={!is_collapsed}\n                            wrapper_classname='accumulators-stats'\n                        >\n                            <ExpandedTicksHistory history_text_size={history_text_size} rows={rows} />\n                        </MobileDialog>\n                    </MobileWrapper>\n                </React.Fragment>\n            )}\n            {is_expandable && (\n                <Icon\n                    icon={is_collapsed ? 'IcArrowUp' : 'IcArrowDown'}\n                    onClick={() => setIsCollapsed(!is_collapsed)}\n                    className='accordion-toggle-arrow'\n                />\n            )}\n        </div>\n    );\n});\n\nAccumulatorsStats.propTypes = {\n    is_expandable: PropTypes.bool,\n};\n\nexport default AccumulatorsStats;\n","import AccumulatorsStats from './accumulators-stats.jsx';\n\nexport default AccumulatorsStats;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst Digit = ({ is_latest, is_lost, is_selected, is_won, percentage, value }) => {\n    const display_percentage = percentage && !isNaN(percentage) ? parseFloat(percentage).toFixed(1) : null;\n    return (\n        <React.Fragment>\n            <span\n                className={classNames('digits__digit-value', {\n                    'digits__digit-value--latest': is_latest,\n                    'digits__digit-value--selected': is_selected,\n                    'digits__digit-value--win': is_won && is_latest,\n                    'digits__digit-value--loss': is_lost && is_latest,\n                })}\n            >\n                <i\n                    className={classNames('digits__digit-display-value', {\n                        'digits__digit-display-value--no-stats': !display_percentage,\n                    })}\n                >\n                    {value}\n                </i>\n                {!!display_percentage && <i className='digits__digit-display-percentage'>{display_percentage}%</i>}\n            </span>\n        </React.Fragment>\n    );\n};\n\nDigit.propTypes = {\n    is_latest: PropTypes.bool,\n    is_lost: PropTypes.bool,\n    is_selected: PropTypes.bool,\n    is_trade_page: PropTypes.bool,\n    is_won: PropTypes.bool,\n    percentage: PropTypes.number,\n    value: PropTypes.number,\n};\n\nexport default Digit;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Text } from '@deriv/components';\n\nconst DigitSpot = ({ current_spot, is_selected_winning, is_lost, is_won }) => (\n    <React.Fragment>\n        <Text size='xs' align='center' weight='bold' className='digits__digit-spot-value'>\n            {current_spot.slice(0, -1)}\n        </Text>\n        <span\n            className={classNames('digits__digit-spot-last', {\n                'digits__digit-spot-last--selected-win': is_selected_winning,\n                'digits__digit-spot-last--win': is_won,\n                'digits__digit-spot-last--loss': is_lost,\n            })}\n        >\n            {current_spot.slice(-1)}\n        </span>\n    </React.Fragment>\n);\n\nDigitSpot.propTypes = {\n    current_spot: PropTypes.string,\n    is_lost: PropTypes.bool,\n    is_selected_winning: PropTypes.bool,\n    is_won: PropTypes.bool,\n};\n\nexport default DigitSpot;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nconst LastDigitStat = ({ is_max, is_min, is_selected, percentage }) => {\n    // interpolate color opacity within 7.5 to 12.5 range\n    let opacity = (percentage - 10) / 4;\n    opacity = Math.min(Math.max(opacity, -1), +1);\n    opacity = ((opacity + 1) / 2) * 0.85 + 0.15;\n    const w = 339.292;\n    let p = (20 * percentage - 102) / 3 / 100;\n    p = Math.max(Math.min(p, 0.66), 0.06);\n\n    return (\n        <div\n            className={classNames('digits__pie-container', {\n                'digits__pie-container--selected': is_selected,\n            })}\n        >\n            <svg className='digits__pie-progress' width='120' height='120' viewBox='0 0 120 120'>\n                <circle className='progress__bg' cx='60' cy='60' r='54' fill='none' stroke='#E8EEFC' strokeWidth='12' />\n                {percentage && (\n                    <circle\n                        className={classNames('progress__value', {\n                            'progress__value--is-max': is_max,\n                            'progress__value--is-min': is_min,\n                        })}\n                        cx='60'\n                        cy='60'\n                        r='54'\n                        fill='none'\n                        strokeOpacity={is_max || is_min ? 1 : opacity}\n                        strokeWidth='12'\n                        strokeDasharray={[w * p, w * (1 - p)]}\n                        // strokeDashoffset={(w * (1 - (0 * 3.5 * percentage / 100)))}\n                        strokeDashoffset={w * ((p + 1) / 2)}\n                    />\n                )}\n            </svg>\n        </div>\n    );\n};\n\nLastDigitStat.propTypes = {\n    is_max: PropTypes.bool,\n    is_min: PropTypes.bool,\n    is_selected: PropTypes.bool,\n    percentage: PropTypes.number,\n};\n\nexport default LastDigitStat;\n","import classNames from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { DesktopWrapper } from '@deriv/components';\nimport { isMobile } from '@deriv/shared';\nimport { Bounce } from 'App/Components/Animations';\nimport Digit from './digit.jsx';\nimport DigitSpot from './digit-spot.jsx';\nimport LastDigitStat from './last-digit-stat.jsx';\n\nconst DigitDisplay = ({\n    barrier,\n    is_digit_contract,\n    has_entry_spot,\n    is_lost,\n    is_max,\n    is_min,\n    is_won,\n    onSelect,\n    latest_digit,\n    selected_digit,\n    status,\n    stats,\n    value,\n    onLastDigitSpot,\n}) => {\n    const { digit, spot } = latest_digit;\n    const is_latest = value === digit;\n    const is_selected = value === barrier;\n    const is_selected_winning = digit === barrier;\n    const percentage = stats ? (stats * 100) / 1000 : null;\n\n    React.useEffect(() => {\n        if (onLastDigitSpot) {\n            onLastDigitSpot({ spot, is_lost, is_selected_winning, is_latest, is_won });\n        }\n    }, [latest_digit, spot, barrier, value, is_lost, is_selected_winning, is_latest, is_won, onLastDigitSpot]);\n\n    const is_digit_selectable = isMobile() && typeof onSelect === 'function' && !status;\n    const is_digit_selected = isMobile() && value === selected_digit && !status;\n    return (\n        <div\n            className={classNames('digits__digit', {\n                'digits__digit--latest': is_latest,\n                'digits__digit--win': is_won && is_latest,\n                'digits__digit--loss': is_lost && is_latest,\n                'digits__digit--is-selectable': is_digit_selectable,\n                'digits__digit--is-selected': is_digit_selected,\n            })}\n            onClick={() => {\n                if (!is_digit_selectable) return;\n                onSelect(value);\n            }}\n        >\n            <LastDigitStat is_min={is_min} is_max={is_max} is_selected={is_selected} percentage={percentage} />\n            <DesktopWrapper>\n                <Bounce\n                    is_visible={!!(is_digit_contract && is_latest && spot && status && has_entry_spot)}\n                    className='digits__digit-spot'\n                    keyname='digits__digit-spot'\n                >\n                    <DigitSpot\n                        current_spot={spot}\n                        is_lost={is_lost}\n                        is_selected_winning={is_selected_winning}\n                        is_visible={!!(is_latest && spot)}\n                        is_won={is_won}\n                    />\n                </Bounce>\n            </DesktopWrapper>\n            <Digit\n                is_latest={is_latest}\n                is_lost={is_lost}\n                is_selected={is_selected}\n                is_won={is_won}\n                percentage={percentage}\n                value={value}\n            />\n        </div>\n    );\n};\n\nDigitDisplay.propTypes = {\n    barrier: PropTypes.number,\n    has_entry_spot: PropTypes.bool,\n    is_digit_contract: PropTypes.bool,\n    is_lost: PropTypes.bool,\n    is_max: PropTypes.bool,\n    is_min: PropTypes.bool,\n    is_won: PropTypes.bool,\n    latest_digit: PropTypes.object,\n    onLastDigitSpot: PropTypes.func,\n    onSelect: PropTypes.func,\n    selected_digit: PropTypes.number,\n    stats: PropTypes.number,\n    status: PropTypes.string,\n    value: PropTypes.number,\n};\n\nexport default observer(DigitDisplay);\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Icon } from '@deriv/components';\n\nconst LastDigitPointer = ({ is_lost, is_trade_page, is_won, position }) => (\n    <React.Fragment>\n        {!!position && (\n            <span\n                className='digits__pointer'\n                style={{ transform: `translate3d(calc(${position.left}px), ${position.top}px, 0px)` }}\n            >\n                <Icon\n                    icon='IcProfit'\n                    className={classNames('digits__icon', {\n                        'digits__icon--win': is_won && !is_trade_page,\n                        'digits__icon--loss': is_lost && !is_trade_page,\n                    })}\n                    color={is_won ? 'green' : 'red'}\n                    custom_color={!(is_won || is_lost) ? 'var(--brand-orange)' : undefined}\n                />\n            </span>\n        )}\n    </React.Fragment>\n);\n\nLastDigitPointer.propTypes = {\n    is_lost: PropTypes.bool,\n    is_trade_page: PropTypes.bool,\n    is_won: PropTypes.bool,\n    position: PropTypes.object,\n};\n\nexport default LastDigitPointer;\n","import classNames from 'classnames';\nimport { observer } from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { isMobile } from '@deriv/shared';\nimport DigitDisplay from './digit-display.jsx';\nimport LastDigitPointer from './last-digit-pointer.jsx';\n\nconst display_array = Array.from(Array(10).keys()); // digits array [0 - 9]\n\nconst LastDigitPrediction = ({\n    barrier,\n    contract_type,\n    digits,\n    digits_info,\n    dimension,\n    is_digit_contract,\n    has_entry_spot,\n    is_ended,\n    is_trade_page,\n    onDigitChange,\n    onLastDigitSpot,\n    selected_digit,\n    status,\n    tick,\n    trade_type,\n}) => {\n    const [digit_offset] = React.useState({\n        0: { left: 6, top: 0 },\n        1: { left: 6 + dimension * 1, top: 0 },\n        2: { left: 6 + dimension * 2, top: 0 },\n        3: { left: 6 + dimension * 3, top: 0 },\n        4: { left: 6 + dimension * 4, top: 0 },\n        5: { left: 6 + dimension * 5, top: 0 },\n        6: { left: 6 + dimension * 6, top: 0 },\n        7: { left: 6 + dimension * 7, top: 0 },\n        8: { left: 6 + dimension * 8, top: 0 },\n        9: { left: 6 + dimension * 9, top: 0 },\n    });\n\n    const [digit_offset_mobile] = React.useState({\n        0: { left: 6, top: -60 },\n        1: { left: 6 + dimension * 1, top: -60 },\n        2: { left: 6 + dimension * 2, top: -60 },\n        3: { left: 6 + dimension * 3, top: -60 },\n        4: { left: 6 + dimension * 4, top: -60 },\n        5: { left: 6 + dimension * 0, top: 8 },\n        6: { left: 6 + dimension * 1, top: 8 },\n        7: { left: 6 + dimension * 2, top: 8 },\n        8: { left: 6 + dimension * 3, top: 8 },\n        9: { left: 6 + dimension * 4, top: 8 },\n    });\n\n    const handleSelect = digit_value => {\n        if (!isSelectableDigitType()) return;\n        if (digit_value !== selected_digit && typeof onDigitChange === 'function') {\n            onDigitChange({ target: { name: 'last_digit', value: digit_value } });\n        }\n    };\n\n    const getBarrier = num => {\n        const barrier_map = {\n            DIGITMATCH: val => val === barrier,\n            DIGITDIFF: val => val !== barrier && !isNaN(barrier),\n            DIGITOVER: val => val > barrier,\n            DIGITUNDER: val => val < barrier,\n            DIGITODD: val => val % 2,\n            DIGITEVEN: val => !(val % 2),\n        };\n        if (!contract_type || !barrier_map[contract_type]) return null;\n        return barrier_map[contract_type](num) ? num : null;\n    };\n\n    const getOffset = () => (isMobile() ? digit_offset_mobile : digit_offset);\n\n    const isSelectableDigitType = () => (isMobile() ? trade_type !== 'even_odd' : false);\n\n    const digits_array = Object.keys(digits_info)\n        .sort()\n        .map(spot_time => digits_info[spot_time]);\n    const last_contract_digit = digits_array.slice(-1)[0] || {};\n\n    // 'won' or 'lost' status exists after contract expiry\n    const is_won = is_ended && status === 'won' && is_digit_contract;\n    // need to explicitly have is_lost condition here\n    // because negating is_won would always be true,\n    // but we only need is_lost condition only once we have the 'won' or 'lost' status\n    const is_lost = is_ended && status === 'lost' && is_digit_contract;\n\n    const min = digits ? Math.min(...digits) : null;\n    const max = digits ? Math.max(...digits) : null;\n\n    // latest last digit refers to digit and spot values from latest price\n    // latest contract digit refers to digit and spot values from last digit contract in contracts array\n    const latest_tick_pip_size = tick ? +tick.pip_size : null;\n    const latest_tick_ask_price = tick && tick.ask ? tick.ask.toFixed(latest_tick_pip_size) : null;\n    const latest_tick_digit = latest_tick_ask_price ? +latest_tick_ask_price.split('').pop() : null;\n    const position = tick ? getOffset()[latest_tick_digit] : getOffset()[last_contract_digit.digit];\n    const latest_digit = !(is_won || is_lost)\n        ? { digit: latest_tick_digit, spot: latest_tick_ask_price }\n        : last_contract_digit;\n    return (\n        <div\n            className={classNames('digits', {\n                'digits--trade': is_trade_page,\n            })}\n        >\n            {display_array.map(idx => (\n                <DigitDisplay\n                    barrier={getBarrier(idx)}\n                    has_entry_spot={has_entry_spot}\n                    is_digit_contract={is_digit_contract}\n                    is_lost={is_lost}\n                    is_trade_page={is_trade_page}\n                    is_won={is_won}\n                    key={idx}\n                    is_max={digits ? digits[idx] === max : null}\n                    is_min={digits ? digits[idx] === min : null}\n                    stats={digits ? digits[idx] : null}\n                    status={status}\n                    latest_digit={is_trade_page ? latest_digit : last_contract_digit}\n                    value={idx}\n                    onLastDigitSpot={onLastDigitSpot}\n                    onSelect={isSelectableDigitType() ? handleSelect : null}\n                    selected_digit={isSelectableDigitType() ? selected_digit : false}\n                />\n            ))}\n            <LastDigitPointer is_lost={is_lost} is_trade_page={is_trade_page} is_won={is_won} position={position} />\n        </div>\n    );\n};\n\nLastDigitPrediction.propTypes = {\n    barrier: PropTypes.number,\n    contract_type: PropTypes.string,\n    digits: PropTypes.array,\n    digits_info: PropTypes.object,\n    dimension: PropTypes.number,\n    has_entry_spot: PropTypes.bool,\n    is_digit_contract: PropTypes.bool,\n    is_ended: PropTypes.bool,\n    is_trade_page: PropTypes.bool,\n    status: PropTypes.string,\n    trade_type: PropTypes.string,\n    onDigitChange: PropTypes.func,\n    onLastDigitSpot: PropTypes.func,\n    selected_digit: PropTypes.number,\n    tick: PropTypes.object,\n};\n\nexport default observer(LastDigitPrediction);\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { toJS } from 'mobx';\nimport { DesktopWrapper, MobileWrapper, Popover, Text } from '@deriv/components';\nimport { isMobile, useIsMounted, isContractElapsed } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\nimport { Bounce, SlideIn } from 'App/Components/Animations';\nimport { getMarketNamesMap } from '../../../../Constants';\nimport { DigitSpot, LastDigitPrediction } from '../LastDigitPrediction';\nimport 'Sass/app/modules/contract/digits.scss';\n\nconst DigitsWrapper = ({\n    contract_info,\n    digits_array,\n    digits_info,\n    display_status,\n    is_digit_contract,\n    is_ended,\n    is_trade_page,\n    onDigitChange,\n    selected_digit,\n    trade_type,\n    onChangeStatus,\n    ...props\n}) => {\n    const has_contract = contract_info.date_start;\n    let tick = props.tick;\n\n    const is_tick_ready = is_trade_page ? !!tick : true;\n    const is_contract_elapsed = is_trade_page ? isContractElapsed(contract_info, tick) : false;\n    const status = !is_contract_elapsed && is_tick_ready ? display_status : null;\n\n    // tick from contract_info.tick_stream has totally different\n    // format from the tick from tick_history api call.\n    if (has_contract && !is_contract_elapsed) {\n        tick = null;\n        const tick_stream = contract_info.tick_stream;\n        if (tick_stream && tick_stream.length) {\n            const t = toJS(tick_stream.slice(-1)[0]);\n            tick = {\n                ask: t.tick,\n                bid: t.tick,\n                epoch: t.epoch,\n                pip_size: t.tick_display_value.split('.')[1].length,\n                current_tick: tick_stream.length,\n            };\n        }\n    }\n\n    React.useEffect(() => {\n        if (onChangeStatus) {\n            onChangeStatus({ status, current_tick: tick ? tick.current_tick : null });\n        }\n    }, [tick, is_trade_page, display_status, onChangeStatus, status]);\n\n    return (\n        <LastDigitPrediction\n            // dimension of a single digit widget including margin/padding (number)\n            // i.e - 40px + 6px left and 6px right padding/margin = 52\n            dimension={isMobile() ? 64 : 52}\n            has_entry_spot={!!contract_info.entry_tick}\n            barrier={!is_contract_elapsed && is_tick_ready ? +contract_info.barrier : null}\n            contract_type={!is_contract_elapsed && is_tick_ready ? contract_info.contract_type : null}\n            digits={digits_array}\n            digits_info={!is_contract_elapsed && is_tick_ready ? digits_info : {}}\n            is_digit_contract={is_digit_contract}\n            is_ended={is_ended}\n            is_trade_page={is_trade_page}\n            status={status}\n            tick={tick}\n            trade_type={trade_type}\n            onDigitChange={onDigitChange}\n            selected_digit={selected_digit}\n            onLastDigitSpot={props.onLastDigitSpot}\n        />\n    );\n};\n\nconst Digits = React.memo(props => {\n    const [status, setStatus] = React.useState();\n    const [current_tick, setCurrentTick] = React.useState();\n    const [spot, setSpot] = React.useState();\n    const [is_selected_winning, setIsSelectedWinning] = React.useState();\n    const [is_latest, setIsLatest] = React.useState();\n    const [is_won, setIsWon] = React.useState();\n    const [is_lost, setIsLost] = React.useState();\n    const isMounted = useIsMounted();\n\n    const { contract_info, digits_array, is_digit_contract, is_trade_page, underlying } = props;\n\n    const onChangeStatus = params => {\n        setStatus(params.status);\n        setCurrentTick(params.current_tick);\n    };\n\n    const onLastDigitSpot = params => {\n        setSpot(params.spot);\n        setIsLost(params.is_lost);\n        setIsSelectedWinning(params.is_selected_winning);\n        setIsLatest(params.is_latest);\n        setIsWon(params.is_won);\n    };\n\n    const getPopoverMessage = () => {\n        const underlying_name = is_trade_page ? underlying : contract_info.underlying;\n\n        return localize('Last digit stats for latest 1000 ticks for {{underlying_name}}', {\n            underlying_name: getMarketNamesMap()[underlying_name.toUpperCase()],\n        });\n    };\n\n    return (\n        <React.Fragment>\n            <DesktopWrapper>\n                <SlideIn\n                    is_visible={(digits_array || is_digit_contract) && isMounted()}\n                    className='digits__container'\n                    keyname='digits'\n                    type='bottom'\n                >\n                    {is_trade_page && (\n                        <div className='digits__tooltip-container'>\n                            <Popover\n                                alignment='top'\n                                classNameBubble='digits__tooltip-bubble'\n                                icon='info'\n                                id='dt_last_digits_info_tooltip'\n                                margin={4}\n                                message={getPopoverMessage()}\n                            />\n                        </div>\n                    )}\n                    <DigitsWrapper {...props} />\n                </SlideIn>\n            </DesktopWrapper>\n            <MobileWrapper>\n                <div className='digits__container'>\n                    <Bounce\n                        is_visible={!!(is_digit_contract && status && spot && !!contract_info.entry_tick)}\n                        className={classNames('digits__digit-spot', {\n                            'digits__digit-spot--is-trading': is_trade_page,\n                        })}\n                        keyname='digits__digit-spot'\n                    >\n                        {is_trade_page && (\n                            <Text size='xs' align='center' className='digits__digit-spot-value'>\n                                <Localize i18n_default_text='Tick {{current_tick}} - ' values={{ current_tick }} />\n                            </Text>\n                        )}\n                        <DigitSpot\n                            current_spot={spot}\n                            is_lost={is_lost}\n                            is_selected_winning={is_selected_winning}\n                            is_visible={!!(is_latest && spot)}\n                            is_won={is_won}\n                        />\n                    </Bounce>\n                    <DigitsWrapper {...props} onChangeStatus={onChangeStatus} onLastDigitSpot={onLastDigitSpot} />\n                </div>\n            </MobileWrapper>\n        </React.Fragment>\n    );\n});\n\nDigits.displayName = 'Digits';\n\nDigits.propTypes = {\n    contract_info: PropTypes.object,\n    digits_array: PropTypes.array,\n    digits_info: PropTypes.object,\n    display_status: PropTypes.string,\n    is_digit_contract: PropTypes.bool,\n    is_ended: PropTypes.bool,\n    is_trade_page: PropTypes.bool,\n    trade_type: PropTypes.string,\n    onDigitChange: PropTypes.func,\n    selected_digit: PropTypes.number,\n    underlying: PropTypes.string,\n};\n\nexport default Digits;\n","import Digits from './digits.jsx';\n\nexport default Digits;\n","import React from 'react';\nimport { PageError } from '@deriv/components';\nimport { routes, getUrlBase } from '@deriv/shared';\n\nimport { localize } from '@deriv/translations';\n\nconst Page404 = () => (\n    <PageError\n        header={localize('We couldn’t find that page')}\n        messages={[\n            localize('You may have followed a broken link, or the page has moved to a new address.'),\n            localize('Error code: {{error_code}} page not found', { error_code: 404 }),\n        ]}\n        redirect_urls={[routes.trade]}\n        redirect_labels={[localize('Return to trade')]}\n        classNameImage='page-404__image'\n        image_url={getUrlBase('/public/images/common/404.png')}\n    />\n);\n\nexport default Page404;\n","import Page404 from './Components/Page404.jsx';\n\nexport default Page404;\n","import { toJS } from 'mobx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { FastMarker } from 'Modules/SmartChart';\n\nconst ChartMarker = ({ marker_config, marker_content_props, is_bottom_widget_visible }) => {\n    const { ContentComponent, custom_className, ...marker_props } = marker_config;\n\n    // TODO:\n    //  - rename x to epoch\n    //  - rename y to price\n    const onRef = ref => {\n        if (ref) {\n            // NOTE: null price means vertical line.\n            if (!marker_props.y) {\n                const margin = (is_bottom_widget_visible ? 115 : 0) + 24; // digit contracts have a widget at the bottom // height of line marker icon\n\n                ref.div.style.height = `calc(100% - ${margin}px)`;\n                ref.div.style.zIndex = '-1';\n            }\n            ref.setPosition({\n                epoch: +marker_props.x,\n                price: +marker_props.y,\n            });\n        }\n    };\n\n    // memoizing the marker components data:\n    const getMemoizedComponent = React.useCallback(() => {\n        return <ContentComponent {...toJS(marker_content_props)} />;\n    }, [marker_content_props]);\n\n    return (\n        <FastMarker markerRef={onRef} className={custom_className}>\n            {getMemoizedComponent()}\n        </FastMarker>\n    );\n};\n\nChartMarker.propTypes = {\n    is_bottom_widget_visible: PropTypes.bool,\n    marker_config: PropTypes.object,\n    marker_content_props: PropTypes.object,\n};\n\nexport default ChartMarker;\n","// THIS FILE CONTAINS THE ICONS RENDERED IN CANVAS2D CONTEXT.\n\n// All path commands *MUST* be absolute (MCLVQZ).\n// Use figma.com which by default exports paths as absolute.\n// Only <path /> tags is supported.\nconst parse_svg = markup => {\n    // make tests pass\n    if (!window.DOMParser) {\n        return null;\n    }\n\n    const parser = new window.DOMParser();\n    const svg = parser.parseFromString(markup, 'image/svg+xml').children[0];\n    let { width, height } = svg.attributes;\n    width = width.value * 1;\n    height = height.value * 1;\n\n    const paths = [];\n    [].forEach.call(svg.children, p => {\n        const { d, fill, stroke } = p.attributes;\n        paths.push({\n            points: d.value\n                .match(/M|C|H|A|L|V|-?\\d*(\\.\\d+)?/g)\n                .filter(e => e)\n                .map(e => ('MCHALV'.indexOf(e) === -1 ? e * 1 : e)),\n            fill: fill && fill.value,\n            stroke: stroke && stroke.value,\n        });\n    });\n    function with_color(color, bg_color = 'white') {\n        return {\n            width,\n            height,\n            paths: paths.map(({ points, fill, stroke }) => ({\n                points,\n                stroke,\n                fill: fill !== 'white' ? color : bg_color,\n            })),\n        };\n    }\n\n    return {\n        width,\n        height,\n        paths,\n        with_color,\n    };\n};\n\nexport const START = parse_svg(`\n<svg width=\"15\" height=\"20\" viewBox=\"0 0 15 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M7,20 C11.2,14.4 14,10.8659932 14,7 C14,3.13400675 10.8659932,0 7,0 C3.13400675,0 0,3.13400675 0,7 C0,10.8659932 2.8,14.4 7,20 Z\" fill=\"#333333\"/>\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"A7 7 4.2 0 6.283185307179586\" fill=\"white\" />\n</svg>`);\n\nexport const END = parse_svg(`\n<svg width=\"19\" height=\"20\" viewBox=\"0 0 19 20\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2 2L18 2L18 12L2 12Z\" fill=\"white\" />\n<path fill-rule=\"evenodd\" clip-rule=\"evenodd\" d=\"M2,0 L2,1 L19,1 L19,12 L2,12 L2,20 L1,20 L1,0 L2,0 Z M18,8 L15,8 L15,11 L18,11 L18,8 Z M12,8 L9,8 L9,11 L12,11 L12,8 Z M6,8 L3,8 L3,11 L6,11 L6,8 Z M15,5 L12,5 L12,8 L15,8 L15,5 Z M9,5 L6,5 L6,8 L9,8 L9,5 Z M6,2 L3,2 L3,5 L6,5 L6,2 Z M18,2 L15,2 L15,5 L18,5 L18,2 Z M12,2 L9,2 L9,5 L12,5 L12,2 Z\" fill=\"#333333\"/>\n</svg>\n`);\n","// Things to do before touching this file :P\n// 1- Please read https://developer.mozilla.org/en-US/docs/Web/API/Canvas_API/Tutorial\n// 2- Please read RawMarker.jsx in https://github.com/binary-com/SmartCharts\n// 3- Please read contract-store.js & trade.jsx carefully\nimport React from 'react';\nimport { getDecimalPlaces, isAccumulatorContract, isAccumulatorContractOpen, isVanillaContract } from '@deriv/shared';\nimport { RawMarker } from 'Modules/SmartChart';\nimport * as ICONS from './icons';\n\nconst is_firefox = navigator.userAgent.search('Firefox') > 0;\n\nconst RawMarkerMaker = draw_callback => {\n    const Marker = ({ epoch_array, price_array, ...rest }) => (\n        <RawMarker\n            epoch_array={epoch_array}\n            price_array={price_array}\n            draw_callback={args => draw_callback({ ...args, ...rest })}\n        />\n    );\n    return Marker;\n};\n\nconst dark_theme = {\n    accu_contract_shade: '#00a79e14',\n    accu_shade: '#377cfc14',\n    accu_shade_crossed: '#cc2e3d14',\n    bg: '#0e0e0e',\n    fg: '#ffffff',\n    grey_border: '#6e6e6e',\n    lost: '#cc2e3d',\n    open: '#377cfc',\n    sold: '#ffad3a',\n    won: '#00a79e',\n};\n\nconst light_theme = {\n    accu_contract_shade: '#4bb4b314',\n    accu_shade: '#377cfc14',\n    accu_shade_crossed: '#ec3f3f14',\n    bg: '#ffffff',\n    fg: '#333333',\n    grey_border: '#999999',\n    lost: '#ec3f3f',\n    open: '#377cfc',\n    sold: '#ffad3a',\n    won: '#4bb4b3',\n};\n\nfunction getColor({ status, profit, is_dark_theme, is_vanilla }) {\n    const colors = is_dark_theme ? dark_theme : light_theme;\n    let color = colors[status || 'open'];\n    if (is_vanilla) {\n        if (status === 'open') return colors.open;\n        return colors[profit > 0 ? 'won' : 'lost'];\n    }\n    if (status === 'open' && profit) {\n        color = colors[profit > 0 ? 'won' : 'lost'];\n    }\n    return color;\n}\n\nconst calc_scale = zoom => {\n    return zoom ? Math.max(Math.min(Math.sqrt(zoom / 18), 1.2), 0.8) : 1;\n};\n\nconst hex_map = [];\nconst calc_opacity = (from, to) => {\n    if (hex_map.length === 0) {\n        for (let i = 255; i >= 0; --i) {\n            hex_map[i] = (i < 16 ? '0' : '') + i.toString(16);\n        }\n    }\n    const opacity = Math.floor(Math.min(Math.max(to - from - 10, 0) / 6, 1) * 255);\n    return hex_map[opacity];\n};\n\n/** @param {CanvasRenderingContext2D} ctx */\nconst draw_path = (ctx, { zoom, top, left, icon }) => {\n    ctx.save();\n    const scale = calc_scale(zoom);\n\n    ctx.translate(left - (icon.width * scale) / 2, top - (icon.height * scale) / 2);\n\n    ctx.scale(scale, scale);\n\n    icon.paths.forEach(({ points, fill, stroke }) => {\n        if (fill) {\n            ctx.fillStyle = fill;\n        }\n        if (stroke) {\n            ctx.strokeStyle = stroke;\n        }\n        ctx.beginPath();\n        let prev_x, prev_y;\n        for (let idx = 0; idx < points.length; idx++) {\n            let x, y, cx1, cx2, cy1, cy2, r;\n            if (points[idx] === 'M') {\n                x = points[++idx];\n                y = points[++idx];\n                ctx.moveTo(x, y);\n            } else if (points[idx] === 'L') {\n                x = points[++idx];\n                y = points[++idx];\n                ctx.lineTo(x, y);\n            } else if (points[idx] === 'V') {\n                y = points[++idx];\n                ctx.lineTo(prev_x, y);\n            } else if (points[idx] === 'H') {\n                x = points[++idx];\n                ctx.lineTo(x, prev_y);\n            } else if (points[idx] === 'Q') {\n                cx1 = points[++idx];\n                cy1 = points[++idx];\n                x = points[++idx];\n                y = points[++idx];\n                ctx.quadraticCurveTo(cx1, cy1, x, y);\n            } else if (points[idx] === 'C') {\n                cx1 = points[++idx];\n                cy1 = points[++idx];\n                cx2 = points[++idx];\n                cy2 = points[++idx];\n                x = points[++idx];\n                y = points[++idx];\n                ctx.bezierCurveTo(cx1, cy1, cx2, cy2, x, y);\n            } else if (points[idx] === 'A') {\n                x = points[++idx];\n                y = points[++idx];\n                r = points[++idx];\n                const start_a = points[++idx];\n                const end_a = points[++idx];\n                ctx.arc(x, y, r, start_a, end_a);\n            }\n            prev_x = x;\n            prev_y = y;\n        }\n        ctx.closePath();\n        if (fill) {\n            ctx.fill();\n        }\n        if (stroke) {\n            ctx.stroke();\n        }\n    });\n    ctx.scale(1, 1);\n    ctx.restore();\n};\n\nconst draw_shaded_barriers = ({\n    ctx,\n    labels,\n    start_left,\n    top,\n    bottom,\n    stroke_color,\n    fill_color,\n    has_persistent_borders,\n    previous_tick,\n    scale,\n}) => {\n    ctx.save();\n    const end_left = ctx.canvas.offsetWidth - ctx.canvas.parentElement.stx.panels.chart.yaxisTotalWidthRight;\n    const end_top = ctx.canvas.offsetHeight - ctx.canvas.parentElement.stx.xaxisHeight;\n    const is_top_visible = top < end_top && (top >= 0 || !has_persistent_borders);\n    const is_bottom_visible = bottom < end_top;\n    // using 2 instead of 0 to distance the top barrier line from the top of the chart and make it clearly visible in C.Details:\n    const persistent_top = top < 0 && has_persistent_borders ? 2 : end_top;\n    const displayed_top = is_top_visible ? top : persistent_top;\n    const displayed_bottom = is_bottom_visible ? bottom : end_top;\n    const is_start_left_visible = start_left < end_left;\n    const middle_top = bottom - Math.abs(bottom - top) / 2;\n    if (!is_start_left_visible) return;\n    ctx.lineWidth = 1;\n    ctx.strokeStyle = stroke_color;\n    ctx.setLineDash([]);\n\n    if (is_top_visible || has_persistent_borders) {\n        ctx.fillStyle = stroke_color;\n        // draw difference between high barrier and previous spot price\n        if (labels?.top) {\n            ctx.textAlign = 'right';\n            ctx.font = '14px IBM Plex Sans';\n            ctx.fillText(labels?.top, end_left - 1, displayed_top - 10);\n        }\n        // draw top barrier with an arrow\n        ctx.beginPath();\n        ctx.moveTo(end_left, displayed_top);\n        ctx.lineTo(start_left - 2.5, displayed_top);\n        ctx.lineTo(start_left, displayed_top + 4.5);\n        ctx.lineTo(start_left + 2.5, displayed_top);\n        ctx.fill();\n        ctx.stroke();\n    }\n    if (middle_top < end_top) {\n        const global_composite_operation = ctx.globalCompositeOperation;\n        ctx.globalCompositeOperation = 'destination-over';\n        const { radius, preceding_tick, stroke_color: prev_tick_stroke_color } = previous_tick || {};\n        if (preceding_tick) {\n            // draw markers for previous tick & a tick preceding previous tick in C.Details\n            if (preceding_tick) {\n                ctx.strokeStyle = preceding_tick.color;\n                ctx.fillStyle = preceding_tick.color;\n                ctx.beginPath();\n                ctx.arc(preceding_tick.left - 1, preceding_tick.top, radius, 0, Math.PI * 2);\n                ctx.fill();\n                ctx.stroke();\n            }\n            ctx.strokeStyle = prev_tick_stroke_color;\n            ctx.fillStyle = prev_tick_stroke_color;\n            ctx.beginPath();\n            ctx.arc(start_left - 1, middle_top, radius, 0, Math.PI * 2);\n            ctx.fill();\n            ctx.stroke();\n        } else if (prev_tick_stroke_color) {\n            // draw previous tick marker in DTrader\n            ctx.strokeStyle = prev_tick_stroke_color;\n            ctx.fillStyle = prev_tick_stroke_color;\n            ctx.beginPath();\n            ctx.arc(start_left - 1 * scale, middle_top, radius, 0, Math.PI * 2);\n            ctx.fill();\n            ctx.stroke();\n        }\n        // draw horizontal dashed line between barriers to accentuate that they're related to previous tick\n        ctx.strokeStyle = stroke_color;\n        ctx.beginPath();\n        ctx.setLineDash([2, 4]);\n        ctx.moveTo(start_left + (radius || 0), middle_top);\n        ctx.lineTo(end_left, middle_top);\n        ctx.stroke();\n        ctx.globalCompositeOperation = global_composite_operation;\n    }\n    if (is_bottom_visible || has_persistent_borders) {\n        ctx.fillStyle = stroke_color;\n        // draw difference between low barrier and previous spot price\n        if (labels?.bottom && displayed_bottom + 12 < end_top) {\n            ctx.textAlign = 'right';\n            ctx.font = '14px IBM Plex Sans';\n            ctx.fillText(labels?.bottom, end_left - 1, displayed_bottom + 12);\n        }\n        // draw bottom barrier with an arrow\n        ctx.beginPath();\n        ctx.setLineDash([]);\n        ctx.moveTo(end_left, displayed_bottom);\n        ctx.lineTo(start_left - 2.5, displayed_bottom);\n        ctx.lineTo(start_left, displayed_bottom - 4.5);\n        ctx.lineTo(start_left + 2.5, displayed_bottom);\n        ctx.fill();\n        ctx.stroke();\n    }\n    // draw shaded area between barriers\n    ctx.fillStyle = fill_color;\n    ctx.fillRect(start_left, displayed_top, end_left - start_left, Math.abs(displayed_bottom - displayed_top));\n    ctx.restore();\n};\n\nconst render_label = ({ ctx, text, tick: { zoom, left, top } }) => {\n    const scale = calc_scale(zoom);\n    const size = Math.floor(scale * 3 + 7);\n    ctx.font = `${size}px Roboto`;\n    text.split(/\\n/).forEach((line, idx) => {\n        const w = Math.ceil(ctx.measureText(line).width);\n        ctx.fillText(line, left - 5 - w, top + idx * size + 1);\n    });\n};\n\nconst shadowed_text = ({ ctx, color, is_dark_theme, text, left, top, scale }) => {\n    ctx.save();\n    ctx.textAlign = 'center';\n    const size = Math.floor(scale * 12);\n    ctx.font = `bold ${size}px BinarySymbols, Roboto`;\n    if (color) ctx.fillStyle = color;\n    if (!is_firefox) {\n        ctx.shadowColor = is_dark_theme ? 'rgba(16,19,31,1)' : 'rgba(255,255,255,1)';\n        ctx.shadowBlur = 12;\n    }\n    // fillText once in firefox due to disabling of text shadows, for default cases where its enabled, set to 5 (to add blur intensity)\n    for (let i = 0; i < (is_firefox ? 1 : 5); ++i) {\n        ctx.fillText(text, left, top);\n    }\n    ctx.restore();\n};\n\nconst TickContract = RawMarkerMaker(\n    ({\n        ctx: context,\n        canvas_height: canvas_fixed_height,\n        points: [start, ...ticks],\n        prices: [barrier, barrier_2], // TODO: support two barrier contracts\n        is_last_contract,\n        is_dark_theme,\n        is_in_contract_details,\n        is_mobile,\n        granularity,\n        contract_info: {\n            accu_barriers_difference,\n            contract_type,\n            // exit_tick_time,\n            status,\n            profit,\n            has_crossed_accu_barriers,\n            is_accumulator_trade_without_contract,\n            is_sold,\n            // tick_stream,\n            tick_count,\n        },\n    }) => {\n        /** @type {CanvasRenderingContext2D} */\n        const ctx = context;\n\n        const color = getColor({\n            is_dark_theme,\n            status,\n            profit: is_sold ? profit : null,\n        });\n\n        const draw_start_line = is_last_contract && start.visible && !is_sold;\n        const is_accumulator_contract = isAccumulatorContract(contract_type);\n        const is_contract_ended = status !== 'open';\n        const scale = calc_scale(start.zoom);\n        const canvas_height = canvas_fixed_height / window.devicePixelRatio;\n\n        [barrier, barrier_2].filter(Boolean).forEach(b => {\n            b = Math.min(Math.max(b, 2), canvas_height - 32); // eslint-disable-line\n        });\n\n        const entry = ticks[0];\n        const exit = ticks[ticks.length - 1];\n        const previous_tick = ticks[ticks.length - 2] || exit;\n        const opacity = is_sold ? calc_opacity(start.left, exit.left) : '';\n\n        if (start && is_accumulator_trade_without_contract) {\n            // draw 2 barriers with a shade between them for ACCU trade without contracts\n            draw_shaded_barriers({\n                bottom: barrier_2,\n                ctx,\n                fill_color: getColor({\n                    status: has_crossed_accu_barriers ? 'accu_shade_crossed' : 'accu_shade',\n                    is_dark_theme,\n                }),\n                labels: accu_barriers_difference,\n                previous_tick: {\n                    stroke_color: getColor({ status: 'fg', is_dark_theme }) + opacity,\n                    radius: 1.5 * scale,\n                },\n                start_left: start.left,\n                stroke_color: getColor({ status: has_crossed_accu_barriers ? 'lost' : 'open', is_dark_theme }),\n                top: barrier,\n                scale,\n            });\n            return;\n        }\n        if (\n            barrier &&\n            barrier_2 &&\n            (((previous_tick || exit) && is_accumulator_contract && is_in_contract_details) ||\n                (!contract_type && start))\n        ) {\n            // draw 2 barriers with a shade between them for an ongoing ACCU contract:\n            const is_accu_contract_open = isAccumulatorContractOpen(\n                { contract_type, current_spot: exit?.top, high_barrier: barrier, low_barrier: barrier_2, status },\n                true\n            );\n            const contract_details_start_left = is_accu_contract_open ? exit?.left : previous_tick?.left;\n            const preceding_tick = ticks.length > 2 && is_accu_contract_open && ticks[ticks.length - 2];\n            draw_shaded_barriers({\n                bottom: barrier_2,\n                ctx,\n                fill_color: getColor({\n                    status:\n                        has_crossed_accu_barriers || status === 'lost' ? 'accu_shade_crossed' : 'accu_contract_shade',\n                    is_dark_theme,\n                }),\n                // we should show barrier lines in contract details even when they are outside of the chart:\n                has_persistent_borders: is_in_contract_details,\n                labels: !is_in_contract_details && accu_barriers_difference,\n                previous_tick: is_in_contract_details\n                    ? {\n                          radius: is_mobile ? 1.5 : 2.5,\n                          stroke_color: getColor({ status: 'open', is_dark_theme }),\n                          preceding_tick: {\n                              ...preceding_tick,\n                              color: getColor({ status: 'grey_border', is_dark_theme }),\n                          },\n                      }\n                    : {\n                          stroke_color: color + opacity,\n                          radius: 1.5 * scale,\n                      },\n                scale,\n                start_left: is_in_contract_details ? contract_details_start_left : start.left,\n                stroke_color: getColor({\n                    status: has_crossed_accu_barriers || status === 'lost' ? 'lost' : 'won',\n                    is_dark_theme,\n                }),\n                top: barrier,\n            });\n        }\n        if (is_in_contract_details) return;\n\n        ctx.strokeStyle = color;\n        ctx.fillStyle = color;\n\n        if (draw_start_line) {\n            render_label({\n                ctx,\n                text: 'Start\\nTime',\n                tick: { zoom: start.zoom, left: start.left - 1 * scale, top: canvas_height - 50 },\n            });\n            ctx.beginPath();\n            ctx.setLineDash([3, 3]);\n            ctx.moveTo(start.left - 1 * scale, 0);\n            if (ticks.length && barrier && !is_accumulator_contract) {\n                ctx.lineTo(start.left - 1 * scale, barrier - 34 * scale);\n                ctx.moveTo(start.left - 1 * scale, barrier + 4 * scale);\n            }\n            ctx.lineTo(start.left - 1 * scale, canvas_fixed_height);\n            ctx.stroke();\n        }\n\n        if (!ticks.length || !barrier) {\n            ctx.restore();\n            return;\n        }\n\n        // barrier line\n        if ((start.visible || entry.visible || exit.visible) && (!is_accumulator_contract || is_contract_ended)) {\n            const top = is_accumulator_contract ? entry.top : barrier;\n            ctx.strokeStyle = color + opacity;\n            ctx.beginPath();\n            ctx.setLineDash([1, 1]);\n            ctx.moveTo(start.left, top);\n            ctx.lineTo(entry.left, top);\n            ctx.stroke();\n\n            ctx.beginPath();\n            ctx.setLineDash([]);\n            ctx.moveTo(entry.left, top);\n            ctx.lineTo(exit.left, top);\n            ctx.stroke();\n            ctx.strokeStyle = color;\n        }\n\n        // ticks for last contract\n        if (is_last_contract && granularity === 0 && !is_sold && !is_accumulator_contract) {\n            ticks\n                .filter(tick => tick.visible)\n                .forEach(tick => {\n                    const clr = tick === exit ? color : getColor({ status: 'fg', is_dark_theme });\n                    ctx.fillStyle = clr + opacity;\n                    ctx.beginPath();\n                    ctx.arc(tick.left - 1 * scale, tick.top, 1.5 * scale, 0, Math.PI * 2);\n                    ctx.fill();\n                });\n            ctx.fillStyle = color;\n        }\n        // entry & expiry markers\n        if (granularity === 0) {\n            [entry, is_contract_ended ? exit : null].forEach(tick => {\n                if (tick && tick.visible) {\n                    ctx.strokeStyle = color + opacity;\n                    ctx.setLineDash([2, 2]);\n                    ctx.beginPath();\n                    ctx.moveTo(tick.left - 1 * scale, tick.top);\n                    if (tick === entry && is_accumulator_contract) {\n                        // draw line to start marker having the same y-coordinates:\n                        ctx.lineTo(start.left - 1 * scale, entry.top);\n                    } else if (tick === exit && is_accumulator_contract) {\n                        // draw dashed line from end icon to exit tick:\n                        ctx.moveTo(exit.left, entry.top);\n                        ctx.lineTo(exit.left, exit.top);\n                    } else ctx.lineTo(tick.left - 1 * scale, barrier);\n                    ctx.stroke();\n\n                    ctx.fillStyle = color + opacity;\n                    ctx.beginPath();\n                    ctx.arc(tick.left - 1 * scale, tick.top, 3 * scale, 0, Math.PI * 2);\n                    ctx.fill();\n\n                    if (tick === entry) {\n                        ctx.beginPath();\n                        ctx.fillStyle = getColor({ status: 'bg', is_dark_theme }) + opacity;\n                        ctx.arc(tick.left - 1 * scale, tick.top, 2 * scale, 0, Math.PI * 2);\n                        ctx.fill();\n                    }\n                }\n            });\n            ctx.strokeStyle = color;\n            ctx.fillStyle = color;\n        }\n        // count down\n        if (start.visible && !is_sold && !is_accumulator_contract) {\n            shadowed_text({\n                ctx,\n                scale,\n                is_dark_theme,\n                text: `${ticks.length - 1}/${tick_count}`,\n                left: start.left,\n                top: barrier - 27 * scale,\n            });\n        }\n\n        // start-time marker\n        if (start.visible) {\n            draw_path(ctx, {\n                top: is_accumulator_contract ? entry.top - 9 * scale : barrier - 9 * scale,\n                left: start.left - 1 * scale,\n                zoom: start.zoom,\n                icon: ICONS.START.with_color(\n                    color + (is_sold ? opacity : ''),\n                    getColor({ status: 'bg', is_dark_theme }) + (is_sold ? opacity : '')\n                ),\n            });\n        }\n        // status marker\n        if (exit.visible && is_sold) {\n            draw_path(ctx, {\n                top: is_accumulator_contract ? entry.top - 9 * scale : barrier - 9 * scale,\n                left: exit.left + 8 * scale,\n                zoom: exit.zoom,\n                icon: ICONS.END.with_color(color, getColor({ status: 'bg', is_dark_theme })),\n            });\n        }\n        ctx.restore();\n    }\n);\n\nconst currency_symbols = {\n    AUD: '\\u0041\\u0024',\n    EUR: '\\u20AC',\n    GBP: '\\u00A3',\n    JPY: '\\u00A5',\n    USD: '\\u0024',\n    BTC: '\\u20bf',\n    BCH: '\\ue901',\n    ETH: '\\u0045',\n    ETC: '\\ue900',\n    LTC: '\\u0141',\n    UST: '\\u20ae',\n};\n\nconst NonTickContract = RawMarkerMaker(\n    ({\n        ctx: context,\n        canvas_height: canvas_fixed_height,\n        points: [start, expiry, entry, exit],\n        is_last_contract,\n        prices: [barrier, entry_tick_top, exit_tick_top], // TODO: support two barrier contracts\n        is_dark_theme,\n        granularity,\n        currency,\n        contract_info: {\n            contract_type,\n            // exit_tick_time,\n            // is_expired,\n            is_sold,\n            status,\n            profit,\n        },\n    }) => {\n        /** @type {CanvasRenderingContext2D} */\n        const ctx = context;\n\n        // the y value reported for candles is not accurate\n        if (granularity !== 0) {\n            if (entry) {\n                entry.top = entry_tick_top;\n            }\n            if (exit) {\n                exit.top = exit_tick_top;\n            }\n        }\n\n        const color = getColor({ status, profit, is_dark_theme, is_vanilla: isVanillaContract(contract_type) });\n\n        ctx.save();\n        ctx.strokeStyle = color;\n        ctx.fillStyle = color;\n\n        const draw_start_line = is_last_contract && start.visible && !is_sold;\n        const show_profit = is_last_contract && !is_sold && profit && start.visible && barrier;\n        const scale = calc_scale(start.zoom);\n        const opacity = is_sold ? calc_opacity(start.left, expiry.left) : '';\n\n        const canvas_height = canvas_fixed_height / window.devicePixelRatio;\n        if (barrier) {\n            barrier = Math.min(Math.max(barrier, 2), canvas_height - 32); // eslint-disable-line\n        }\n\n        if (draw_start_line) {\n            render_label({\n                ctx,\n                text: 'Start\\nTime',\n                tick: {\n                    zoom: start.zoom,\n                    left: start.left - 1 * scale,\n                    top: canvas_height - 50,\n                },\n            });\n            ctx.beginPath();\n            ctx.setLineDash([3, 3]);\n            ctx.moveTo(start.left - 1 * scale, 0);\n            if (barrier) {\n                ctx.lineTo(start.left - 1 * scale, barrier - (show_profit ? 38 : 20) * scale);\n                ctx.moveTo(start.left - 1 * scale, barrier + 4 * scale);\n            }\n            ctx.lineTo(start.left - 1 * scale, canvas_fixed_height);\n            ctx.stroke();\n        }\n        // barrier line\n        if (barrier && entry && (start.visible || expiry.visible || Math.sign(start.left) !== Math.sign(expiry.left))) {\n            ctx.strokeStyle = color + opacity;\n            ctx.beginPath();\n            ctx.setLineDash([1, 1]);\n            ctx.moveTo(start.left, barrier);\n            ctx.lineTo(entry.left, barrier);\n            ctx.stroke();\n\n            ctx.beginPath();\n            ctx.setLineDash([]);\n            ctx.moveTo(entry.left, barrier);\n            ctx.lineTo(expiry.left, barrier);\n            ctx.stroke();\n            ctx.strokeStyle = color;\n        }\n\n        // entry & expiry tick markers\n        [entry, exit].forEach(tick => {\n            if (tick && tick.visible) {\n                ctx.strokeStyle = color + opacity;\n                ctx.setLineDash([2, 2]);\n                ctx.beginPath();\n                ctx.moveTo(tick.left - 1 * scale, tick.top);\n                ctx.lineTo(tick.left - 1 * scale, barrier);\n                ctx.stroke();\n\n                ctx.fillStyle = color + opacity;\n                ctx.beginPath();\n                ctx.arc(tick.left - 1 * scale, tick.top, 3 * scale, 0, Math.PI * 2);\n                ctx.fill();\n\n                if (tick === entry) {\n                    ctx.beginPath();\n                    ctx.fillStyle = getColor({ status: 'bg', is_dark_theme }) + opacity;\n                    ctx.arc(tick.left - 1 * scale, tick.top, 2 * scale, 0, Math.PI * 2);\n                    ctx.fill();\n                }\n                ctx.fillStyle = color;\n                ctx.strokeStyle = color;\n            }\n        });\n\n        // start-time marker\n        if (start && start.visible && barrier) {\n            draw_path(ctx, {\n                top: barrier - 9 * scale,\n                left: start.left - 1 * scale,\n                zoom: start.zoom,\n                icon: ICONS.START.with_color(color + opacity),\n            });\n        }\n        // show the profit\n        if (show_profit) {\n            const symbol = currency_symbols[currency] || '';\n            const decimal_places = getDecimalPlaces(currency);\n            const sign = profit < 0 ? '-' : profit > 0 ? '+' : ' '; // eslint-disable-line\n            const text = `${sign}${symbol}${Math.abs(profit).toFixed(decimal_places)}`;\n            shadowed_text({\n                ctx,\n                color: getColor({ status: 'open', profit }),\n                scale,\n                text,\n                is_dark_theme,\n                left: start.left,\n                top: barrier - 28 * scale,\n            });\n        }\n        // status marker\n        if (expiry.visible) {\n            draw_path(ctx, {\n                top: barrier - 9 * scale,\n                left: expiry.left + 8 * scale,\n                zoom: expiry.zoom,\n                icon: ICONS.END.with_color(color, getColor({ status: 'bg', is_dark_theme })),\n            });\n        }\n        ctx.restore();\n    }\n);\n\nconst DigitContract = RawMarkerMaker(\n    ({\n        ctx: context,\n        points: [start, ...ticks],\n        prices: [entry_tick_top, exit_tick_top],\n        is_last_contract,\n        is_dark_theme,\n        granularity,\n        contract_info: {\n            // contract_type,\n            status,\n            profit,\n            is_sold,\n            // barrier,\n            tick_stream,\n            tick_count,\n        },\n    }) => {\n        /** @type {CanvasRenderingContext2D} */\n        const ctx = context;\n\n        const color = getColor({\n            is_dark_theme,\n            status,\n            profit: is_sold ? profit : null,\n        });\n\n        ctx.save();\n        ctx.strokeStyle = color;\n        ctx.fillStyle = color;\n\n        const draw_start_line = is_last_contract && start.visible && !is_sold;\n        const scale = calc_scale(start.zoom);\n\n        if (granularity !== 0 && start && entry_tick_top) {\n            start.top = entry_tick_top;\n        }\n        if (draw_start_line) {\n            ctx.beginPath();\n            ctx.setLineDash([3, 3]);\n            ctx.moveTo(start.left - 1 * scale, 0);\n            if (ticks.length) {\n                ctx.lineTo(start.left - 1 * scale, start.top - 34 * scale);\n                ctx.moveTo(start.left - 1 * scale, start.top + 4 * scale);\n            }\n            ctx.lineTo(start.left - 1 * scale, ctx.canvas.height);\n            ctx.stroke();\n        }\n\n        if (!ticks.length) {\n            ctx.restore();\n            return;\n        }\n        const expiry = ticks[ticks.length - 1];\n        const opacity = is_sold ? calc_opacity(start.left, expiry.left) : '';\n        if (granularity !== 0 && expiry && exit_tick_top) {\n            expiry.top = exit_tick_top;\n        }\n\n        // count down\n        if (start.visible && start.top && !is_sold) {\n            shadowed_text({\n                ctx,\n                scale,\n                is_dark_theme,\n                text: `${ticks.length}/${tick_count}`,\n                left: start.left - 1 * scale,\n                top: start.top - 27 * scale,\n            });\n        }\n        // start-time marker\n        if (start.visible && (granularity === 0 || !is_sold)) {\n            draw_path(ctx, {\n                top: start.top - 9 * scale,\n                left: start.left - 1 * scale,\n                zoom: start.zoom,\n                icon: ICONS.START.with_color(color + opacity, getColor({ status: 'bg', is_dark_theme }) + opacity),\n            });\n        }\n        // remaining ticks\n        ticks.forEach((tick, idx) => {\n            if (tick !== expiry) {\n                return;\n            }\n            if (!tick.visible) {\n                return;\n            }\n            if (granularity !== 0 && tick !== expiry) {\n                return;\n            }\n            if (granularity !== 0 && tick === expiry && !is_sold) {\n                return;\n            }\n            const clr = tick !== expiry ? getColor({ status: 'fg', is_dark_theme }) : color;\n            ctx.beginPath();\n            ctx.fillStyle = clr;\n            ctx.arc(tick.left, tick.top, 7 * scale, 0, Math.PI * 2);\n            ctx.fill();\n\n            ctx.beginPath();\n            ctx.fillStyle = is_sold ? color : getColor({ status: 'bg', is_dark_theme });\n            ctx.arc(tick.left, tick.top, 6 * scale, 0, Math.PI * 2);\n            ctx.fill();\n\n            const last_tick = tick_stream[idx];\n            const last_digit = last_tick.tick_display_value.slice(-1);\n            ctx.fillStyle = is_sold ? 'white' : clr;\n            ctx.textAlign = 'center';\n            ctx.shadowBlur = 0;\n            ctx.font = `bold ${12 * scale}px BinarySymbols, Roboto`;\n            ctx.fillText(last_digit, tick.left, tick.top);\n        });\n        // status marker\n        if (expiry.visible && is_sold) {\n            ctx.fillStyle = color;\n            draw_path(ctx, {\n                top: expiry.top - 16 * scale,\n                left: expiry.left + 8 * scale,\n                zoom: expiry.zoom,\n                icon: ICONS.END.with_color(color, getColor({ status: 'bg', is_dark_theme })),\n            });\n        }\n        ctx.restore();\n    }\n);\n\nexport default {\n    TickContract,\n    NonTickContract,\n    DigitContract,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\n\nconst BottomWidgets = ({ Widget }) => <div className='bottom-widgets'>{Widget}</div>;\n\nBottomWidgets.propTypes = {\n    Widget: PropTypes.node,\n};\n\nexport default BottomWidgets;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MobileWrapper, Toast, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { findContractCategory } from 'Modules/Trading/Helpers/contract-type';\nimport { observer, useStore } from '@deriv/stores';\n\ntype TContractType = {\n    text: string;\n    value: string;\n};\n\nconst BuyToastNotification = observer(() => {\n    const portal = document.getElementById('popup_root');\n    const { modules } = useStore();\n    const { trade } = modules;\n    const { contract_purchase_toast_box, clearContractPurchaseToastBox } = trade;\n\n    React.useEffect(() => {\n        const timeout = setTimeout(() => {\n            clearContractPurchaseToastBox();\n        }, 4000);\n\n        return () => {\n            clearTimeout(timeout);\n        };\n    }, [clearContractPurchaseToastBox, contract_purchase_toast_box]);\n\n    if (!portal || !contract_purchase_toast_box) return <React.Fragment />;\n\n    const { buy_price, currency, contract_type, list } = contract_purchase_toast_box;\n    const active_trade_type = { value: contract_type };\n\n    const trade_type_name = findContractCategory(list, active_trade_type)?.contract_types?.find(\n        (item: TContractType) => item.value === contract_type\n    ).text;\n\n    return ReactDOM.createPortal(\n        <MobileWrapper>\n            <Toast\n                className='dc-toast-popup-mobile'\n                is_open={!!contract_purchase_toast_box.key}\n                timeout={0}\n                type='notification'\n            >\n                <Text as='p' size='xxs' className='dc-toast__notification'>\n                    <Localize\n                        i18n_default_text='The purchase of <0>{{trade_type_name}} contract</0> has been completed successfully for the amount of <0> {{buy_price}} {{currency}}</0>'\n                        components={[<strong key={0} />]}\n                        values={{ trade_type_name, buy_price, currency }}\n                        shouldUnescape\n                    />\n                </Text>\n            </Toast>\n        </MobileWrapper>,\n        portal\n    );\n});\n\nexport default BuyToastNotification;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { DesktopWrapper, MobileWrapper, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { isEnded, isAccumulatorContract, isDigitContract } from '@deriv/shared';\nimport { ChartTitle } from 'Modules/SmartChart';\nimport BuyToastNotification from './buy-toast-notification';\nimport { observer, useStore } from '@deriv/stores';\n\nconst RecentTradeInfo = observer(() => {\n    const { contract_trade } = useStore();\n    const { granularity, markers_array } = contract_trade;\n\n    const latest_tick_contract = markers_array[markers_array.length - 1];\n    if (\n        !latest_tick_contract ||\n        !latest_tick_contract.contract_info.tick_stream ||\n        isAccumulatorContract(latest_tick_contract.contract_info.contract_type)\n    )\n        return null;\n\n    const is_ended = isEnded(latest_tick_contract.contract_info);\n    if (is_ended || granularity !== 0) return null;\n\n    const { contract_type, tick_stream, tick_count } = latest_tick_contract.contract_info;\n    const current_tick = isDigitContract(contract_type) ? tick_stream.length : Math.max(tick_stream.length - 1, 0);\n    return (\n        <Text weight='bold' className='recent-trade-info'>\n            {localize('Tick')} {current_tick}/{tick_count}\n        </Text>\n    );\n});\n\nconst TopWidgets = ({\n    InfoBox,\n    is_mobile,\n    is_title_enabled = true,\n    onSymbolChange,\n    y_axis_width,\n    theme,\n    open_market,\n    open,\n    is_digits_widget_active,\n}) => {\n    const ChartTitleLocal = (\n        <ChartTitle\n            open_market={open_market}\n            open={open}\n            enabled={is_title_enabled}\n            onChange={onSymbolChange}\n            searchInputClassName='data-hj-whitelist'\n            isNestedList={is_mobile}\n            portalNodeId={is_mobile ? 'deriv_app' : undefined}\n        />\n    );\n\n    const portal = ReactDOM.createPortal(\n        <div className={`smartcharts-${theme}`}>\n            <div\n                className='top-widgets-portal'\n                style={{\n                    width: `calc(100% - ${y_axis_width ? y_axis_width + 5 : 0}px)`,\n                }}\n            >\n                {is_mobile && <BuyToastNotification />}\n                {ChartTitleLocal}\n                {!is_digits_widget_active && <RecentTradeInfo />}\n            </div>\n        </div>,\n        document.getElementById('app_contents')\n    );\n\n    return (\n        <React.Fragment>\n            {InfoBox}\n            <MobileWrapper>{portal}</MobileWrapper>\n            <DesktopWrapper>{ChartTitleLocal}</DesktopWrapper>\n        </React.Fragment>\n    );\n};\n\nTopWidgets.propTypes = {\n    InfoBox: PropTypes.node,\n    is_digits_widget_active: PropTypes.bool,\n    is_mobile: PropTypes.bool,\n    is_title_enabled: PropTypes.bool,\n    onSymbolChange: PropTypes.func,\n    open: PropTypes.bool,\n    open_market: PropTypes.object,\n    theme: PropTypes.string,\n    y_axis_width: PropTypes.number,\n};\n\nexport default TopWidgets;\n","import React from 'react';\nimport { getUrlBase, moduleLoader } from '@deriv/shared';\n\nconst Module = moduleLoader(() =>\n    import(/* webpackChunkName: \"smart_chart\", webpackPreload: true */ '@deriv/deriv-charts')\n);\n\nModule.then(({ setSmartChartsPublicPath }) => {\n    setSmartChartsPublicPath(getUrlBase('/js/smartcharts/'));\n});\n\n// React.Lazy expects a default export for the component\n// SmartChart library exports many components\nconst load = component_name => () =>\n    Module.then(module => {\n        return { default: module[component_name] };\n    });\n\nexport const SmartChart = React.lazy(load('SmartChart'));\nexport const ChartTitle = React.lazy(load('ChartTitle'));\n\nexport const ChartSize = React.lazy(load('ChartSize'));\nexport const ChartMode = React.lazy(load('ChartMode'));\nexport const DrawTools = React.lazy(load('DrawTools'));\nexport const Share = React.lazy(load('Share'));\nexport const StudyLegend = React.lazy(load('StudyLegend'));\nexport const Views = React.lazy(load('Views'));\nexport const ToolbarWidget = React.lazy(load('ToolbarWidget'));\n\nexport const FastMarker = React.lazy(load('FastMarker'));\nexport const RawMarker = React.lazy(load('RawMarker'));\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MobileWrapper, Toast } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\n\nexport const ToastPopup = ({ portal_id = 'popup_root', children, className, ...props }) => {\n    if (!document.getElementById(portal_id)) return null;\n    return ReactDOM.createPortal(\n        <Toast className={classNames('dc-toast-popup', className)} {...props}>\n            {children}\n        </Toast>,\n        document.getElementById(portal_id)\n    );\n};\n\n/**\n * Network status Toast components\n */\nconst NetworkStatusToastError = ({ status, portal_id, message }) => {\n    const [is_open, setIsOpen] = React.useState(false);\n\n    if (!document.getElementById(portal_id) || !message) return null;\n\n    if (!is_open && status !== 'online') {\n        setIsOpen(true); // open if status === 'blinker' or 'offline'\n    } else if (is_open && status === 'online') {\n        setTimeout(() => {\n            setIsOpen(false);\n        }, 1500);\n    }\n\n    return ReactDOM.createPortal(\n        <MobileWrapper>\n            <Toast\n                className={classNames({\n                    'dc-toast--blinker': status === 'blinker',\n                })}\n                is_open={is_open}\n                timeout={0}\n                type='error'\n            >\n                {message}\n            </Toast>\n        </MobileWrapper>,\n        document.getElementById(portal_id)\n    );\n};\n\nNetworkStatusToastError.propTypes = {\n    portal_id: PropTypes.string,\n    status: PropTypes.string,\n    message: PropTypes.string,\n};\n\nexport const NetworkStatusToastErrorPopup = observer(() => {\n    const {\n        common: { network_status },\n    } = useStore();\n    return (\n        <NetworkStatusToastError\n            portal_id='popup_root'\n            message={network_status.tooltip}\n            status={network_status.class}\n        />\n    );\n});\n","import React from 'react';\nimport { localize } from '@deriv/translations';\n\nexport const contract_category_icon = {\n    [localize('Ups & Downs')]: 'IcUpsDowns',\n    [localize('Highs & Lows')]: 'IcHighsLows',\n    [localize('Ins & Outs')]: 'IcInsOuts',\n    [localize('Look Backs')]: 'IcLookbacks',\n    [localize('Digits')]: 'IcDigits',\n    [localize('Multipliers')]: 'IcMultiplier',\n    [localize('Accumulators')]: 'IcCatAccumulator',\n};\n\nexport const getContractTypeCategoryIcons = () => ({\n    All: 'IcCatAll',\n    Accumulators: 'IcCatAccumulator',\n    Options: 'IcCatOptions',\n    Multipliers: 'IcCatMultiplier',\n});\n\n/**\n * Returns a list of contracts in the following format:\n * {\n *      label: '', // contract category label\n *      contract_types: [], // list of contract types\n *      icon: '', // contract categoty icon\n * }\n * @param {object} contract_types_list  - list of all contracts\n * @param {array}  unsupported_list - list of unsupported contract types\n */\nexport const getAvailableContractTypes = (contract_types_list, unsupported_list) => {\n    return Object.keys(contract_types_list)\n        .map(key => {\n            const contract_types = contract_types_list[key].categories;\n            const contract_name = contract_types_list[key].name;\n            const available_contract_types = contract_types.filter(type =>\n                type.value &&\n                // TODO: remove this check once all contract types are supported\n                !unsupported_list.includes(type.value)\n                    ? type\n                    : undefined\n            );\n\n            if (available_contract_types.length) {\n                return {\n                    key,\n                    label: contract_name,\n                    contract_types: available_contract_types,\n                    icon: contract_category_icon[contract_name],\n                    component:\n                        contract_name === localize('Accumulators') ? (\n                            <span className='dc-vertical-tab__header--new'>{localize('NEW!')}</span>\n                        ) : null,\n                };\n            }\n            return undefined;\n        })\n        .filter(Boolean);\n};\n\n/**\n * Returns a filtered list\n * @param {object} contract_types_list  - list of all contracts\n * @param {array}  filtered_items_array - list of filtered contract category names and/or contract types names\n */\nexport const getFilteredList = (contract_types_list, filtered_items_array) => {\n    return Object.keys(contract_types_list)\n        .map(key => {\n            const { label, contract_types, icon } = contract_types_list[key];\n\n            const filtered_by_contract_types = contract_types.filter(c =>\n                filtered_items_array.includes(c.text.toLowerCase())\n            );\n\n            const filtered_by_contract_category = filtered_items_array.includes(label.toLowerCase());\n\n            if (filtered_by_contract_types.length) {\n                return {\n                    label,\n                    contract_types: filtered_by_contract_types,\n                    icon,\n                };\n            } else if (filtered_by_contract_category) {\n                return {\n                    label,\n                    contract_types,\n                    icon,\n                };\n            }\n            return undefined;\n        })\n        .filter(Boolean);\n};\n\nconst flatten = arr => [].concat(...arr);\n/**\n * Flatten list object into an array of contract category label and contract types names\n * @param {object} list\n */\nexport const getContractsList = list =>\n    flatten(\n        Object.keys(list).map(\n            k => [\n                list[k].label.toLowerCase(), // contract category names\n                ...list[k].contract_types.map(c => c.text.toLowerCase()),\n            ] // contract types names\n        )\n    );\n\nexport const findContractCategory = (list, item) =>\n    list?.find(list_item => list_item.contract_types.some(i => i.value === item.value)) || {};\n\nexport const getContractCategoryKey = (list, item) => findContractCategory(list, item).key;\n\nexport const getContractTypes = (list, item) => findContractCategory(list, item).contract_types;\n","const digitCategoriesMap = ['even_odd', 'match_diff', 'over_under'];\nconst digitTypesMap = ['DIGITDIFF', 'DIGITMATCH', 'DIGITOVER', 'DIGITUNDER', 'DIGITEVEN', 'DIGITODD'];\n\nexport const isDigitTradeType = trade_type => digitCategoriesMap.includes(trade_type);\nexport const isDigitContractType = contract_type => digitTypesMap.includes(contract_type);\n","import {\n    WS,\n    getPropertyValue,\n    cloneObject,\n    isTimeValid,\n    minDate,\n    toMoment,\n    shouldShowCancellation,\n    getUnitMap,\n    buildBarriersConfig,\n    buildDurationConfig,\n    hasIntradayDurationUnit,\n    buildForwardStartingConfig,\n    unsupported_contract_types_list,\n    getContractCategoriesConfig,\n    getContractTypesConfig,\n    getLocalizedBasis,\n} from '@deriv/shared';\nimport ServerTime from '_common/base/server_time';\nimport { localize } from '@deriv/translations';\nimport { isSessionAvailable } from './start-date';\n\nexport const ContractType = (() => {\n    let available_contract_types = {};\n    let available_categories = {};\n    let contract_types;\n    const trading_events = {};\n    const trading_times = {};\n    let has_only_forward_starting_contracts = false;\n\n    const buildContractTypesConfig = symbol =>\n        WS.storage.contractsFor(symbol).then(r => {\n            const has_contracts = getPropertyValue(r, ['contracts_for']);\n            has_only_forward_starting_contracts =\n                has_contracts && !r.contracts_for.available.find(contract => contract.start_type !== 'forward');\n            if (!has_contracts || has_only_forward_starting_contracts) return;\n            const contract_categories = getContractCategoriesConfig();\n            contract_types = getContractTypesConfig(symbol);\n            available_contract_types = {};\n            available_categories = cloneObject(contract_categories); // To preserve the order (will clean the extra items later in this function)\n            r.contracts_for.available.forEach(contract => {\n                const type = Object.keys(contract_types).find(\n                    key =>\n                        contract_types[key].trade_types.indexOf(contract.contract_type) !== -1 &&\n                        (typeof contract_types[key].barrier_count === 'undefined' ||\n                            +contract_types[key].barrier_count === contract.barriers) // To distinguish betweeen Rise/Fall & Higher/Lower\n                );\n\n                if (!type) return; // ignore unsupported contract types\n\n                if (!available_contract_types[type]) {\n                    // extend contract_categories to include what is needed to create the contract list\n                    const sub_cats =\n                        available_categories[\n                            Object.keys(available_categories).find(\n                                key => available_categories[key].categories.indexOf(type) !== -1\n                            )\n                        ].categories;\n\n                    if (!sub_cats) return;\n\n                    sub_cats[sub_cats.indexOf(type)] = { value: type, text: contract_types[type].title };\n\n                    // populate available contract types\n                    available_contract_types[type] = cloneObject(contract_types[type]);\n                }\n                const config = available_contract_types[type].config || {};\n\n                // set config values\n                config.has_spot = config.has_spot || contract.start_type === 'spot';\n                config.durations = !config.hide_duration && buildDurationConfig(contract, config.durations);\n                config.trade_types = buildTradeTypesConfig(contract, config.trade_types);\n                config.barriers = buildBarriersConfig(contract, config.barriers);\n                config.forward_starting_dates = buildForwardStartingConfig(contract, config.forward_starting_dates);\n                config.growth_rate_range = contract.growth_rate_range;\n                config.multiplier_range = contract.multiplier_range;\n                config.cancellation_range = contract.cancellation_range;\n\n                available_contract_types[type].config = config;\n            });\n\n            // cleanup categories\n            Object.keys(available_categories).forEach(key => {\n                available_categories[key].categories = available_categories[key].categories?.filter(\n                    item => typeof item === 'object'\n                );\n                if (available_categories[key].categories?.length === 0) {\n                    delete available_categories[key];\n                }\n            });\n        });\n\n    const buildTradeTypesConfig = (contract, trade_types = {}) => {\n        trade_types[contract.contract_type] = contract.contract_display;\n        return trade_types;\n    };\n\n    const getArrayDefaultValue = (arr_new_values, value) =>\n        arr_new_values.indexOf(value) !== -1 ? value : arr_new_values[0];\n\n    const getContractValues = store => {\n        const {\n            contract_expiry_type,\n            contract_type,\n            basis,\n            duration_unit,\n            expiry_type,\n            multiplier,\n            start_date,\n            cancellation_duration,\n            symbol,\n        } = store;\n\n        if (!contract_type) return {};\n\n        const form_components = getComponents(contract_type);\n        const obj_basis = getBasis(contract_type, basis);\n        const obj_trade_types = getTradeTypes(contract_type);\n        const obj_start_dates = getStartDates(contract_type, start_date);\n        const obj_start_type = getStartType(obj_start_dates.start_date);\n        const obj_barrier = getBarriers(contract_type, contract_expiry_type);\n        const obj_duration_unit = getDurationUnit(duration_unit, contract_type, obj_start_type.contract_start_type);\n\n        const obj_duration_units_list = getDurationUnitsList(contract_type, obj_start_type.contract_start_type);\n        const obj_duration_units_min_max = getDurationMinMax(contract_type, obj_start_type.contract_start_type);\n\n        const obj_accumulator_range_list = getAccumulatorRange(contract_type);\n        const obj_multiplier_range_list = getMultiplierRange(contract_type, multiplier);\n        const obj_cancellation = getCancellation(contract_type, cancellation_duration, symbol);\n        const obj_expiry_type = getExpiryType(obj_duration_units_list, expiry_type);\n        const obj_equal = getEqualProps(contract_type);\n\n        return {\n            ...form_components,\n            ...obj_basis,\n            ...obj_trade_types,\n            ...obj_start_dates,\n            ...obj_start_type,\n            ...obj_barrier,\n            ...obj_duration_unit,\n            ...obj_duration_units_list,\n            ...obj_duration_units_min_max,\n            ...obj_expiry_type,\n            ...obj_accumulator_range_list,\n            ...obj_multiplier_range_list,\n            ...obj_cancellation,\n            ...obj_equal,\n        };\n    };\n\n    const getContractType = (list, contract_type) => {\n        const arr_list = Object.keys(list || {})\n            .reduce((k, l) => [...k, ...list[l].categories.map(ct => ct.value)], [])\n            .filter(type => unsupported_contract_types_list.indexOf(type) === -1)\n            .sort((a, b) => (a === 'multiplier' || b === 'multiplier' ? -1 : 0));\n\n        return {\n            contract_type: getArrayDefaultValue(arr_list, contract_type),\n        };\n    };\n\n    const getComponents = c_type => {\n        let check = [];\n        if (contract_types[c_type]?.config?.should_override) {\n            check = [...contract_types[c_type].components];\n        } else {\n            check = ['duration', 'amount', ...contract_types[c_type].components].filter(\n                component =>\n                    !(\n                        component === 'duration' &&\n                        contract_types[c_type].config &&\n                        contract_types[c_type].config.hide_duration\n                    )\n            );\n        }\n        return (\n            contract_types && {\n                form_components: check,\n            }\n        );\n    };\n\n    const getDurationUnitsList = (contract_type, contract_start_type) => {\n        return {\n            duration_units_list:\n                getPropertyValue(available_contract_types, [\n                    contract_type,\n                    'config',\n                    'durations',\n                    'units_display',\n                    contract_start_type,\n                ]) || [],\n        };\n    };\n\n    const getDurationUnit = (duration_unit, contract_type, contract_start_type) => {\n        const duration_units =\n            getPropertyValue(available_contract_types, [\n                contract_type,\n                'config',\n                'durations',\n                'units_display',\n                contract_start_type,\n            ]) || [];\n        const arr_units = [];\n        duration_units.forEach(obj => {\n            arr_units.push(obj.value);\n        });\n\n        return {\n            duration_unit: getArrayDefaultValue(arr_units, duration_unit),\n        };\n    };\n\n    const getDurationMinMax = (contract_type, contract_start_type, contract_expiry_type) => {\n        let duration_min_max =\n            getPropertyValue(available_contract_types, [\n                contract_type,\n                'config',\n                'durations',\n                'min_max',\n                contract_start_type,\n            ]) || {};\n\n        if (contract_expiry_type) {\n            duration_min_max = duration_min_max[contract_expiry_type] || {};\n        }\n\n        return { duration_min_max };\n    };\n\n    const getFullContractTypes = () => available_contract_types;\n\n    const getStartType = start_date => ({\n        // Number(0) refers to 'now'\n        contract_start_type: start_date === Number(0) ? 'spot' : 'forward',\n    });\n\n    const getStartDates = (contract_type, current_start_date) => {\n        const config = getPropertyValue(available_contract_types, [contract_type, 'config']);\n        const start_dates_list = [];\n\n        if (config?.has_spot) {\n            // Number(0) refers to 'now'\n            start_dates_list.push({ text: localize('Now'), value: Number(0) });\n        }\n        if (config?.forward_starting_dates) {\n            start_dates_list.push(...config.forward_starting_dates);\n        }\n\n        const start_date = start_dates_list.find(item => item.value === current_start_date)\n            ? current_start_date\n            : start_dates_list[0]?.value;\n\n        return { start_date, start_dates_list };\n    };\n\n    const getSessions = (contract_type, start_date) => {\n        const config = getPropertyValue(available_contract_types, [contract_type, 'config']) || {};\n        const sessions = ((config.forward_starting_dates || []).find(option => option.value === start_date) || {})\n            .sessions;\n        return { sessions };\n    };\n\n    const hours = [...Array(24).keys()].map(a => `0${a}`.slice(-2));\n    const minutes = [...Array(12).keys()].map(a => `0${a * 5}`.slice(-2));\n\n    const getValidTime = (sessions, compare_moment, start_moment) => {\n        if (sessions && !isSessionAvailable(sessions, compare_moment)) {\n            // first see if changing the minute brings it to the right session\n            compare_moment.minute(\n                minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) || compare_moment.format('mm')\n            );\n            // if not, also change the hour\n            if (!isSessionAvailable(sessions, compare_moment)) {\n                compare_moment.minute(0);\n                compare_moment.hour(\n                    hours.find(h => isSessionAvailable(sessions, compare_moment.hour(h), start_moment, true)) ||\n                        compare_moment.format('HH')\n                );\n                compare_moment.minute(\n                    minutes.find(m => isSessionAvailable(sessions, compare_moment.minute(m))) ||\n                        compare_moment.format('mm')\n                );\n            }\n        }\n        return compare_moment.format('HH:mm');\n    };\n\n    const buildMoment = (date, time) => {\n        const [hour, minute] = isTimeValid(time) ? time.split(':') : [0, 0];\n        return toMoment(date || ServerTime.get())\n            .hour(hour)\n            .minute(minute);\n    };\n\n    const getStartTime = (sessions, start_date, start_time) => ({\n        start_time: start_date ? getValidTime(sessions, buildMoment(start_date, start_time)) : null,\n    });\n\n    const getTradingEvents = async (date, underlying = null) => {\n        if (!date) {\n            return [];\n        }\n        if (!(date in trading_events)) {\n            const trading_times_response = await WS.tradingTimes(date);\n\n            if (getPropertyValue(trading_times_response, ['trading_times', 'markets'])) {\n                for (let i = 0; i < trading_times_response.trading_times.markets.length; i++) {\n                    const submarkets = trading_times_response.trading_times.markets[i].submarkets;\n                    if (submarkets) {\n                        for (let j = 0; j < submarkets.length; j++) {\n                            const symbols = submarkets[j].symbols;\n                            if (symbols) {\n                                for (let k = 0; k < symbols.length; k++) {\n                                    const symbol = symbols[k];\n                                    if (!trading_events[trading_times_response.echo_req.trading_times]) {\n                                        trading_events[trading_times_response.echo_req.trading_times] = {};\n                                    }\n                                    trading_events[trading_times_response.echo_req.trading_times][symbol.symbol] =\n                                        symbol.events;\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return trading_events[date][underlying];\n    };\n\n    const getTradingTimes = async (date, underlying = null) => {\n        if (!date) {\n            return [];\n        }\n\n        if (!(date in trading_times)) {\n            const trading_times_response = await WS.tradingTimes(date);\n\n            if (getPropertyValue(trading_times_response, ['trading_times', 'markets'])) {\n                for (let i = 0; i < trading_times_response.trading_times.markets.length; i++) {\n                    const submarkets = trading_times_response.trading_times.markets[i].submarkets;\n                    if (submarkets) {\n                        for (let j = 0; j < submarkets.length; j++) {\n                            const symbols = submarkets[j].symbols;\n                            if (symbols) {\n                                for (let k = 0; k < symbols.length; k++) {\n                                    const symbol = symbols[k];\n                                    if (!trading_times[trading_times_response.echo_req.trading_times]) {\n                                        trading_times[trading_times_response.echo_req.trading_times] = {};\n                                    }\n                                    trading_times[trading_times_response.echo_req.trading_times][symbol.symbol] = {\n                                        open: symbol.times.open,\n                                        close: symbol.times.close,\n                                    };\n                                }\n                            }\n                        }\n                    }\n                }\n            }\n        }\n\n        return underlying ? trading_times[date][underlying] : trading_times[date];\n    };\n\n    const getExpiryType = (duration_units_list, expiry_type) => {\n        if (duration_units_list) {\n            if (\n                (!expiry_type && duration_units_list.length > 0) ||\n                (duration_units_list.length === 1 && duration_units_list[0].value === 't')\n            ) {\n                return { expiry_type: 'duration' };\n            }\n            if (duration_units_list.length === 0) {\n                return {\n                    expiry_type: null,\n                };\n            }\n        }\n\n        return { expiry_type };\n    };\n\n    const getExpiryDate = (duration_units_list, expiry_date, expiry_type, start_date) => {\n        let proper_expiry_date = null;\n\n        if (expiry_type === 'endtime') {\n            const moment_start = toMoment(start_date);\n            const moment_expiry = toMoment(expiry_date);\n\n            if (!hasIntradayDurationUnit(duration_units_list)) {\n                const is_invalid = moment_expiry.isSameOrBefore(moment_start, 'day');\n                proper_expiry_date = (is_invalid ? moment_start.clone().add(1, 'day') : moment_expiry).format(\n                    'YYYY-MM-DD'\n                );\n            } else {\n                // forward starting contracts should only show today and tomorrow as expiry date\n                const is_invalid =\n                    moment_expiry.isBefore(moment_start, 'day') ||\n                    (start_date && moment_expiry.isAfter(moment_start.clone().add(1, 'day')));\n                proper_expiry_date = (is_invalid ? moment_start : moment_expiry).format('YYYY-MM-DD');\n            }\n        }\n\n        return { expiry_date: proper_expiry_date };\n    };\n\n    // It has to follow the correct order of checks:\n    // first check if end time is within available sessions\n    // then confirm that end time is at least 5 minute after start time\n    const getExpiryTime = (\n        expiry_date,\n        expiry_time,\n        expiry_type,\n        market_close_times,\n        sessions,\n        start_date,\n        start_time\n    ) => {\n        let end_time = null;\n\n        if (expiry_type === 'endtime') {\n            let market_close_time = '23:59:59';\n\n            if (market_close_times && market_close_times.length && market_close_times[0] !== '--') {\n                // Some of underlyings (e.g. Australian Index) have two close time during a day so we always select the further one as the end time of the contract.\n                market_close_time = market_close_times.slice(-1)[0];\n            }\n\n            // For contracts with a duration of more that 24 hours must set the expiry_time to the market's close time on the expiry date.\n            if (!start_date && ServerTime.get().isBefore(buildMoment(expiry_date), 'day')) {\n                end_time = market_close_time;\n            } else {\n                const start_moment = start_date ? buildMoment(start_date, start_time) : ServerTime.get();\n                const end_moment = buildMoment(expiry_date, expiry_time);\n\n                end_time = end_moment.format('HH:mm');\n                // When the contract is forwarding, and the duration is endtime, users can purchase the contract within 24 hours.\n                const expiry_sessions = [\n                    {\n                        open: start_moment.clone().add(5, 'minute'), // expiry time should be at least 5 minute after start_time\n                        close: minDate(\n                            start_moment.clone().add(24, 'hour'),\n                            buildMoment(expiry_date, market_close_time)\n                        ),\n                    },\n                ];\n\n                if (!isSessionAvailable(expiry_sessions, end_moment)) {\n                    end_time = getValidTime(expiry_sessions, end_moment.clone(), start_moment.clone());\n                }\n                if (end_moment.isSameOrBefore(start_moment) || end_moment.diff(start_moment, 'minute') < 5) {\n                    const is_end_of_day = start_moment.get('hours') === 23 && start_moment.get('minute') >= 55;\n                    const is_end_of_session =\n                        sessions && !isSessionAvailable(sessions, start_moment.clone().add(5, 'minutes'));\n                    end_time = start_moment.clone().add(is_end_of_day || is_end_of_session ? 0 : 5, 'minutes');\n                    // Set the end_time to be multiple of 5 to be equal as the SELECTED_TIME that shown to the client.\n                    end_time = setMinuteMultipleByFive(end_time).format('HH:mm');\n                }\n                // Set the expiry_time to 5 minute less than start_time for forwading contracts when the expiry_time is null and the expiry_date is tomorrow.\n                if (end_time === '00:00' && start_moment.isBefore(end_moment, 'day')) {\n                    end_time = start_moment.clone().subtract(5, 'minute').format('HH:mm');\n                }\n            }\n        }\n        return { expiry_time: end_time };\n    };\n\n    const setMinuteMultipleByFive = moment_obj => moment_obj.minute(Math.ceil(moment_obj.minute() / 5) * 5);\n\n    const getTradeTypes = contract_type => ({\n        trade_types: getPropertyValue(available_contract_types, [contract_type, 'config', 'trade_types']),\n    });\n\n    const getBarriers = (contract_type, expiry_type) => {\n        const barriers = getPropertyValue(available_contract_types, [contract_type, 'config', 'barriers']) || {};\n        const barrier_values = barriers[expiry_type] || {};\n        const barrier_1 = barrier_values.barrier || barrier_values.high_barrier || '';\n        const barrier_2 = barrier_values.low_barrier || '';\n        return {\n            barrier_count: barriers.count || 0,\n            barrier_1: barrier_1.toString(),\n            barrier_2: barrier_2.toString(),\n        };\n    };\n\n    const getBasis = (contract_type, basis) => {\n        const arr_basis = getPropertyValue(available_contract_types, [contract_type, 'basis']) || [];\n        const localized_basis = getLocalizedBasis();\n        const basis_list = arr_basis.reduce((cur, bas) => [...cur, { text: localized_basis[bas], value: bas }], []);\n\n        return {\n            basis_list,\n            basis: getArrayDefaultValue(arr_basis, basis),\n        };\n    };\n\n    const getAccumulatorRange = contract_type => ({\n        accumulator_range_list:\n            getPropertyValue(available_contract_types, [contract_type, 'config', 'growth_rate_range']) || [],\n    });\n\n    const getMultiplierRange = (contract_type, multiplier) => {\n        const arr_multiplier =\n            getPropertyValue(available_contract_types, [contract_type, 'config', 'multiplier_range']) || [];\n\n        return {\n            multiplier_range_list: arr_multiplier.map(m => ({ text: `x${m}`, value: m })),\n            multiplier: getArrayDefaultValue(arr_multiplier, multiplier),\n        };\n    };\n\n    const getCancellation = (contract_type, cancellation_duration, symbol) => {\n        const arr_cancellation_range =\n            getPropertyValue(available_contract_types, [contract_type, 'config', 'cancellation_range']) || [];\n\n        const regex = new RegExp('^([0-9]+)|([a-zA-Z]+)$', 'g');\n        const getText = str => {\n            const [duration, unit] = str.match(regex);\n            const unit_map = getUnitMap();\n            return `${duration} ${unit_map[unit].name_plural}`;\n        };\n\n        const should_show_cancellation = shouldShowCancellation(symbol);\n\n        return {\n            cancellation_duration: getArrayDefaultValue(arr_cancellation_range, cancellation_duration),\n            cancellation_range_list: arr_cancellation_range.map(d => ({ text: `${getText(d)}`, value: d })),\n            ...(should_show_cancellation ? {} : { has_cancellation: false }),\n        };\n    };\n\n    const getEqualProps = contract_type => {\n        const base_contract_type = /^(.*)_equal$/.exec(contract_type)?.[1];\n\n        if (base_contract_type && !available_contract_types[base_contract_type]) {\n            return {\n                is_equal: 1,\n                has_equals_only: true,\n            };\n        }\n        return {};\n    };\n\n    return {\n        buildContractTypesConfig,\n        getBarriers,\n        getContractType,\n        getContractValues,\n        getDurationMinMax,\n        getDurationUnit,\n        getDurationUnitsList,\n        getFullContractTypes,\n        getExpiryDate,\n        getExpiryTime,\n        getExpiryType,\n        getSessions,\n        getStartTime,\n        getStartType,\n        getTradingEvents,\n        getTradingTimes,\n        getContractCategories: () => ({\n            contract_types_list: available_categories,\n            has_only_forward_starting_contracts,\n        }),\n    };\n})();\n","import { convertToUnix, getDecimalPlaces, getPropertyValue, isAccumulatorContract, toMoment } from '@deriv/shared';\n\nconst isVisible = elem => !(!elem || (elem.offsetWidth === 0 && elem.offsetHeight === 0));\n\nconst map_error_field = {\n    barrier: 'barrier_1',\n    barrier2: 'barrier_2',\n    date_expiry: 'expiry_date',\n};\n\nexport const getProposalErrorField = response => {\n    const error_field = getPropertyValue(response, ['error', 'details', 'field']);\n    if (!error_field) {\n        return null;\n    }\n    const error_id = map_error_field[error_field] || error_field;\n    const el_error = document.getElementsByName(error_id)[0];\n    return el_error && isVisible(el_error) ? error_id : null;\n};\n\nexport const getProposalInfo = (store, response, obj_prev_contract_basis) => {\n    const proposal = response.proposal || {};\n    const profit = proposal.payout - proposal.ask_price || 0;\n    const returns = (profit * 100) / (proposal.ask_price || 1);\n    const stake = proposal.display_value;\n    const basis_list = store.basis_list;\n\n    const contract_basis = store.is_vanilla\n        ? { text: 'Payout', value: 'number_of_contracts' }\n        : basis_list.find(o => o.value !== store.basis) || {};\n\n    const is_stake = contract_basis.value === 'stake';\n    const price = is_stake ? stake : proposal[contract_basis.value];\n    let has_increased = price > obj_prev_contract_basis.value;\n\n    if (!obj_prev_contract_basis.value || price === obj_prev_contract_basis.value) {\n        has_increased = null;\n    }\n\n    const obj_contract_basis = {\n        text: contract_basis.text || '',\n        value: price || '',\n    };\n\n    const commission = proposal.commission;\n    const cancellation = proposal.cancellation;\n    const accumulators_details = {\n        ...proposal.contract_details,\n        growth_rate: store.growth_rate,\n        spot: proposal.spot,\n        spot_time: proposal.spot_time,\n    };\n\n    return {\n        commission,\n        cancellation,\n        id: proposal.id || '',\n        has_error: !!response.error,\n        has_error_details: !!getProposalErrorField(response),\n        error_code: response?.error?.code,\n        error_field: response?.error?.details?.field,\n        has_increased,\n        limit_order: proposal.limit_order,\n        message: proposal.longcode || response.error.message,\n        obj_contract_basis,\n        payout: proposal.payout,\n        profit: profit.toFixed(getDecimalPlaces(store.currency)),\n        returns: `${returns.toFixed(2)}%`,\n        stake,\n        spot: proposal.spot,\n        ...accumulators_details,\n    };\n};\n\nexport const createProposalRequests = store => {\n    const requests = {};\n\n    Object.keys(store.trade_types).forEach(type => {\n        const new_req = createProposalRequestForContract(store, type);\n        requests[type] = new_req;\n    });\n\n    return requests;\n};\n\nconst setProposalMultiplier = (store, obj_multiplier) => {\n    obj_multiplier.multiplier = store.multiplier;\n    obj_multiplier.cancellation = store.has_cancellation ? store.cancellation_duration : undefined;\n\n    obj_multiplier.limit_order = store.has_take_profit || store.has_stop_loss ? {} : undefined;\n\n    if (store.has_take_profit && store.take_profit) {\n        obj_multiplier.limit_order.take_profit = +store.take_profit || 0; // send positive take_profit to API\n    }\n\n    if (store.has_stop_loss && store.stop_loss) {\n        obj_multiplier.limit_order.stop_loss = +store.stop_loss || 0; // send positive stop_loss to API\n    }\n};\n\nconst setProposalAccumulator = (store, obj_accumulator) => {\n    obj_accumulator.growth_rate = store.growth_rate;\n\n    obj_accumulator.limit_order = store.has_take_profit ? {} : undefined;\n\n    if (store.has_take_profit && store.take_profit) {\n        obj_accumulator.limit_order.take_profit = +store.take_profit || 0; // send positive take_profit to API\n    }\n};\n\nconst createProposalRequestForContract = (store, type_of_contract) => {\n    const obj_accumulator = {};\n    const obj_expiry = {};\n    const obj_multiplier = {};\n\n    if (store.expiry_type === 'endtime') {\n        const expiry_date = toMoment(store.expiry_date);\n        obj_expiry.date_expiry = convertToUnix(expiry_date.unix(), store.expiry_time);\n    }\n\n    if (store.contract_type === 'multiplier') {\n        setProposalMultiplier(store, obj_multiplier);\n    }\n\n    if (store.contract_type === 'accumulator') {\n        setProposalAccumulator(store, obj_accumulator);\n    }\n\n    return {\n        proposal: 1,\n        subscribe: 1,\n        amount: parseFloat(store.amount) || 0,\n        basis: store.basis,\n        contract_type: type_of_contract,\n        currency: store.currency,\n        symbol: store.symbol,\n        ...(store.start_date && { date_start: convertToUnix(store.start_date, store.start_time) }),\n        ...(store.expiry_type === 'duration'\n            ? {\n                  duration: parseInt(store.duration),\n                  duration_unit: store.duration_unit,\n              }\n            : obj_expiry),\n        ...((store.barrier_count > 0 || store.form_components.indexOf('last_digit') !== -1) &&\n            !isAccumulatorContract(type_of_contract) && {\n                barrier: store.barrier_1 || store.last_digit,\n            }),\n        ...(store.barrier_count === 2 && !isAccumulatorContract(type_of_contract) && { barrier2: store.barrier_2 }),\n        ...obj_accumulator,\n        ...obj_multiplier,\n    };\n};\n","import ServerTime from '_common/base/server_time';\nimport { toMoment } from '@deriv/shared';\n\nconst isBeforeDate = (compare_moment, start_moment, should_only_check_hour) => {\n    const now_moment = toMoment(start_moment);\n    if (should_only_check_hour) {\n        now_moment.minute(0).second(0);\n    }\n    return compare_moment.isBefore(now_moment) && now_moment.unix() !== compare_moment.unix();\n};\n\nexport const isSessionAvailable = (\n    sessions = [],\n    compare_moment = toMoment(ServerTime.get()),\n    start_moment = toMoment(ServerTime.get()),\n    should_only_check_hour = false\n) =>\n    !isBeforeDate(compare_moment, ServerTime.get(), should_only_check_hour) &&\n    !isBeforeDate(compare_moment, start_moment, should_only_check_hour) &&\n    (!sessions.length ||\n        !!sessions.find(session =>\n            compare_moment.isBetween(session.open, session.close, should_only_check_hour ? 'hour' : null, '[]')\n        ));\n","import React from 'react';\nimport { useStore } from '@deriv/stores';\nimport TradeStore from './Modules/Trading/trade-store';\n\nconst TraderStoreContext = React.createContext<TradeStore | null>(null);\n\nexport const TraderStoreProvider = ({ children }: React.PropsWithChildren<unknown>) => {\n    const { modules } = useStore();\n    // const memoizedValue = useMemo(() => new TraderStore(), []);\n\n    return <TraderStoreContext.Provider value={modules?.trade}>{children}</TraderStoreContext.Provider>;\n};\n\nexport const useTraderStore = () => {\n    const store = React.useContext(TraderStoreContext);\n\n    if (!store) {\n        throw new Error('useTraderStore must be used within TraderStoreProvider');\n    }\n\n    return store;\n};\n","import { getMarketNamesMap, getContractConfig } from 'Constants/contract';\n\n/**\n * Fetch market information from shortcode\n * @param shortcode: string\n * @returns {{underlying: string, category: string}}\n */\n\n// TODO: Combine with  extractInfoFromShortcode function in shared, both are currently used\nexport const getMarketInformation = shortcode => {\n    const market_info = {\n        category: '',\n        underlying: '',\n    };\n\n    const pattern = new RegExp(\n        '^([A-Z]+)_((1HZ[0-9-V]+)|((CRASH|BOOM)[0-9\\\\d]+[A-Z]?)|(OTC_[A-Z0-9]+)|R_[\\\\d]{2,3}|[A-Z]+)'\n    );\n    const extracted = pattern.exec(shortcode);\n    if (extracted !== null) {\n        market_info.category = extracted[1].toLowerCase();\n        market_info.underlying = extracted[2];\n    }\n\n    return market_info;\n};\n\nexport const getMarketName = underlying => (underlying ? getMarketNamesMap()[underlying.toUpperCase()] : null);\n\nexport const getTradeTypeName = category => (category ? getContractConfig()[category.toUpperCase()]?.name : null);\n","const PromiseClass = require('../utility').PromiseClass;\n\nconst ServerTime = (() => {\n    let clock_started = false;\n    const pending = new PromiseClass();\n    let common_store;\n\n    const init = store => {\n        if (!clock_started) {\n            common_store = store;\n            pending.resolve(common_store.server_time);\n            clock_started = true;\n        }\n    };\n\n    const get = () => (clock_started && common_store.server_time ? common_store.server_time.clone() : undefined);\n\n    return {\n        init,\n        get,\n        timePromise: () => (clock_started ? Promise.resolve(common_store.server_time) : pending.promise),\n    };\n})();\n\nmodule.exports = ServerTime;\n","const template = (string, content) => {\n    let to_replace = content;\n    if (content && !Array.isArray(content)) {\n        to_replace = [content];\n    }\n    return string.replace(/\\[_(\\d+)]/g, (s, index) => to_replace[+index - 1]);\n};\n\n/**\n * Creates a DOM element and adds any attributes to it.\n *\n * @param {String} tag_name: the tag to create, e.g. 'div', 'a', etc\n * @param {Object} attributes: all the attributes to assign, e.g. { id: '...', class: '...', html: '...', ... }\n * @return the created DOM element\n */\nconst createElement = (tag_name, attributes = {}) => {\n    const el = document.createElement(tag_name);\n    Object.keys(attributes).forEach(attr => {\n        const value = attributes[attr];\n        if (attr === 'text') {\n            el.textContent = value;\n        } else if (attr === 'html') {\n            el.html(value);\n        } else {\n            el.setAttribute(attr, value);\n        }\n    });\n    return el;\n};\n\nlet static_hash;\nconst getStaticHash = () => {\n    static_hash =\n        static_hash || (document.querySelector('script[src*=\"main\"]').getAttribute('src') || '').split('.')[1];\n    return static_hash;\n};\n\nclass PromiseClass {\n    constructor() {\n        this.promise = new Promise((resolve, reject) => {\n            this.reject = reject;\n            this.resolve = resolve;\n        });\n    }\n}\n\nmodule.exports = {\n    template,\n    createElement,\n    getStaticHash,\n    PromiseClass,\n};\n"],"names":["createContext","QueryClient","name","useState","is_loading","setIsLoading","is_subscribed","setSubscribed","error","setError","data","setData","subscriber","useRef","WS","useWS","subscribe","useCallback","props","prop","payload","undefined","current","response","e","unsubscribe","useEffect","store","useContext","StoreContext","Error","children","useSubscription","update","useStore","exchange_rates","base_currency","prev","merge","BaseStore","onHydrationDone","makeObservable","this","observable","action","unmount","makePersistable","properties","storage","window","localStorage","then","Function","stopPersisting","ExchangeRatesStore","FLAGS","foo","bar","baz","FeatureFlagsStore","Object","keys","length","old","forEach","flag","memoizedValue","useMemo","is_mock","feature_flags","values","value","BounceUp","animate","y","opacity","initial","transition","type","stiffness","damping","duration","Bounce","className","is_visible","keyname","motion","key","propTypes","PropTypes","SlideInFromTop","SlideInFromBottom","SlideIn","PositionsCardLoader","speed","height","width","backgroundColor","foregroundColor","x","rx","ry","TradeParamsLoader","MobileWrapper","viewBox","DesktopWrapper","addCommaToNumber","num","decimal_places","isNaN","n","String","toFixed","p","indexOf","replace","m","i","getBarrierLabel","contract_info","isDigitType","contract_type","localize","isVanillaContract","getBarrierValue","digitTypeMap","barrier","test","toLowerCase","DIGITDIFF","DIGITEVEN","DIGITMATCH","DIGITODD","DIGITOVER","DIGITUNDER","filterByContractType","trade_contract_type","shortcode","is_call_put","isCallPut","is_high_low","isHighLow","is_vanilla","trade_types","getContractTypesConfig","match","includes","is_invisible","theme","id","classNames","invisible","Array","from","map","_x","inx","ChartLoader","is_dark","getTradingTimes","target_time","api_initial_load_error","message","getSymbol","target_symbol","trading_times","symbol","markets","submarkets","j","symbols","find","item","calculateTimeLeft","remaining_time_to_open","difference","Date","now","days","Math","floor","hours","minutes","seconds","MarketCountdownTimer","observer","is_main_page","setIsTimerLoading","onMarketOpen","active_symbols","useTraderStore","isMounted","useIsMounted","React","when_market_opens","setWhenMarketOpens","time_left","setTimeLeft","setLoading","isMarketClosed","whenMarketOpens","days_offset","target_date","moment","add","format","api_response","times","open","close","date_str","toISOString","substring","getUTCDate","hour","opening_time","timer","setTimeout","clearTimeout","timer_components","toString","padStart","opening_time_banner","formatted_opening_time","convertTimeFormat","opening_date","opening_day","Text","align","as","line_height","color","size","weight","Localize","i18n_default_text","components","findRouteByPath","path","routes_config","result","some","route_info","match_path","matchPath","routes","Icon","icon","PositionsDrawerCardItem","portfolio_position","row","measure","onHoverPosition","is_new_row","in_prop","useNewRowTransition","is_sold","CSSTransition","in","timeout","appear","enter","enterDone","exit","onEntered","unmountOnExit","PositionsDrawerCard","onMouseEnter","onMouseLeave","onFooterEntered","should_show_transition","PositionsDrawer","client","common","contract_trade","portfolio","ui","currency","server_time","getContractById","all_positions","onMount","onClickCancel","onClickSell","onClickRemove","removePositionById","is_mobile","is_positions_drawer_on","toggleDrawer","togglePositionsDrawer","addToast","current_focus","removeToast","setCurrentFocus","should_show_cancellation_warning","toggleCancellationWarning","toggleUnsupportedContractModal","drawer_ref","list_ref","scrollbar_ref","scrollTo","scrollToTop","positions","filter","underlying","body_content","DataList","data_source","rowRenderer","args","keyMapper","row_gap","onClick","ref","NavLink","to","onChangeContractUpdate","onClickContractUpdate","MarketIsClosedOverlay","is_eu","is_synthetics_trading_market_available","is_timer_loading","btn_lbl","Button","text","primary","styles","container","fontSize","lineHeight","position","zIndex","background","padding","marginTop","display","overflowY","prop_name","tabs","textAlign","marginBottom","tab","border","Test","stores","trade_store","test_stores","trade","entries","setIsVisible","setStore","document","addEventListener","stateVisibility","removeEventListener","ctrlKey","keyCode","style","fontWeight","sort","k","v","JSON","stringify","toJS","symbolChange","onSymbolChange","target","DigitsWidget","digits","tick","onDigitChange","onChange","trade_type","selected_digit","last_digit","last_contract","digits_info","display_status","is_digit_contract","is_ended","Digits","digits_array","is_trade_page","ChartTopWidgets","yAxiswidth","charts_ref","is_digits_widget_active","open_market","is_dark_mode_on","chart","isMobile","y_axis_width","ChartBottomWidgets","show_accumulators_stats","Widget","AccumulatorsStats","Screen","Loadable","loader","loading","render","loaded","Component","FormLayout","is_market_closed","is_trade_enabled","ACTIONS","AccumulatorsProfitLossText","current_spot","current_spot_time","profit","is_fading_in","setIsFadingIn","is_sliding","setIsSliding","prev_profit_tenth","split","current_profit_tenth","setCurrentProfitTenth","profit_tenth_ref","interval_id_ref","fading_in_timeout_id","sliding_timeout_id","profit_portions_array","profit_whole_number","profit_tenth","profit_hundredths","slice","won","sign","runThroughTenthDigit","interval_ms","start","end","clearInterval","interval_id","setInterval","abs","delta","markerRef","setPosition","epoch","price","AccumulatorsProfitLossTooltip","alignment","exit_tick","exit_tick_time","high_barrier","is_tooltip_open","setIsTooltipOpen","tooltip_timeout","onCloseDelayed","onHoverOrTapHandler","opposite_arrow_position","horizontal","el","onTouchStart","onTouchEnd","AccumulatorsChartElements","has_crossed_accu_barriers","accumulators_positions","contract_id","marker_config","ContentComponent","custom_className","ToolbarWidgets","updateChartType","updateGranularity","portalNodeId","onChartType","onGranularity","isDesktop","searchInputClassName","BottomWidgetsMobile","setTick","setDigits","Trade","form_components","getFirstOpenMarket","should_show_active_symbols_loading","is_chart_loading","onUnmount","prepareTradeStore","setContractTypes","setMobileDigitView","show_digits_stats","is_accumulator","is_synthetics_available","NotificationMessages","notification_messages_ui","is_market_unavailable_visible","has_only_forward_starting_contracts","should_show_multipliers_onboarding","is_dark_theme","network_status","try_synthetic_indices","setTrySyntheticIndices","try_open_markets","setTryOpenMarkets","category","setCategory","subcategory","setSubcategory","setIsDigitsWidgetActive","setMarket","markets_to_search","market_cat","market_subcat","selectMultipliers","bottomWidgets","d","t","onTryOtherMarkets","topWidgets","params","form_wrapper_class","Div100vhContainer","is_disabled","height_offset","fallback","ChartTrade","SwipeableWrapper","index","SmartChartWithRef","SmartChart","innerRef","ChartMarkers","config","markers_array","granularity","marker","Marker","AllMarkers","end_epoch","accumulator_barriers_data","chart_type","is_chart_layout_default","is_chart_countdown_visible","is_socket_opened","current_language","should_show_eu_content","chartStateChange","main_barrier","main_barrier_flattened","extra_barriers","barriers_flattened","exportLayout","setChartStatus","chart_layout","wsForget","wsForgetStream","wsSendRequest","wsSubscribe","has_alternative_source","refToAddTick","settings","assetInformation","countdown","isHighestLowestMarkerEnabled","language","barriers","max_ticks","crosshair","crosshairTooltipLeftAllow","showLastDigitStats","chartControlsWidgets","chartStatusListener","chartType","initialData","activeSymbols","parse","chartData","feedCall","enabledNavigationWidget","enabledChartFooter","maxTick","requestAPI","requestForget","requestForgetStream","requestSubscribe","allowTickChartTypeOnly","stateChangeListener","isConnectionOpened","clearChart","toolbarWidget","importedLayout","onExportLayout","shouldFetchTradingTimes","hasAlternativeSource","getMarketsOrder","synthetic_index","has_synthetic_index","s","market","a","b","display_name","reduce","arr","push","yAxisMargin","top","routesConfig","ContractDetails","moduleLoader","route_default","component","getTitle","is_authenticated","exact","BinaryLink","active_class","normalizePath","route","getRoutesConfig","activeClassName","Route","pathname","removeBranchName","location","is_valid_route","lastIndexOf","r","validateRoute","Redirect","is_logging_in","is_logged_in","redirectToLogin","getLanguage","default_subroute","has_default_subroute","isEmptyObject","title","default_title","alternateLinkTagChange","canonicalLinkTagChange","Switch","idx","checkRoutingMatch","route_list","tradePageMountingMiddleware","path_from","path_to","match_patterns","callback","pattern","UILoader","Routes","history","passthrough","setTradeMountingPolicy","setSkipPrePostLifecycle","has_error","onUnmountPortfolio","setPromptHandler","route_to","flatMap","subroute","has_match","withRouter","ResultMobile","is_contract_won","PositionsModalCard","contract_update","current_tick","indicative","is_sell_requested","is_unsupported","profit_loss","sell_price","status","togglePositions","loader_el","is_multiplier","isMultiplierContract","isAccumulatorContract","is_crypto","isCryptoContract","has_progress_slider","has_ended","getEndTime","fallback_result","total_profit","getTotalProfit","should_show_sell","hasContractEntered","isOpen","getSymbolDisplayName","getMarketInformation","contract_options_el","ContractCard","getContractTypeDisplay","multiplier","getCardLabels","CurrencyBadge","isCryptocurrency","Money","amount","buy_price","payout","ProgressSliderMobile","start_time","date_start","expiry_time","date_expiry","ticks_count","tick_count","contract_vanilla_el","bid_price","entry_spot","TOTAL_PROFIT_LOSS","custom_card_header","custom_card_body","is_positions","custom_card_footer","custom_contract_el","should_show_result_overlay","contract_el","getContractPath","duration_unit","exit_spot","is_valid_to_sell","sell_time","TogglePositions","positions_count","is_open","positions_toggle_class","data_testid","active_positions_count","disableApp","enableApp","is_empty","filtered_positions","closeModal","TransitionGroup","Modal","toggleModal","is_vertical_top","has_close_icon","positions_currency","positions_error","onPositionsSell","onPositionsRemove","onPositionsCancel","symbol_positions","modules","populateHeaderExtensions","onMountPositions","is_populating_account_list","cashier","general_store","onMountCashier","onMountCommon","setAccountSwitchListener","show_positions_toggle","show_component","populateHeaderfunction","header_items","waitForLogin","when","TradeFooterExtensions","populateFooterExtensions","populateFooter","TogglePositionsIcon","ChartSettingContainer","populateSettingsExtensions","populateSettings","menu_items","label","renderItemValue","onChangeSymbolAsync","ContractType","getValidationRules","rules","min","barrier_1","condition","barrier_count","func","options","inputs","barrier_2","input","trigger","start_date","expiry_date","contract_start_type","isTimeValid","isHourValid","isMinuteValid","start_moment","toMoment","start_moment_clone","clone","h","isSessionAvailable","sessions","minute","getMultiplierValidationRules","stop_loss","has_stop_loss","take_profit","has_take_profit","processPurchase","proposal_id","onChangeContractTypeList","contract_types_list","onChangeContractType","onChangeExpiry","contract_expiry_type","getExpiryType","duration_min_max","assertDuration","getDurationMinMaxValues","max","onChangeStartDate","root_store","expiry_type","obj_contract_start_type","obj_sessions","obj_start_time","obj_duration_units_list","duration_units_list","obj_duration_unit","obj_expiry_type","obj_expiry_date","obj_duration_min_max","obj_market_open_times","market_open_times","obj_market_close_times","market_close_times","obj_expiry_time","processInSequence","functions","snapshot","getSnapshot","assign","updateStore","processTradeParams","new_state","getMethodsList","duration_functions","getExpiryMethodsList","ContractTypeHelper","StartDate","Duration","CONTRACT_SHADES","CALL","PUT","CALLE","PUTE","EXPIRYRANGE","EXPIRYMISS","RANGE","UPORDOWN","ONETOUCH","NOTOUCH","ASIANU","ASIAND","MULTUP","MULTDOWN","ACCU","DEFAULT_SHADES","BARRIER_COLORS","BARRIER_LINE_STYLES","errors","attribute","has","prototype","hasOwnProperty","call","error_count","rule","is_rule_string","rule_object","validator","getPreBuildDVRs","error_message","template","name1","name2","ruleObject","Validator","getRuleObject","is_valid","is_ok","addFailure","check","validation_errors","validation_rules","preSwitchAccountDisposer","pre_switch_account_listener","switchAccountDisposer","switch_account_listener","logoutDisposer","logout_listener","clientInitDisposer","client_init_listener","networkStatusChangeDisposer","network_status_change_listener","themeChangeDisposer","theme_change_listener","realAccountSignupEndedDisposer","real_account_signup_ended_listener","partial_fetch_time","retrieveFromStorage","setValidationErrorMessages","setValidationRules","addRule","validateProperty","validateAllProperties","onSwitchAccount","onPreSwitchAccount","onLogout","onClientInit","onNetworkStatusChange","onThemeChange","onRealAccountSignupEnd","disposePreSwitchAccount","disposeSwitchAccount","disposeLogout","disposeClientInit","disposeNetworkStatusChange","disposeThemeChange","disposeRealAccountSignupEnd","assertHasValidCache","local_storage_properties","session_storage_properties","store_name","defineProperty","enumerable","writable","setupReactionForLocalStorage","setupReactionForSessionStorage","reaction","saveToStorage","STORAGES","LOCAL_STORAGE","SESSION_STORAGE","setItem","sessionStorage","local_storage_snapshot","getItem","session_storage_snapshot","propertyName","messages","concat","property","intercept","change","newValue","isPassed","get","listener","switch_broadcast","switchEndSignal","isProduction","console","pre_switch_broadcast","setPreSwitchAccount","has_logged_out","setLogout","initialized_broadcast","setInitialized","is_network_online","is_online","has_real_account_signup_ended","setRealAccountSignupEnd","loginid","reactions","act","freeze","Symbol","removeBarrier","findIndex","splice","ChartBarrierStore","low_barrier","onChartBarrierChange","line_style","not_draggable","lineStyle","shade","shadeColor","high","low","relative","draggable","hidePriceLines","hideBarrierLine","hideOffscreenLine","updateBarriers","updateBarrierShade","onBarrierChange","updateBarrierColor","computed","default_shade","bind","has_barrier","should_display","is_relative","barriers_list","barriersToString","is_dark_mode","LIMIT_ORDER_TYPES","STOP_OUT","TAKE_PROFIT","STOP_LOSS","setLimitOrderBarriers","is_over","limit_order","isLimitOrderBarrierSupported","limit_orders","obj_limit_order","obj_barrier","showOffscreenArrows","isSingleBarrier","opacityOnOverlap","l","g_subscribers_map","TradeStore","is_trade_component_mounted","is_purchase_enabled","is_equal","has_equals_only","previous_symbol","basis","basis_list","stake_boundary","VANILLALONGCALL","VANILLALONGPUT","strike_price_choices","Number","start_dates_list","is_mobile_digit_view_selected","proposal_info","purchase_info","accumulator_range_list","growth_rate","maximum_payout","maximum_ticks","ticks_history_stats","tick_size_barrier","multiplier_range_list","has_cancellation","commission","cancellation_price","stop_out","expiration","hovered_contract_type","cancellation_duration","cancellation_range_list","vanilla_trade_type","is_trade_params_expanded","contract_purchase_toast_box","addTickByProposal","debouncedProposal","debounce","requestProposal","proposal_requests","is_purchasing_contract","initial_barriers","is_initial_barrier_applied","should_skip_prepost_lifecycle","clearContracts","contracts","setMainBarrier","isBarrierSupported","onPurchase","disablePurchaseButtons","el_purchase_value","getElementsByClassName","el_purchase_buttons","classList","prev_chart_layout","req","stream_id","time","ServerTime","msg_type","unix","setDefaultGrowthRate","accountSwitcherListener","barrier_pipsize","changeDurationValidationRules","clearLimitOrderBarriers","clearPurchaseInfo","clientInitListener","enablePurchase","forgetAllProposal","initAccountCurrency","is_symbol_in_active_symbols","loadActiveSymbols","logoutListener","manageMxMltRemovalNotification","networkStatusChangeListener","onAllowEqualsChange","onChangeMultiple","onHoverPurchase","onProposalResponse","override","preSwitchAccountListener","pushPurchaseDataToGtm","refresh","resetAccumulatorData","resetErrorServices","resetPreviousSymbol","setActiveSymbols","setAllowEqual","setDefaultSymbol","setIsTradeParamsExpanded","setMarketStatus","setPreviousSymbol","setPurchaseSpotBarrier","setStakeBoundary","setStrikeChoices","setTradeStatus","themeChangeListener","updateLimitOrderBarriers","updateSymbol","clearContractPurchaseToastBox","setContractPurchaseToastbox","date","resetEndTimeOnVolatilityIndices","setContractType","symbol_info","exchange_is_open","clearAccumulatorBarriersData","should_skip","should_set_default_symbol","should_show_loading","code","pickDefaultSymbol","symbol_to_update","processNewValuesAsync","runInAction","is_on_mf_account","landing_company_shortcode","hide_close_mx_mlt_storage_flag","parseInt","clients_country","showError","showUnavailableLocationError","can_have_mx_account","can_have_mlt_account","showMxMltUnavailableError","showDigitalOptionsUnavailableError","platform_name_trader","getPlatformSettings","link","platform_name_mt5","contract_categories","setSelectedContractType","default_currency","selectCurrency","purchase_spot_barrier","hideOffscreenBarrier","getBarrierPipSize","isDigitTradeType","is_tick_contract","setServicesError","services_error","buy","contract_data","longcode","extractInfoFromShortcode","isDigitContractType","toUpperCase","addContract","onBuyResponse","openPositionsDrawer","is_unwelcome","cloneObject","is_changed_by_user","obj_old_values","should_forget_first","obj_new_values","prev_chart_type","prev_granularity","savePreviousChartMode","prev_currency","has_currency_changed","should_reset_stake","getMinPayout","setHasOnlyForwardingContracts","is_advanced_duration","bool","event","bom_ui","contract","barrier1","barrier2","positions_drawer","toolbar_position","chart_asset_info","is_chart_asset_info_visible","gtm","pushDataLayer","requests","createProposalRequests","resetPurchaseStates","echo_req","prev_proposal_info","getPropertyValue","obj_prev_contract_basis","proposal","is_crypto_multiplier","getProposalInfo","cancellation","ask_price","order_amount","barrier_spot_distance","ticks_stayed_in","last_tick_epoch","spot","spot_time","previous_ticks_history_stats","new_ticks_history_stats","previous_history","previous_epoch","reverse","getUpdatedTicksHistoryStats","updateAccumulatorBarriersData","accumulators_high_barrier","accumulators_low_barrier","error_id","getProposalErrorField","details","commission_match","field","barrier_choices","max_stake","min_stake","limits","duration_options","convertDurationLimit","is_language_changing","Promise","resolve","toggleServicesErrorModal","notifications","setShouldShowPopups","addNotificationMessage","client_notifications","notification_messages","unmarkNotificationMessage","get_notification_messages","has_iom_account","has_malta_account","hidden_close_account_notification","close_mx_mlt_account","new_currency","is_notifications_visible","toggleNotificationsModal","is_used","layout","previousMaxTicks","isDone","state","option","market_close_prop","list","getAvailableContractTypes","unsupported_contract_types_list","formatMoney","getCurrencyDisplayCode","findFirstOpenMarket","strike_prices","ModulesStore","core_store","RootStore","rudderstack","pushwoosh","contract_replay","chart_barrier_store","configure","enforceActions","websocket","setWebsocket","TradeModals","initStore","APPLY","BUY_PRICE","CANCEL","CLOSE","CONTRACT_VALUE","CURRENT_STAKE","DAY","DAYS","DEAL_CANCEL_FEE","DECREMENT_VALUE","DONT_SHOW_THIS_AGAIN","ENTRY_SPOT","INCREMENT_VALUE","NOT_AVAILABLE","RESALE_NOT_OFFERED","SELL","STAKE","STRIKE","TICK","TICKS","PROFIT_LOSS","POTENTIAL_PROFIT_LOSS","INDICATIVE_PRICE","INITIAL_STAKE","LOST","PAYOUT","PURCHASE_PRICE","POTENTIAL_PAYOUT","TAKE_PROFIT_LOSS_NOT_AVAILABLE","WON","getMarketNamesMap","FRXAUDCAD","FRXAUDCHF","FRXAUDJPY","FRXAUDNZD","FRXAUDPLN","FRXAUDUSD","FRXBROUSD","FRXEURAUD","FRXEURCAD","FRXEURCHF","FRXEURGBP","FRXEURJPY","FRXEURNZD","FRXEURUSD","FRXGBPAUD","FRXGBPCAD","FRXGBPCHF","FRXGBPJPY","FRXGBPNOK","FRXGBPUSD","FRXNZDJPY","FRXNZDUSD","FRXUSDCAD","FRXUSDCHF","FRXUSDJPY","FRXUSDNOK","FRXUSDPLN","FRXUSDSEK","FRXXAGUSD","FRXXAUUSD","FRXXPDUSD","FRXXPTUSD","OTC_AEX","OTC_AS51","OTC_DJI","OTC_FCHI","OTC_FTSE","OTC_GDAXI","OTC_HSI","OTC_IBEX35","OTC_N225","OTC_NDX","OTC_SPC","OTC_SSMI","OTC_SX5E","R_10","R_25","R_50","R_75","R_100","BOOM300N","BOOM500","BOOM1000","CRASH300N","CRASH500","CRASH1000","RDBEAR","RDBULL","STPRNG","WLDAUD","WLDEUR","WLDGBP","WLDXAU","WLDUSD","JD10","JD25","JD50","JD75","JD100","JD150","JD200","CRYBCHUSD","CRYBNBUSD","CRYBTCLTC","CRYIOTUSD","CRYNEOUSD","CRYOMGUSD","CRYTRXUSD","CRYBTCETH","CRYZECUSD","CRYXMRUSD","CRYXMLUSD","CRYXRPUSD","CRYBTCUSD","CRYDSHUSD","CRYETHUSD","CRYEOSUSD","CRYLTCUSD","getContractConfig","button_name","getSupportedContracts","RESETCALL","RESETPUT","TICKHIGH","TICKLOW","LBFLOATCALL","LBFLOATPUT","LBHIGHLOW","CALLSPREAD","PUTSPREAD","RUNHIGH","RUNLOW","show_button_name","contract_config","getContractTypePosition","TicksHistoryCounter","has_progress_dots","should_highlight_last_counter","should_emphasize_last_counter","dot","ExpandedTicksHistory","history_text_size","rows","counter","AccumulatorsStatsManualModal","icon_classname","is_manual_open","toggleManual","getVideoSource","extension","getUrlBase","mp4_src","webm_src","should_header_stick_body","Loading","is_fullscreen","autoPlay","loop","onLoadedData","playsInline","preload","src","ROW_SIZES","is_expandable","is_collapsed","setIsCollapsed","setIsManualOpen","widget_title","ticks_history","acc","_el","desktop_row_size","mobile_row_size","row_size","MobileDialog","onClose","portal_element_id","visible","wrapper_classname","Digit","is_latest","is_lost","is_selected","is_won","percentage","display_percentage","parseFloat","DigitSpot","is_selected_winning","LastDigitStat","is_max","is_min","w","cx","cy","fill","stroke","strokeWidth","strokeOpacity","strokeDasharray","strokeDashoffset","DigitDisplay","has_entry_spot","onSelect","latest_digit","stats","onLastDigitSpot","digit","is_digit_selectable","is_digit_selected","LastDigitPointer","transform","left","custom_color","display_array","LastDigitPrediction","dimension","digit_offset","digit_offset_mobile","handleSelect","digit_value","isSelectableDigitType","getOffset","last_contract_digit","latest_tick_pip_size","pip_size","latest_tick_ask_price","ask","latest_tick_digit","pop","barrier_map","val","DigitsWrapper","onChangeStatus","has_contract","is_tick_ready","is_contract_elapsed","isContractElapsed","tick_stream","bid","tick_display_value","entry_tick","underlying_name","setStatus","setCurrentTick","setSpot","setIsSelectedWinning","setIsLatest","setIsWon","setIsLost","Popover","classNameBubble","margin","displayName","PageError","header","error_code","redirect_urls","redirect_labels","classNameImage","image_url","ChartMarker","marker_content_props","is_bottom_widget_visible","marker_props","getMemoizedComponent","div","parse_svg","markup","DOMParser","svg","parseFromString","attributes","paths","points","with_color","bg_color","START","END","is_firefox","navigator","userAgent","search","RawMarkerMaker","draw_callback","epoch_array","price_array","rest","dark_theme","accu_contract_shade","accu_shade","accu_shade_crossed","bg","fg","grey_border","lost","sold","light_theme","getColor","colors","calc_scale","zoom","sqrt","hex_map","calc_opacity","draw_path","ctx","save","scale","translate","prev_x","prev_y","fillStyle","strokeStyle","beginPath","cx1","cx2","cy1","cy2","moveTo","lineTo","quadraticCurveTo","bezierCurveTo","start_a","end_a","arc","closePath","restore","draw_shaded_barriers","labels","start_left","bottom","stroke_color","fill_color","has_persistent_borders","previous_tick","end_left","canvas","offsetWidth","parentElement","stx","panels","yaxisTotalWidthRight","end_top","offsetHeight","xaxisHeight","is_top_visible","is_bottom_visible","displayed_top","displayed_bottom","is_start_left_visible","middle_top","lineWidth","setLineDash","font","fillText","global_composite_operation","globalCompositeOperation","radius","preceding_tick","prev_tick_stroke_color","PI","fillRect","render_label","line","ceil","measureText","shadowed_text","shadowColor","shadowBlur","TickContract","context","canvas_fixed_height","canvas_height","ticks","prices","is_last_contract","is_in_contract_details","accu_barriers_difference","is_accumulator_trade_without_contract","draw_start_line","is_accumulator_contract","is_contract_ended","devicePixelRatio","Boolean","entry","is_accu_contract_open","isAccumulatorContractOpen","contract_details_start_left","clr","ICONS","currency_symbols","AUD","EUR","GBP","JPY","USD","BTC","BCH","ETH","ETC","LTC","UST","NonTickContract","expiry","entry_tick_top","exit_tick_top","show_profit","getDecimalPlaces","DigitContract","BottomWidgets","portal","getElementById","active_trade_type","trade_type_name","findContractCategory","contract_types","ReactDOM","Toast","shouldUnescape","RecentTradeInfo","latest_tick_contract","isEnded","isDigitContract","TopWidgets","InfoBox","is_title_enabled","ChartTitleLocal","enabled","isNestedList","Module","setSmartChartsPublicPath","load","component_name","module","default","ChartTitle","ChartMode","DrawTools","Share","StudyLegend","Views","ToolbarWidget","FastMarker","RawMarker","ToastPopup","portal_id","NetworkStatusToastError","setIsOpen","NetworkStatusToastErrorPopup","tooltip","contract_category_icon","getContractTypeCategoryIcons","All","Accumulators","Options","Multipliers","unsupported_list","categories","contract_name","available_contract_types","list_item","getContractCategoryKey","getContractTypes","digitCategoriesMap","digitTypesMap","available_categories","trading_events","buildTradeTypesConfig","getArrayDefaultValue","getComponents","getDurationUnitsList","getDurationUnit","getDurationMinMax","getStartType","getStartDates","getValidTime","buildMoment","setMinuteMultipleByFive","getTradeTypes","getBarriers","getBasis","getAccumulatorRange","getMultiplierRange","getCancellation","getEqualProps","contract_display","arr_new_values","c_type","should_override","hide_duration","duration_units","arr_units","obj","current_start_date","has_spot","forward_starting_dates","compare_moment","moment_obj","arr_basis","localized_basis","getLocalizedBasis","cur","bas","arr_multiplier","arr_cancellation_range","regex","RegExp","should_show_cancellation","shouldShowCancellation","str","unit","unit_map","getUnitMap","name_plural","base_contract_type","exec","buildContractTypesConfig","has_contracts","contracts_for","available","start_type","getContractCategoriesConfig","sub_cats","durations","buildDurationConfig","buildBarriersConfig","buildForwardStartingConfig","growth_rate_range","multiplier_range","cancellation_range","barrier_values","count","getContractType","arr_list","ct","getContractValues","obj_basis","obj_trade_types","obj_start_dates","obj_start_type","obj_duration_units_min_max","obj_accumulator_range_list","obj_multiplier_range_list","obj_cancellation","obj_equal","getFullContractTypes","getExpiryDate","proper_expiry_date","moment_start","moment_expiry","hasIntradayDurationUnit","isBefore","isAfter","isSameOrBefore","getExpiryTime","end_time","market_close_time","end_moment","expiry_sessions","minDate","diff","is_end_of_day","is_end_of_session","subtract","getSessions","getStartTime","getTradingEvents","trading_times_response","events","getContractCategories","map_error_field","error_field","elem","el_error","getElementsByName","returns","stake","display_value","contract_basis","o","has_increased","obj_contract_basis","accumulators_details","contract_details","has_error_details","new_req","createProposalRequestForContract","type_of_contract","obj_accumulator","obj_expiry","obj_multiplier","convertToUnix","setProposalMultiplier","setProposalAccumulator","isBeforeDate","should_only_check_hour","now_moment","second","session","isBetween","TraderStoreContext","TraderStoreProvider","Provider","market_info","extracted","common_store","clock_started","pending","PromiseClass","require","init","timePromise","promise","exports","static_hash","reject","string","content","to_replace","isArray","createElement","tag_name","attr","textContent","html","setAttribute","getStaticHash","querySelector","getAttribute"],"sourceRoot":""}