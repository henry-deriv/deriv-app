{"version":3,"file":"cfd/js/CompareAccountsModal.js","mappings":"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","sources":["webpack://@deriv/cfd/webpack/universalModuleDefinition","webpack://@deriv/cfd/../../node_modules/classnames/index.js","webpack://@deriv/cfd/./src/Stores/connect.js","webpack://@deriv/cfd/external umd \"@deriv/components\"","webpack://@deriv/cfd/external umd \"@deriv/shared\"","webpack://@deriv/cfd/external umd \"@deriv/translations\"","webpack://@deriv/cfd/external umd \"mobx-react\"","webpack://@deriv/cfd/external umd \"react\"","webpack://@deriv/cfd/webpack/bootstrap","webpack://@deriv/cfd/webpack/runtime/compat get default export","webpack://@deriv/cfd/webpack/runtime/define property getters","webpack://@deriv/cfd/webpack/runtime/hasOwnProperty shorthand","webpack://@deriv/cfd/./src/Containers/compare-accounts-content.tsx","webpack://@deriv/cfd/./src/Constants/cfd_compare_account_content.ts","webpack://@deriv/cfd/./src/Containers/mt5-compare-table-content.tsx","webpack://@deriv/cfd/./src/Components/cfd-dxtrade-compare-content.tsx","webpack://@deriv/cfd/./src/Containers/compare-accounts-modal.tsx"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@deriv/components\"), require(\"@deriv/shared\"), require(\"@deriv/translations\"), require(\"mobx-react\"), require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@deriv/components\", \"@deriv/shared\", \"@deriv/translations\", \"mobx-react\", \"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@deriv/cfd\"] = factory(require(\"@deriv/components\"), require(\"@deriv/shared\"), require(\"@deriv/translations\"), require(\"mobx-react\"), require(\"react\"));\n\telse\n\t\troot[\"@deriv/cfd\"] = factory(root[\"@deriv/components\"], root[\"@deriv/shared\"], root[\"@deriv/translations\"], root[\"mobx-react\"], root[\"react\"]);\n})(self, (__WEBPACK_EXTERNAL_MODULE__deriv_components__, __WEBPACK_EXTERNAL_MODULE__deriv_shared__, __WEBPACK_EXTERNAL_MODULE__deriv_translations__, __WEBPACK_EXTERNAL_MODULE_mobx_react__, __WEBPACK_EXTERNAL_MODULE_react__) => {\nreturn ","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import { useObserver } from 'mobx-react';\nimport React from 'react';\n\nconst isClassComponent = Component =>\n    !!(typeof Component === 'function' && Component.prototype && Component.prototype.isReactComponent);\n\nexport const MobxContent = React.createContext(null);\n\nfunction injectStorePropsToComponent(propsToSelectFn, BaseComponent) {\n    const Component = own_props => {\n        const store = React.useContext(MobxContent);\n\n        let ObservedComponent = BaseComponent;\n\n        if (isClassComponent(BaseComponent)) {\n            const FunctionalWrapperComponent = props => <BaseComponent {...props} />;\n            ObservedComponent = FunctionalWrapperComponent;\n        }\n\n        //  This is a temporary approach to pass stores from different packages\n        const context = own_props.context || store;\n        return useObserver(() => ObservedComponent({ ...own_props, ...propsToSelectFn(context, own_props) }));\n    };\n\n    Component.displayName = BaseComponent.name;\n    return Component;\n}\n\nexport const MobxContentProvider = ({ store, children }) => {\n    return <MobxContent.Provider value={{ ...store, mobxStores: store }}>{children}</MobxContent.Provider>;\n};\n\nexport const connect = propsToSelectFn => Component => injectStorePropsToComponent(propsToSelectFn, Component);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_components__;","module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_shared__;","module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_translations__;","module.exports = __WEBPACK_EXTERNAL_MODULE_mobx_react__;","module.exports = __WEBPACK_EXTERNAL_MODULE_react__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import React from 'react';\nimport { Table, Text, ThemedScrollbars, Div100vhContainer } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { isDesktop, CFD_PLATFORMS, isLandingCompanyEnabled } from '@deriv/shared';\nimport { LandingCompany } from '@deriv/api-types';\n\ntype TCFDAttributeDescriberProps = {\n    name: string;\n    counter: number | null;\n};\n\ntype TFilterAvailableAccounts = (\n    landing_companies: LandingCompany,\n    table: TAccountsDescription[],\n    is_logged_in: boolean,\n    is_eu_client: boolean,\n    platform: string,\n    is_australian: boolean\n) => Array<{ [key: string]: string | React.ReactNode | undefined }>;\n\ntype TAccountsDescription = {\n    attribute: string;\n    mt5: TDxTradeAccountsDescription & { financial_stp: string };\n    dxtrade: TDxTradeAccountsDescription;\n};\n\ntype TDxTradeAccountsDescription = {\n    synthetic: string;\n    synthetic_eu: string;\n    financial: string;\n    financial_au: string;\n    financial_eu: string | React.ReactNode;\n    footnote: string | null;\n};\n\ntype TCompareAccountsReusedProps = {\n    landing_companies: LandingCompany;\n    platform: string;\n    is_logged_in: boolean;\n    is_uk: boolean;\n};\n\ntype TCompareAccountsDataParams = TCompareAccountsReusedProps & {\n    is_eu_client: boolean;\n    residence: string;\n};\n\ntype TCFDCompareAccountHintProps = TCompareAccountsReusedProps & {\n    show_risk_message: boolean;\n};\n\ntype TModalContentProps = TCompareAccountsReusedProps & {\n    is_eu_client: boolean;\n    residence: string;\n    is_eu: boolean;\n};\n\ntype TGetAccounts = (params: TCompareAccountsReusedProps) => TAccountsDescription[];\n\ntype TAccountTypesToFilter = (\n    | NonNullable<LandingCompany['mt_gaming_company']>['financial']\n    | NonNullable<LandingCompany['mt_financial_company']>['financial']\n    | NonNullable<LandingCompany['mt_financial_company']>['financial_stp']\n    | LandingCompany['dxtrade_gaming_company']\n    | LandingCompany['dxtrade_financial_company']\n    | boolean\n    | undefined\n)[];\n\nconst getAccounts: TGetAccounts = ({ landing_companies, platform, is_logged_in, is_uk }) => {\n    const getLoggedOutTypesCount = () => (platform === CFD_PLATFORMS.MT5 ? 3 : 2);\n    const getLoggedInTypesCount = () =>\n        (\n            (platform === CFD_PLATFORMS.MT5\n                ? [\n                      landing_companies?.mt_gaming_company?.financial,\n                      landing_companies?.mt_financial_company?.financial,\n                      landing_companies?.mt_financial_company?.financial_stp && platform === CFD_PLATFORMS.MT5,\n                  ]\n                : [\n                      landing_companies?.dxtrade_gaming_company,\n                      landing_companies?.dxtrade_financial_company,\n                  ]) as TAccountTypesToFilter\n        ).filter(Boolean).length;\n\n    const account_types_count = is_logged_in ? getLoggedInTypesCount() : getLoggedOutTypesCount();\n    const financial_eu_trading_instruments = is_uk ? (\n        <div>\n            {localize('Forex, stocks, stock indices, cryptocurrencies')}\n            <Text size='s' weight='bold' className='cfd-compare-accounts__star'>\n                **\n            </Text>\n            {localize(', synthetic indices')}\n        </div>\n    ) : (\n        localize('Forex, stocks, stock indices, cryptocurrencies, synthetic indices')\n    );\n\n    return [\n        {\n            attribute: localize('Account currency'),\n            mt5: {\n                synthetic: localize('USD'),\n                synthetic_eu: localize('EUR'),\n                financial: localize('USD'),\n                financial_au: localize('USD'),\n                financial_eu: localize('EUR/GBP/USD'),\n                financial_stp: localize('USD'),\n                footnote: null,\n            },\n            dxtrade: {\n                synthetic: localize('USD'),\n                synthetic_eu: localize('EUR'),\n                financial: localize('USD'),\n                financial_au: localize('USD'),\n                financial_eu: localize('EUR/GBP'),\n                footnote: null,\n            },\n        },\n        {\n            attribute: localize('Maximum leverage'),\n            mt5: {\n                synthetic: localize('Up to 1:1000'),\n                synthetic_eu: localize('Up to 1:1000'),\n                financial: localize('Up to 1:1000'),\n                financial_au: localize('Up to 1:30'),\n                financial_eu: localize('Up to 1:30'),\n                financial_stp: localize('Up to 1:100'),\n                footnote: localize(\n                    'Leverage gives you the ability to trade a larger position using your existing capital. Leverage varies across different symbols.'\n                ),\n            },\n            dxtrade: {\n                synthetic: localize('Up to 1:1000'),\n                synthetic_eu: localize('Up to 1:1000'),\n                financial: localize('Up to 1:1000'),\n                financial_au: localize('Up to 1:30'),\n                financial_eu: localize('Up to 1:30'),\n                footnote: localize(\n                    'Leverage gives you the ability to trade a larger position using your existing capital. Leverage varies across different symbols.'\n                ),\n            },\n        },\n        {\n            attribute: localize('Order execution'),\n            mt5: {\n                synthetic: localize('Market'),\n                synthetic_eu: localize('Market'),\n                financial: localize('Market'),\n                financial_au: localize('Market'),\n                financial_eu: localize('Market'),\n                financial_stp: localize('Market'),\n                footnote: localize(\n                    \"All {{count}} account types use market execution. This means you agree with the broker's price in advance and will place orders at the broker's price.\",\n                    {\n                        count: account_types_count,\n                    }\n                ),\n            },\n            dxtrade: {\n                synthetic: localize('Market'),\n                synthetic_eu: localize('Market'),\n                financial: localize('Market'),\n                financial_au: localize('Market'),\n                financial_eu: localize('Market'),\n                footnote: localize(\n                    \"All {{count}} account types use market execution. This means you agree with the broker's price in advance and will place orders at the broker's price.\",\n                    {\n                        count: account_types_count,\n                    }\n                ),\n            },\n        },\n        {\n            attribute: localize('Spread'),\n            mt5: {\n                synthetic: localize('Fixed/Variable'),\n                synthetic_eu: localize('Fixed/Variable'),\n                financial: localize('Variable'),\n                financial_au: localize('Variable'),\n                financial_eu: localize('Fixed/Variable'),\n                financial_stp: localize('Variable'),\n                footnote: localize(\n                    \"The spread is the difference between the buy price and sell price. A variable spread means that the spread is constantly changing, depending on market conditions. A fixed spread remains constant but is subject to alteration, at the Broker's absolute discretion.\"\n                ),\n            },\n            dxtrade: {\n                synthetic: localize('Fixed/Variable'),\n                synthetic_eu: localize('Fixed/Variable'),\n                financial: localize('Variable'),\n                financial_au: localize('Variable'),\n                financial_eu: localize('Variable'),\n                footnote: localize(\n                    \"The spread is the difference between the buy price and sell price. A variable spread means that the spread is constantly changing, depending on market conditions. A fixed spread remains constant but is subject to alteration, at the Broker's absolute discretion.\"\n                ),\n            },\n        },\n        {\n            attribute: localize('Commission'),\n            mt5: {\n                synthetic: localize('No'),\n                synthetic_eu: localize('No'),\n                financial: localize('No'),\n                financial_au: localize('No'),\n                financial_eu: localize('No'),\n                financial_stp: localize('No'),\n                footnote: localize('Deriv charges no commission across all account types.'),\n            },\n            dxtrade: {\n                synthetic: localize('No'),\n                synthetic_eu: localize('No'),\n                financial: localize('No'),\n                financial_au: localize('No'),\n                financial_eu: localize('No'),\n                footnote: localize('Deriv charges no commission across all account types.'),\n            },\n        },\n        {\n            attribute: localize('Minimum deposit'),\n            mt5: {\n                synthetic: localize('No'),\n                synthetic_eu: localize('No'),\n                financial: localize('No'),\n                financial_au: localize('No'),\n                financial_eu: localize('No'),\n                financial_stp: localize('No'),\n                footnote: null,\n            },\n            dxtrade: {\n                synthetic: localize('No'),\n                synthetic_eu: localize('No'),\n                financial: localize('No'),\n                financial_au: localize('No'),\n                financial_eu: localize('No'),\n                footnote: null,\n            },\n        },\n        {\n            attribute: localize('Margin call'),\n            mt5: {\n                synthetic: localize('100%'),\n                synthetic_eu: localize('100%'),\n                financial: localize('100%'),\n                financial_au: localize('100%'),\n                financial_eu: localize('100%'),\n                financial_stp: localize('100%'),\n                footnote: localize(\n                    'You’ll get a warning, known as margin call, if your account balance drops down close to the stop out level.'\n                ),\n            },\n            dxtrade: {\n                synthetic: localize('100%'),\n                synthetic_eu: localize('100%'),\n                financial: localize('100%'),\n                financial_au: localize('100%'),\n                financial_eu: localize('100%'),\n                footnote: localize(\n                    'You’ll get a warning, known as margin call, if your account balance drops down close to the stop out level.'\n                ),\n            },\n        },\n        {\n            attribute: localize('Stop out level'),\n            mt5: {\n                synthetic: localize('50%'),\n                synthetic_eu: localize('50%'),\n                financial: localize('50%'),\n                financial_au: localize('50%'),\n                financial_eu: localize('50%'),\n                financial_stp: localize('50%'),\n                footnote: localize(\n                    \"To understand stop out, first you need to learn about margin level, which is  the ratio of your equity (the total balance you would have if you close all your positions at that point) to the margin you're using at the moment. If your margin level drops below our stop out level, your positions may be closed automatically to protect you from further losses.\"\n                ),\n            },\n            dxtrade: {\n                synthetic: localize('50%'),\n                synthetic_eu: localize('50%'),\n                financial: localize('50%'),\n                financial_au: localize('50%'),\n                financial_eu: localize('50%'),\n                footnote: localize(\n                    \"To understand stop out, first you need to learn about margin level, which is  the ratio of your equity (the total balance you would have if you close all your positions at that point) to the margin you're using at the moment. If your margin level drops below our stop out level, your positions may be closed automatically to protect you from further losses.\"\n                ),\n            },\n        },\n        {\n            attribute: localize('Number of assets'),\n            mt5: {\n                synthetic: localize('20+'),\n                synthetic_eu: localize('20+'),\n                financial: localize('150+'),\n                financial_au: localize('100+'),\n                financial_eu: localize('50+'),\n                financial_stp: localize('70+'),\n                footnote: null,\n            },\n            dxtrade: {\n                synthetic: localize('20+'),\n                synthetic_eu: localize('20+'),\n                financial: localize('90+'),\n                financial_au: localize('90+'),\n                financial_eu: localize('90+'),\n                footnote: null,\n            },\n        },\n        {\n            attribute: localize('Cryptocurrency trading'),\n            mt5: {\n                synthetic: localize('N/A'),\n                synthetic_eu: localize('N/A'),\n                financial: localize('24/7'),\n                financial_au: localize('24/7'),\n                financial_eu: localize('24/7'),\n                financial_stp: localize('24/7'),\n                footnote: localize('Indicates the availability of cryptocurrency trading on a particular account.'),\n            },\n            dxtrade: {\n                synthetic: localize('N/A'),\n                synthetic_eu: localize('N/A'),\n                financial: localize('24/7'),\n                financial_au: localize('24/7'),\n                financial_eu: localize('24/7'),\n                footnote: localize('Indicates the availability of cryptocurrency trading on a particular account.'),\n            },\n        },\n        {\n            attribute: localize('Trading instruments'),\n            mt5: {\n                synthetic: localize('Synthetics'),\n                synthetic_eu: localize('Synthetics'),\n                financial: localize(\n                    'FX-majors (standard/micro lots), FX-minors, basket indices, commodities, cryptocurrencies, and stocks and stock indices'\n                ),\n                financial_au: localize(\n                    'FX-majors (standard/micro lots), FX-minors, Commodities, Cryptocurrencies, Stocks, and Stock Indices'\n                ),\n                financial_eu: financial_eu_trading_instruments,\n                financial_stp: localize('FX-majors, FX-minors, FX-exotics, and cryptocurrencies'),\n                footnote: null,\n            },\n            dxtrade: {\n                synthetic: localize('Synthetics'),\n                synthetic_eu: localize('Synthetics'),\n                financial: localize(\n                    'FX majors (standard/micro lots), FX minors, basket indices, commodities, and cryptocurrencies'\n                ),\n                financial_au: localize('FX-majors (standard/micro lots), FX-minors, Commodities, Cryptocurrencies'),\n                financial_eu: localize(\n                    'FX-majors (standard/micro lots), FX-minors, Commodities, Cryptocurrencies (except UK)'\n                ),\n                footnote: null,\n            },\n        },\n    ];\n};\n\nconst CFDAttributeDescriber = ({ name, counter }: TCFDAttributeDescriberProps) => {\n    const [is_visible, setIsVisible] = React.useState(false);\n    const toggleModal = () => setIsVisible(!is_visible);\n\n    return counter ? (\n        <React.Fragment>\n            <Text\n                as='p'\n                weight='bold'\n                size='xs'\n                line_height='s'\n                className='cfd-attribute-describer'\n                onClick={toggleModal}\n            >\n                {name}\n                <Text weight='bold' as='span' line_height='x' size='xxxs' className='counter'>\n                    {counter}\n                </Text>\n            </Text>\n        </React.Fragment>\n    ) : (\n        <Text as='p' weight='bold' size='xs' line_height='s' className='cfd-attribute-describer'>\n            {name}\n        </Text>\n    );\n};\n\nconst filterAvailableAccounts: TFilterAvailableAccounts = (\n    landing_companies,\n    table,\n    is_logged_in,\n    is_eu_client,\n    platform,\n    is_australian\n) => {\n    const getFinancialObject = (financial?: string, financial_au?: string, financial_eu?: string | React.ReactNode) => {\n        if (is_australian) {\n            return financial_au;\n        }\n        if (is_eu_client) {\n            return financial_eu;\n        }\n        return financial;\n    };\n\n    let footnote_number = 0;\n    return table\n        .filter(row => row[platform as keyof TAccountsDescription])\n        .map(({ attribute, mt5 = {}, dxtrade = {} }) => {\n            const { synthetic, synthetic_eu, financial, financial_au, financial_eu, footnote } =\n                platform === CFD_PLATFORMS.MT5 ? mt5 : dxtrade;\n            const synthetic_object = { synthetic: is_eu_client ? synthetic_eu : synthetic };\n            const financial_object = { financial: getFinancialObject(financial, financial_au, financial_eu) };\n            const footnote_counter = footnote ? ++footnote_number : null;\n\n            if (is_logged_in) {\n                return {\n                    attribute: <CFDAttributeDescriber name={attribute} counter={footnote_counter} />,\n                    ...(landing_companies?.mt_gaming_company?.financial ? synthetic_object : {}),\n                    ...(landing_companies?.mt_financial_company?.financial ? financial_object : {}),\n                    ...(landing_companies?.mt_financial_company?.financial_stp && platform === CFD_PLATFORMS.MT5\n                        ? { financial_stp: mt5?.financial_stp }\n                        : {}),\n                };\n            }\n            if (platform === CFD_PLATFORMS.DXTRADE) {\n                return {\n                    attribute: <CFDAttributeDescriber name={attribute} counter={footnote_counter} />,\n                    ...synthetic_object,\n                    ...financial_object,\n                };\n            }\n            return {\n                attribute: <CFDAttributeDescriber name={attribute} counter={footnote_counter} />,\n                ...synthetic_object,\n                ...financial_object,\n                ...{ financial_stp: mt5?.financial_stp },\n            };\n        });\n};\n\nconst compareAccountsData = ({\n    landing_companies,\n    is_logged_in,\n    is_eu_client,\n    platform,\n    residence,\n    is_uk,\n}: TCompareAccountsDataParams) => {\n    const is_australian = residence === 'au';\n    return filterAvailableAccounts(\n        landing_companies,\n        getAccounts({ landing_companies, platform, is_logged_in, is_uk }),\n        is_logged_in,\n        is_eu_client,\n        platform,\n        is_australian\n    );\n};\n\nconst CFDCompareAccountHint = ({\n    platform,\n    show_risk_message,\n    landing_companies,\n    is_logged_in,\n    is_uk,\n}: TCFDCompareAccountHintProps) => {\n    return (\n        <div className='cfd-compare-account--hint'>\n            <div className='cfd-compare-accounts__bullet-wrapper'>\n                <span className='cfd-compare-accounts__bullet cfd-compare-accounts__bullet--circle' />\n                <Localize i18n_default_text='At bank rollover, liquidity in the forex markets is reduced and may increase the spread and processing time for client orders. This happens around 21:00 GMT during daylight saving time, and 22:00 GMT non-daylight saving time.' />\n            </div>\n            {show_risk_message && (\n                <React.Fragment>\n                    <div className='cfd-compare-accounts__bullet-wrapper'>\n                        <span className='cfd-compare-accounts__bullet cfd-compare-accounts__bullet--circle' />\n                        <Localize i18n_default_text='Margin call and stop out level will change from time to time based on market condition.' />\n                    </div>\n                    <div className='cfd-compare-accounts__bullet-wrapper'>\n                        <Text\n                            size='xs'\n                            line_height='x'\n                            weight='bold'\n                            className='cfd-compare-accounts__bullet cfd-compare-accounts__bullet--star cfd-compare-accounts__star'\n                        >\n                            *\n                        </Text>\n                        <Localize\n                            i18n_default_text='To protect your portfolio from adverse market movements due to the market opening gap, we reserve the right to decrease leverage on all offered symbols for financial accounts before market close and increase it again after market open. Please make sure that you have enough funds available in your {{platform}} account to support your positions at all times.'\n                            values={{\n                                platform: platform === CFD_PLATFORMS.MT5 ? localize('MT5') : localize('Deriv X'),\n                            }}\n                        />\n                    </div>\n                    {is_uk && (\n                        <div className='cfd-compare-accounts__bullet-wrapper'>\n                            <Text\n                                size='xs'\n                                line_height='x'\n                                weight='bold'\n                                className='cfd-compare-accounts__bullet cfd-compare-accounts__bullet--star cfd-compare-accounts__star'\n                            >\n                                **\n                            </Text>\n                            <Localize\n                                i18n_default_text='Cryptocurrency trading is not available for clients residing in the United Kingdom.'\n                                values={{\n                                    platform: platform === CFD_PLATFORMS.MT5 ? localize('MT5') : localize('Deriv X'),\n                                }}\n                            />\n                        </div>\n                    )}\n                </React.Fragment>\n            )}\n            {getAccounts({ landing_companies, platform, is_logged_in, is_uk })\n                .filter(\n                    item =>\n                        !!(item[platform as keyof TAccountsDescription] as TAccountsDescription['mt5' | 'dxtrade'])\n                            ?.footnote\n                )\n                .map((account, index) => {\n                    return (\n                        <div key={index} className='cfd-compare-accounts__bullet-wrapper'>\n                            <Text\n                                size='xs'\n                                line_height='x'\n                                weight='bold'\n                                className='cfd-compare-accounts__bullet cfd-compare-accounts__bullet--star cfd-compare-accounts__star'\n                            >\n                                {index + 1}\n                            </Text>\n                            <div className='cfd-compare-accounts__footnote'>\n                                <Text\n                                    as='p'\n                                    size='xs'\n                                    weight='bold'\n                                    color='prominent'\n                                    className='cfd-compare-accounts__footnote-title'\n                                >\n                                    {account.attribute}\n                                </Text>\n                                <Text size='xs' color='prominent'>\n                                    {\n                                        (\n                                            account[platform as keyof TAccountsDescription] as TAccountsDescription[\n                                                | 'mt5'\n                                                | 'dxtrade']\n                                        ).footnote\n                                    }\n                                </Text>\n                            </div>\n                        </div>\n                    );\n                })}\n        </div>\n    );\n};\n\nconst ModalContent = ({\n    landing_companies,\n    is_logged_in,\n    platform,\n    is_eu_client,\n    residence,\n    is_eu,\n    is_uk,\n}: TModalContentProps) => {\n    const [cols, setCols] = React.useState<Array<Record<string, string | React.ReactNode | undefined>>>([]);\n    const [template_columns, updateColumnsStyle] = React.useState(\n        platform === CFD_PLATFORMS.DXTRADE ? '1.5fr 1fr 2fr' : '1.5fr 1fr 2fr 1fr'\n    );\n\n    React.useEffect(() => {\n        setCols(compareAccountsData({ landing_companies, is_logged_in, platform, is_eu_client, residence, is_uk }));\n\n        if (is_logged_in && platform === CFD_PLATFORMS.MT5) {\n            updateColumnsStyle(\n                `1.5fr ${landing_companies?.mt_gaming_company?.financial ? '1fr' : ''} ${\n                    landing_companies?.mt_financial_company?.financial ? '2fr' : ''\n                } ${landing_companies?.mt_financial_company?.financial_stp ? ' 1fr ' : ''}`\n            );\n        } else if (is_logged_in && platform === CFD_PLATFORMS.DXTRADE) {\n            updateColumnsStyle(\n                `1.5fr ${landing_companies?.dxtrade_gaming_company ? '1fr' : ''} ${\n                    landing_companies?.dxtrade_financial_company ? '2fr' : ''\n                }`\n            );\n        }\n    }, [\n        landing_companies?.mt_financial_company,\n        landing_companies?.mt_gaming_company,\n        is_logged_in,\n        is_uk,\n        landing_companies,\n        platform,\n        is_eu_client,\n        residence,\n    ]);\n\n    const show_risk_message = platform === CFD_PLATFORMS.MT5 || !is_eu_client;\n    const financial_account_table_head_text = is_eu ? localize('CFDs') : localize('Financial');\n\n    return (\n        <Div100vhContainer height_offset='40px' is_bypassed={isDesktop()}>\n            <ThemedScrollbars\n                className='cfd-compare-accounts'\n                style={{\n                    '--cfd-compare-accounts-template-columns': template_columns,\n                }}\n            >\n                <div className='cfd-compare-accounts__table-wrapper'>\n                    <Table className='cfd-compare-accounts__table'>\n                        <Table.Header>\n                            <Table.Row className='cfd-compare-accounts__table-row'>\n                                <Table.Head fixed />\n                                {is_logged_in ? (\n                                    <React.Fragment>\n                                        {isLandingCompanyEnabled({ landing_companies, platform, type: 'gaming' }) && (\n                                            <Table.Head>{localize('Derived')}</Table.Head>\n                                        )}\n                                        {isLandingCompanyEnabled({\n                                            landing_companies,\n                                            platform,\n                                            type: 'financial',\n                                        }) && (\n                                            <Table.Head>\n                                                {financial_account_table_head_text}\n                                                <Text size='s' weight='bold' className='cfd-compare-accounts__star'>\n                                                    *\n                                                </Text>\n                                            </Table.Head>\n                                        )}\n                                        {isLandingCompanyEnabled({\n                                            landing_companies,\n                                            platform,\n                                            type: 'financial_stp',\n                                        }) && (\n                                            <Table.Head>\n                                                {localize('Financial STP')}\n                                                <Text size='s' weight='bold' className='cfd-compare-accounts__star'>\n                                                    *\n                                                </Text>\n                                            </Table.Head>\n                                        )}\n                                    </React.Fragment>\n                                ) : (\n                                    <React.Fragment>\n                                        <Table.Head>{localize('Derived')}</Table.Head>\n                                        <Table.Head>\n                                            {localize('Financial')}\n                                            <Text size='s' weight='bold' className='cfd-compare-accounts__star'>\n                                                *\n                                            </Text>\n                                        </Table.Head>\n                                        {platform === CFD_PLATFORMS.MT5 && (\n                                            <Table.Head>\n                                                {localize('Financial STP')}\n                                                <Text size='s' weight='bold' className='cfd-compare-accounts__star'>\n                                                    *\n                                                </Text>\n                                            </Table.Head>\n                                        )}\n                                    </React.Fragment>\n                                )}\n                            </Table.Row>\n                        </Table.Header>\n                        <Table.Body>\n                            {cols.map((row, i) => (\n                                <Table.Row key={i} className='cfd-compare-accounts__table-row'>\n                                    {Object.keys(row).map((col, j) => (\n                                        <Table.Cell key={j} fixed={j === 0}>\n                                            {row[col]}\n                                        </Table.Cell>\n                                    ))}\n                                </Table.Row>\n                            ))}\n                        </Table.Body>\n                    </Table>\n                </div>\n                <CFDCompareAccountHint\n                    platform={platform}\n                    show_risk_message={show_risk_message}\n                    landing_companies={landing_companies}\n                    is_logged_in={is_logged_in}\n                    is_uk={is_uk}\n                />\n            </ThemedScrollbars>\n        </Div100vhContainer>\n    );\n};\n\nexport default ModalContent;\n","import { localize } from '@deriv/translations';\nimport { TCompareAccountContentProps, TCompareAccountFooterButtonData } from '../Containers/props.types';\n\nexport const getEuRealContent = (): TCompareAccountContentProps[] => [\n    {\n        id: 'platform',\n        attribute: localize('Platform'),\n        values: {\n            financial_maltainvest: { text: localize('MT5'), options: { size: 'xxs' } },\n        },\n    },\n    {\n        id: 'jurisdiction',\n        attribute: localize('Jurisdiction'),\n        values: {\n            financial_maltainvest: { text: localize('Malta'), options: { weight: 'bold' } },\n        },\n    },\n    {\n        id: 'counterparty',\n        attribute: localize('Counterparty company'),\n        values: {\n            financial_maltainvest: { text: localize('Deriv Investments (Europe) Limited') },\n        },\n    },\n    {\n        id: 'regulator',\n        attribute: localize('Regulator'),\n        values: {\n            financial_maltainvest: {\n                text: localize('Regulated by the Malta Financial Services Authority (MFSA) (licence no. IS/70156)'),\n                options: { styles: { padding: '1.8rem 0.8rem' } },\n            },\n        },\n    },\n    {\n        id: 'leverage',\n        attribute: localize('Maximum leverage'),\n        values: {\n            financial_maltainvest: { text: localize('Up to 1:30'), options: { size: 'xxxs' } },\n        },\n    },\n    {\n        id: 'instruments',\n        attribute: localize('Trading instruments'),\n        values: {\n            financial_maltainvest: [\n                { text: localize('Synthetics'), options: { should_show_asterick_at_end: true } },\n                { text: localize('Forex: standard') },\n                { text: localize('Stocks') },\n                { text: localize('Stock indices') },\n                { text: localize('Commodities') },\n                { text: localize('Cryptocurrencies') },\n                {\n                    text: localize('*Boom 300 and Crash 300 Index'),\n                    options: { color: 'loss-danger', weight: 'bold', styles: { paddingTop: '2rem' } },\n                },\n            ],\n        },\n    },\n];\nexport const getCrRealContent = (): TCompareAccountContentProps[] => [\n    {\n        id: 'platform',\n        attribute: localize('Platform'),\n        values: {\n            synthetic_svg: { text: localize('MT5') },\n            derivx: { text: localize('Deriv X') },\n        },\n    },\n    {\n        id: 'jurisdiction',\n        attribute: localize('Jurisdiction'),\n        values: {\n            synthetic_svg: { text: localize('St. Vincent & Grenadines'), options: { weight: 'bold' } },\n            synthetic_bvi: { text: localize('British Virgin Islands'), options: { weight: 'bold' } },\n            synthetic_vanuatu: { text: localize('Vanuatu'), options: { weight: 'bold' } },\n            financial_svg: { text: localize('St. Vincent & Grenadines'), options: { weight: 'bold' } },\n            financial_bvi: { text: localize('British Virgin Islands'), options: { weight: 'bold' } },\n            financial_vanuatu: { text: localize('Vanuatu'), options: { weight: 'bold' } },\n            financial_labuan: {\n                text: localize('Labuan'),\n                options: { weight: 'bold' },\n                tooltip_msg: localize(\n                    'Choosing this jurisdiction will give you a Financial STP account. Your trades will go directly to the market and have tighter spreads.'\n                ),\n            },\n            derivx: { text: localize('St. Vincent & Grenadines'), options: { weight: 'bold' } },\n        },\n    },\n    {\n        id: 'counterparty',\n        attribute: localize('Counterparty company'),\n        values: {\n            synthetic_svg: { text: localize('Deriv (SVG) LLC') },\n            synthetic_bvi: { text: localize('Deriv (BVI) Ltd') },\n            synthetic_vanuatu: { text: localize('Deriv (V) Ltd') },\n            financial_svg: { text: localize('Deriv (SVG) LLC') },\n            financial_bvi: { text: localize('Deriv (BVI) Ltd') },\n            financial_vanuatu: { text: localize('Deriv (V) Ltd') },\n            financial_labuan: { text: localize('Deriv (FX) Ltd') },\n            derivx: { text: localize('Deriv (SVG) LLC') },\n        },\n    },\n    {\n        id: 'regulator',\n        attribute: localize('Regulator/External dispute resolution'),\n        values: {\n            synthetic_svg: { text: localize('Financial Commission') },\n            synthetic_bvi: {\n                text: localize('British Virgin Islands Financial Services Commission (licence no. SIBA/L/18/1114)'),\n            },\n            synthetic_vanuatu: {\n                text: localize('Vanuatu Financial Services Commission'),\n            },\n            financial_svg: { text: localize('Financial Commission') },\n            financial_bvi: {\n                text: localize('British Virgin Islands Financial Services Commission (licence no. SIBA/L/18/1114)'),\n            },\n            financial_vanuatu: {\n                text: localize('Vanuatu Financial Services Commission'),\n            },\n            financial_labuan: { text: localize('Labuan Financial Services Authority (Licence no. MB/18/0024)') },\n            derivx: { text: 'Financial Commission' },\n        },\n    },\n    {\n        id: 'leverage',\n        attribute: localize('Maximum leverage'),\n        values: {\n            synthetic_svg: { text: localize('Up to 1:1000') },\n            financial_vanuatu: { text: localize('Up to 1:1000') },\n            financial_labuan: { text: localize('Up to 1:100') },\n            derivx: { text: localize('Up to 1:1000') },\n        },\n    },\n    {\n        id: 'instruments',\n        attribute: localize('Trading instruments'),\n        values: {\n            synthetic_svg: [\n                { text: localize('Synthetics') },\n                { text: localize('Baskets') },\n                { text: localize('Derived FX') },\n            ],\n            financial_svg: [\n                { text: localize('Forex: standard/micro') },\n                { text: localize('Stocks') },\n                { text: localize('Stock indices') },\n                { text: localize('Commodities') },\n                { text: localize('Cryptocurrencies') },\n            ],\n            financial_vanuatu: [\n                { text: localize('Forex') },\n                { text: localize('Stock indices') },\n                { text: localize('Commodities') },\n                { text: localize('Cryptocurrencies') },\n            ],\n            financial_labuan: [{ text: localize('Forex') }, { text: localize('Cryptocurrencies') }],\n            derivx: [\n                { text: localize('Synthetics') },\n                { text: localize('Baskets') },\n                { text: localize('Derived FX') },\n                { text: localize('Forex: standard/micro') },\n                { text: localize('Stocks') },\n                { text: localize('Stock indices') },\n                { text: localize('Commodities') },\n                { text: localize('Cryptocurrencies') },\n            ],\n        },\n    },\n];\n\nexport const getCrRealFooterButtons = (): TCompareAccountFooterButtonData[] => [\n    { label: localize('Add'), action: 'synthetic_svg' },\n    { label: localize('Add'), action: 'synthetic_bvi' },\n    { label: localize('Add'), action: 'synthetic_vanuatu' },\n    { label: localize('Add'), action: 'financial_svg' },\n    { label: localize('Add'), action: 'financial_bvi' },\n    { label: localize('Add'), action: 'financial_vanuatu' },\n    { label: localize('Add'), action: 'financial_labuan' },\n    { label: localize('Add'), action: 'derivx' },\n];\nexport const getEuFooterButtons = (): TCompareAccountFooterButtonData[] => [\n    { label: localize('Add'), action: 'financial_maltainvest' },\n];\n\nexport const getPreappstoreCrDemoContent = (): TCompareAccountContentProps[] => [\n    {\n        id: 'platform',\n        attribute: localize('Platform'),\n        values: {\n            synthetic_svg: { text: localize('MT5') },\n            financial_svg: { text: localize('MT5') },\n            derivx: { text: localize('Deriv X') },\n        },\n    },\n    {\n        id: 'leverage',\n        attribute: localize('Maximum leverage'),\n        values: {\n            synthetic_svg: { text: localize('Up to 1:1000') },\n            financial_svg: { text: localize('Up to 1:1000') },\n            derivx: { text: localize('Up to 1:1000') },\n        },\n    },\n    {\n        id: 'instruments',\n        attribute: localize('Trading instruments'),\n        values: {\n            synthetic_svg: [\n                { text: localize('Synthetics') },\n                { text: localize('Baskets') },\n                { text: localize('Derived FX') },\n            ],\n            financial_svg: [\n                { text: localize('Forex: standard/micro') },\n                { text: localize('Stocks') },\n                { text: localize('Stock indices') },\n                { text: localize('Commodities') },\n                { text: localize('Cryptocurrencies') },\n            ],\n            derivx: [\n                { text: localize('Synthetics') },\n                { text: localize('Baskets') },\n                { text: localize('Derived FX') },\n                { text: localize('Forex: standard/micro') },\n                { text: localize('Stocks') },\n                { text: localize('Stock indices') },\n                { text: localize('Commodities') },\n                { text: localize('Cryptocurrencies') },\n            ],\n        },\n    },\n];\n\nexport const getPreappstoreCrDemoFooterButtons = (): TCompareAccountFooterButtonData[] => [\n    { label: localize('Add'), action: 'synthetic_svg' },\n    { label: localize('Add'), action: 'financial_svg' },\n    { label: localize('Add'), action: 'derivx' },\n];\n\nexport const getPreappstoreEuDemoContent = (): TCompareAccountContentProps[] => [\n    {\n        id: 'leverage',\n        attribute: localize('Maximum leverage'),\n        values: {\n            financial_maltainvest: { text: localize('Up to 1:30'), options: { size: 'xxxs' } },\n        },\n    },\n    {\n        id: 'instruments',\n        attribute: localize('Trading instruments'),\n        values: {\n            financial_maltainvest: [\n                { text: localize('Synthetics'), options: { should_show_asterick_at_end: true } },\n                { text: localize('Forex: standard') },\n                { text: localize('Stocks') },\n                { text: localize('Stock indices') },\n                { text: localize('Commodities') },\n                { text: localize('Cryptocurrencies') },\n                {\n                    text: localize('*Boom 300 and Crash 300 Index'),\n                    options: { color: 'loss-danger', weight: 'bold', styles: { paddingTop: '2rem' } },\n                },\n            ],\n        },\n    },\n];\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Table, Button, Text, Popover } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { isDesktop, WS, getAuthenticationStatusInfo, CFD_PLATFORMS, ContentFlag, Jurisdiction } from '@deriv/shared';\nimport { connect } from '../Stores/connect';\nimport RootStore from '../Stores/index';\nimport {\n    TDMT5CompareModalContentProps,\n    TCompareAccountContentProps,\n    TCompareAccountFooterButtonData,\n    TCompareAccountContentValues,\n    TCompareAccountRowProps,\n    TCompareAccountRowItem,\n} from './props.types';\nimport {\n    getEuRealContent,\n    getCrRealContent,\n    getCrRealFooterButtons,\n    getPreappstoreCrDemoContent,\n    getPreappstoreCrDemoFooterButtons,\n    getPreappstoreEuDemoContent,\n    getEuFooterButtons,\n} from '../Constants/cfd_compare_account_content';\nimport { GetSettings, GetAccountSettingsResponse } from '@deriv/api-types';\n\nconst Row = ({\n    id,\n    attribute,\n    values,\n    pre_appstore_class,\n    available_accounts_count,\n    classname_for_demo_and_eu,\n    is_pre_appstore_setting,\n    content_flag,\n    is_high_risk_for_mt5,\n    CFDs_restricted_countries,\n    is_preappstore_restricted_cr_demo_account,\n}: TCompareAccountRowProps) => {\n    const is_leverage_row = id === 'leverage';\n    const is_platform_row = id === 'platform';\n    const is_instruments_row = id === 'instruments';\n\n    const getContentSize = () => {\n        if (id === 'counterparty' || id === 'leverage') return isDesktop() ? 'xxs' : 'xxxs';\n        return isDesktop() ? 'xxxs' : 'xxxxs';\n    };\n\n    if (is_platform_row && !is_pre_appstore_setting) {\n        return null;\n    }\n\n    if (is_platform_row && is_pre_appstore_setting && CFDs_restricted_countries) {\n        values.synthetic_bvi = { text: 'MT5' };\n    }\n\n    if (CFDs_restricted_countries) {\n        delete values.derivx;\n    }\n\n    if (is_pre_appstore_setting && is_preappstore_restricted_cr_demo_account) {\n        delete values.synthetic_bvi;\n    }\n\n    if (is_platform_row && content_flag === ContentFlag.HIGH_RISK_CR && is_high_risk_for_mt5) {\n        // needed to adjust the design for high risk\n        values.financial_svg = { text: 'MT5' };\n    }\n    return (\n        <Table.Row\n            className={\n                classname_for_demo_and_eu ??\n                classNames(`cfd-accounts-compare-modal__table-row${pre_appstore_class}`, {\n                    [`cfd-accounts-compare-modal__table-row--leverage${pre_appstore_class}`]: is_leverage_row,\n                    [`cfd-accounts-compare-modal__row-with-columns-count-${available_accounts_count + 1}`]:\n                        available_accounts_count < 6,\n                    [`cfd-accounts-compare-modal__table-row--platform${pre_appstore_class}`]: is_platform_row,\n                    [`cfd-accounts-compare-modal__table-row--instruments${pre_appstore_class}`]: is_instruments_row,\n                })\n            }\n        >\n            <Table.Cell fixed>\n                <Text as='p' weight='bold' color='prominent' size='xxs'>\n                    {attribute}\n                </Text>\n            </Table.Cell>\n\n            {Object.keys(values).map(rowKey => (\n                <Table.Cell\n                    key={rowKey}\n                    className={classNames('cfd-accounts-compare-modal__table-row-item', {\n                        'cfd-accounts-compare-modal__table-row-item--tooltip': (\n                            values[rowKey] as TCompareAccountRowItem\n                        )?.tooltip_msg,\n                    })}\n                >\n                    <>\n                        {Array.isArray(values[rowKey]) ? (\n                            (values[rowKey] as TCompareAccountRowItem[])?.map((item, index) => (\n                                <Text\n                                    key={index}\n                                    as='p'\n                                    color={item?.options?.color ?? 'prominent'}\n                                    weight={item?.options?.weight ?? 'normal'}\n                                    align={item?.options?.align ?? 'center'}\n                                    size={item?.options?.size ?? getContentSize()}\n                                    styles={item?.options?.styles ?? ''}\n                                >\n                                    {item.text}\n                                    {item?.options?.should_show_asterick_at_end && (\n                                        <Text color={'loss-danger'} size={'xxxs'}>\n                                            *\n                                        </Text>\n                                    )}\n                                </Text>\n                            ))\n                        ) : (\n                            <>\n                                <Text\n                                    as='p'\n                                    weight={(values[rowKey] as TCompareAccountRowItem)?.options?.weight ?? 'normal'}\n                                    align={(values[rowKey] as TCompareAccountRowItem)?.options?.align ?? 'center'}\n                                    color={(values[rowKey] as TCompareAccountRowItem)?.options?.color ?? 'prominent'}\n                                    size={(values[rowKey] as TCompareAccountRowItem)?.options?.size ?? getContentSize()}\n                                    styles={(values[rowKey] as TCompareAccountRowItem)?.options?.styles ?? ''}\n                                >\n                                    {(values[rowKey] as TCompareAccountRowItem)?.text}\n                                </Text>\n                                {(values[rowKey] as TCompareAccountRowItem)?.tooltip_msg && (\n                                    <Popover\n                                        alignment='left'\n                                        className='cfd-compare-accounts-tooltip'\n                                        classNameBubble='cfd-compare-accounts-tooltip--msg'\n                                        icon='info'\n                                        disable_message_icon\n                                        is_bubble_hover_enabled\n                                        message={(values[rowKey] as TCompareAccountRowItem)?.tooltip_msg}\n                                        zIndex={9999}\n                                    />\n                                )}\n                            </>\n                        )}\n                    </>\n                </Table.Cell>\n            ))}\n        </Table.Row>\n    );\n};\n\nconst DMT5CompareModalContent = ({\n    content_flag,\n    account_settings,\n    account_status,\n    clearCFDError,\n    current_list,\n    has_real_account,\n    is_demo_tab,\n    is_logged_in,\n    is_pre_appstore_setting,\n    is_preappstore_cr_demo_account,\n    is_preappstore_restricted_cr_demo_account,\n    is_real_enabled,\n    is_virtual,\n    openDerivRealAccountNeededModal,\n    openPasswordModal,\n    openSwitchToRealAccountModal,\n    real_account_creation_unlock_date,\n    setAccountSettings,\n    setAccountType,\n    setAppstorePlatform,\n    setJurisdictionSelectedShortcode,\n    setShouldShowCooldownModal,\n    should_restrict_bvi_account_creation,\n    should_restrict_vanuatu_account_creation,\n    should_show_derivx,\n    show_eu_related_content,\n    toggleCFDVerificationModal,\n    toggleCompareAccounts,\n    trading_platform_available_accounts,\n    upgradeable_landing_companies,\n    updateMT5Status,\n    no_CR_account,\n    is_eu_user,\n    no_MF_account,\n    CFDs_restricted_countries,\n}: TDMT5CompareModalContentProps) => {\n    const [has_submitted_personal_details, setHasSubmittedPersonalDetails] = React.useState(false);\n\n    const mt5_platforms = trading_platform_available_accounts.map(\n        account => `${account.market_type === 'gaming' ? 'synthetic' : account.market_type}_${account.shortcode}`\n    );\n\n    const has_synthetic = trading_platform_available_accounts.some(account => account.market_type === 'gaming');\n    const available_accounts_keys = [...mt5_platforms, ...(should_show_derivx && has_synthetic ? ['derivx'] : [])];\n\n    const logged_out_available_accounts_count = show_eu_related_content ? 1 : 6;\n    const available_accounts_count = is_logged_in\n        ? available_accounts_keys.length\n        : logged_out_available_accounts_count;\n    const synthetic_accounts_count =\n        !is_logged_in && !show_eu_related_content\n            ? 2\n            : available_accounts_keys.filter(key => key.startsWith('synthetic')).length;\n    const financial_accounts_count =\n        !is_logged_in && !show_eu_related_content\n            ? 4\n            : available_accounts_keys.filter(key => key.startsWith('financial')).length || 1;\n\n    const is_high_risk_for_mt5 = synthetic_accounts_count === 1 && financial_accounts_count === 1;\n    const {\n        poi_or_poa_not_submitted,\n        poi_acknowledged_for_vanuatu_maltainvest,\n        poi_acknowledged_for_bvi_labuan,\n        poa_acknowledged,\n        poa_pending,\n    } = getAuthenticationStatusInfo(account_status);\n\n    React.useEffect(() => {\n        if (is_logged_in && !is_virtual) {\n            updateMT5Status();\n        }\n        if (!has_submitted_personal_details) {\n            let get_settings_response: GetSettings = {};\n            if (!account_settings) {\n                WS.authorized.storage.getSettings().then((response: GetAccountSettingsResponse) => {\n                    get_settings_response = response.get_settings as GetSettings;\n                    setAccountSettings(response.get_settings as GetSettings);\n                });\n            } else {\n                get_settings_response = account_settings;\n            }\n            const { citizen, place_of_birth, tax_residence, tax_identification_number, account_opening_reason } =\n                get_settings_response;\n            if (citizen && place_of_birth && tax_residence && tax_identification_number && account_opening_reason) {\n                setHasSubmittedPersonalDetails(true);\n            }\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const getAvailableAccountsContent = (modal_content: TCompareAccountContentProps[]) => {\n        if (!is_logged_in) {\n            if (show_eu_related_content) {\n                return modal_content;\n            }\n            const mt5_data = modal_content.map(item => {\n                const { derivx, ...rest } = item.values; // eslint-disable-line @typescript-eslint/no-unused-vars\n                return { ...item, values: rest };\n            });\n            return mt5_data;\n        }\n        return modal_content.map(row_data => {\n            const available_accounts_values = Object.entries(row_data.values).reduce(\n                (acc, [key, value]) => (available_accounts_keys.includes(key) ? { ...acc, [key]: value } : acc),\n                {} as TCompareAccountContentValues\n            );\n            const content_data = { ...row_data, values: {} as TCompareAccountContentValues };\n            const col_num = should_show_derivx ? 7 : 6;\n            if (available_accounts_keys.length < col_num && !show_eu_related_content) {\n                // order of the values matters for data to be correctly displayed in the table\n                const sorted_values = [\n                    'synthetic_svg',\n                    'synthetic_bvi',\n                    'financial_svg',\n                    'financial_bvi',\n                    'financial_vanuatu',\n                    'financial_labuan',\n                    ...(should_show_derivx && synthetic_accounts_count > 0 ? ['derivx'] : []),\n                ];\n                content_data.values = sorted_values.reduce(\n                    (acc, el) => (available_accounts_keys.includes(el) ? { ...acc, [el]: undefined } : acc),\n                    {}\n                );\n                available_accounts_keys.forEach(key => {\n                    if (row_data.id === 'leverage' && (key === 'financial_svg' || key === 'financial_bvi')) {\n                        content_data.values[key] = row_data.values.financial_vanuatu;\n                    } else if (row_data.id === 'instruments' && key === 'synthetic_bvi') {\n                        content_data.values[key] = row_data.values.synthetic_svg;\n                    } else if (row_data.id === 'instruments' && key === 'financial_bvi') {\n                        content_data.values[key] = row_data.values.financial_svg;\n                    }\n                });\n            }\n            return { ...content_data, values: { ...content_data.values, ...available_accounts_values } };\n        });\n    };\n\n    const getAvailableAccountsFooterButtons = (footer_button_data: TCompareAccountFooterButtonData[]) => {\n        return footer_button_data.filter(data => {\n            if (CFDs_restricted_countries) {\n                //remove derivx button if user is from restricted countries\n                if (data.action === 'derivx') return false;\n            }\n            return available_accounts_keys.includes(data.action);\n        });\n    };\n\n    const onSelectRealAccount = (item: TCompareAccountFooterButtonData) => {\n        const selected_account_type = () => {\n            if (item.action === 'derivx') return 'all';\n            return item.action.startsWith('financial') ? 'financial' : 'synthetic';\n        };\n\n        const type_of_account = {\n            category: is_demo_tab ? 'demo' : 'real',\n            type: selected_account_type(),\n        };\n        clearCFDError();\n        setAccountType(type_of_account);\n\n        switch (item.action) {\n            case 'synthetic_svg':\n            case 'financial_svg':\n                setAppstorePlatform(CFD_PLATFORMS.MT5);\n                setJurisdictionSelectedShortcode(Jurisdiction.SVG);\n                openPasswordModal(type_of_account);\n                break;\n            case 'synthetic_bvi':\n            case 'financial_bvi':\n                setAppstorePlatform(CFD_PLATFORMS.MT5);\n                setJurisdictionSelectedShortcode(Jurisdiction.BVI);\n                if (\n                    poi_acknowledged_for_bvi_labuan &&\n                    !poi_or_poa_not_submitted &&\n                    !should_restrict_bvi_account_creation &&\n                    has_submitted_personal_details &&\n                    poa_acknowledged\n                ) {\n                    openPasswordModal(type_of_account);\n                } else {\n                    toggleCFDVerificationModal();\n                }\n                break;\n            case 'synthetic_vanuatu':\n            case 'financial_vanuatu':\n                setAppstorePlatform(CFD_PLATFORMS.MT5);\n                setJurisdictionSelectedShortcode(Jurisdiction.VANUATU);\n                if (\n                    poi_acknowledged_for_vanuatu_maltainvest &&\n                    !poi_or_poa_not_submitted &&\n                    !should_restrict_vanuatu_account_creation &&\n                    has_submitted_personal_details &&\n                    poa_acknowledged\n                ) {\n                    openPasswordModal(type_of_account);\n                } else {\n                    toggleCFDVerificationModal();\n                }\n                break;\n            case 'financial_labuan':\n                setAppstorePlatform(CFD_PLATFORMS.MT5);\n                setJurisdictionSelectedShortcode(Jurisdiction.LABUAN);\n                if (poi_acknowledged_for_bvi_labuan && poa_acknowledged && has_submitted_personal_details) {\n                    openPasswordModal(type_of_account);\n                } else {\n                    toggleCFDVerificationModal();\n                }\n                break;\n            case 'financial_maltainvest':\n                setAppstorePlatform(CFD_PLATFORMS.MT5);\n                setJurisdictionSelectedShortcode(Jurisdiction.MALTA_INVEST);\n                if ((poi_acknowledged_for_vanuatu_maltainvest && poa_acknowledged) || is_demo_tab) {\n                    openPasswordModal(type_of_account);\n                } else {\n                    toggleCFDVerificationModal();\n                }\n                break;\n            case 'derivx':\n                setAppstorePlatform(CFD_PLATFORMS.DXTRADE);\n                openPasswordModal(type_of_account);\n                break;\n            default:\n        }\n    };\n\n    const isMt5AccountAdded = (item: TCompareAccountFooterButtonData) =>\n        Object.entries(current_list).some(([key, value]) => {\n            const [market, type] = item.action.split('_');\n            const current_account_type = is_demo_tab ? 'demo' : 'real';\n            return (\n                value.market_type === market &&\n                value.landing_company_short === type &&\n                value.account_type === current_account_type &&\n                key.includes(CFD_PLATFORMS.MT5)\n            );\n        });\n\n    const isDxtradeAccountAdded = () =>\n        Object.entries(current_list).some(([key, value]) => {\n            const current_account_type = is_demo_tab ? 'demo' : 'real';\n            return value.account_type === current_account_type && key.includes(CFD_PLATFORMS.DXTRADE);\n        });\n\n    const onButtonClick = (item: TCompareAccountFooterButtonData) => {\n        const if_no_corresponding_real_account = is_pre_appstore_setting\n            ? (no_CR_account && !is_eu_user) || (no_MF_account && is_eu_user)\n            : !has_real_account;\n\n        const should_show_missing_real_account =\n            is_logged_in &&\n            if_no_corresponding_real_account &&\n            upgradeable_landing_companies?.length > 0 &&\n            is_real_enabled;\n\n        toggleCompareAccounts();\n        if (should_show_missing_real_account) {\n            if (real_account_creation_unlock_date && item.action === 'financial_maltainvest') {\n                setShouldShowCooldownModal(true);\n            } else {\n                openDerivRealAccountNeededModal();\n            }\n        } else if (\n            is_virtual &&\n            !['synthetic_svg', 'financial_svg', 'derivx', 'financial_maltainvest'].includes(item.action)\n        ) {\n            openSwitchToRealAccountModal();\n        } else {\n            onSelectRealAccount(item);\n        }\n    };\n\n    const getModalContent = () => {\n        if (is_preappstore_cr_demo_account) {\n            return getPreappstoreCrDemoContent();\n        } else if (show_eu_related_content) {\n            if (is_pre_appstore_setting && content_flag === ContentFlag.EU_DEMO) {\n                return getPreappstoreEuDemoContent();\n            }\n            return getEuRealContent();\n        }\n        return getCrRealContent();\n    };\n\n    const modal_footer = () => {\n        if (is_preappstore_cr_demo_account) return getPreappstoreCrDemoFooterButtons();\n        else if (is_demo_tab && show_eu_related_content) return getEuFooterButtons();\n        return show_eu_related_content ? getEuFooterButtons() : getCrRealFooterButtons();\n    };\n\n    const shouldShowPendingStatus = (item: TCompareAccountFooterButtonData) => {\n        const type = item.action.split('_')[1];\n        if (isMt5AccountAdded(item)) {\n            return false;\n        } else if (item.action === 'derivx') {\n            return false;\n        } else if (type === 'bvi' && should_restrict_bvi_account_creation && poa_pending) {\n            return true;\n        } else if (type === 'vanuatu' && should_restrict_vanuatu_account_creation && poa_pending) {\n            return true;\n        }\n\n        return false;\n    };\n\n    const pre_appstore_class = should_show_derivx && synthetic_accounts_count ? '__pre-appstore' : '';\n\n    const getClassNamesForDemoAndEu = () => {\n        if (is_preappstore_cr_demo_account) return 'cfd-accounts-compare-modal-row-demo';\n        else if (show_eu_related_content) return 'cfd-accounts-compare-modal-row-eu';\n        return null;\n    };\n\n    const classname_for_demo_and_eu = getClassNamesForDemoAndEu();\n\n    return (\n        <div className='cfd-accounts-compare-modal'>\n            <div className='cfd-accounts-compare-modal__table-wrapper'>\n                <Table className='cfd-accounts-compare-modal__table'>\n                    <Table.Header>\n                        <Table.Row\n                            className={\n                                classname_for_demo_and_eu ??\n                                classNames(`cfd-accounts-compare-modal__table-header${pre_appstore_class}`, {\n                                    [`cfd-accounts-compare-modal__table-header-for-synthetic-${synthetic_accounts_count}-financial-${financial_accounts_count}${pre_appstore_class}`]:\n                                        available_accounts_count < 6 && !CFDs_restricted_countries,\n                                    [`cfd-accounts-compare-modal__table-header-for-synthetic-${synthetic_accounts_count}${pre_appstore_class}`]:\n                                        CFDs_restricted_countries,\n                                })\n                            }\n                        >\n                            <Table.Head fixed className='cfd-accounts-compare-modal__table-empty-cell' />\n                            {!show_eu_related_content && synthetic_accounts_count > 0 && (\n                                <Table.Head className='cfd-accounts-compare-modal__table-header-item'>\n                                    {localize('Derived')}\n                                </Table.Head>\n                            )}\n                            {!CFDs_restricted_countries && financial_accounts_count > 0 && (\n                                <Table.Head className='cfd-accounts-compare-modal__table-header-item'>\n                                    {show_eu_related_content ? localize('CFDs') : localize('Financial')}\n                                </Table.Head>\n                            )}\n                            {!CFDs_restricted_countries && should_show_derivx && synthetic_accounts_count > 0 && (\n                                <Table.Head className='cfd-accounts-compare-modal__table-header-item'>\n                                    {localize('Deriv X')}\n                                </Table.Head>\n                            )}\n                        </Table.Row>\n                    </Table.Header>\n\n                    <React.Fragment>\n                        <Table.Body>\n                            {getAvailableAccountsContent(getModalContent()).map(row => (\n                                <Row\n                                    key={row.id}\n                                    {...row}\n                                    pre_appstore_class={pre_appstore_class}\n                                    available_accounts_count={available_accounts_count}\n                                    classname_for_demo_and_eu={classname_for_demo_and_eu}\n                                    is_pre_appstore_setting={is_pre_appstore_setting}\n                                    content_flag={content_flag}\n                                    is_high_risk_for_mt5={is_high_risk_for_mt5}\n                                    CFDs_restricted_countries={CFDs_restricted_countries}\n                                    is_preappstore_restricted_cr_demo_account={\n                                        is_preappstore_restricted_cr_demo_account\n                                    }\n                                />\n                            ))}\n                        </Table.Body>\n                        {is_logged_in && (\n                            <Table.Row\n                                className={\n                                    classname_for_demo_and_eu ??\n                                    classNames(`cfd-accounts-compare-modal__table-footer${pre_appstore_class}`, {\n                                        [`cfd-accounts-compare-modal__row-with-columns-count-${\n                                            available_accounts_count + 1\n                                        }`]: available_accounts_count < 6,\n                                    })\n                                }\n                            >\n                                <Table.Cell\n                                    fixed\n                                    className={\n                                        'cfd-accounts-compare-modal__table-empty-cell cfd-accounts-compare-modal__table-footer__item'\n                                    }\n                                />\n\n                                {getAvailableAccountsFooterButtons(modal_footer()).map((item, index) => (\n                                    <Table.Cell\n                                        key={index}\n                                        className={classNames('cfd-accounts-compare-modal__table-footer__item', {\n                                            [`cfd-accounts-compare-modal__table-footer__item--eu-pre_appstore}`]:\n                                                is_pre_appstore_setting && show_eu_related_content,\n                                        })}\n                                    >\n                                        {!is_demo_tab && shouldShowPendingStatus(item) ? (\n                                            <div className='cfd-accounts-compare-modal__table-footer__item--verification-pending'>\n                                                <Text size={isDesktop ? 'xxs' : 'xxxs'} align='center'>\n                                                    {localize('Pending verification')}\n                                                </Text>\n                                            </div>\n                                        ) : (\n                                            <Button\n                                                className='cfd-accounts-compare-modal__table-footer__button'\n                                                disabled={\n                                                    item.action === 'derivx'\n                                                        ? isDxtradeAccountAdded()\n                                                        : isMt5AccountAdded(item)\n                                                }\n                                                type='button'\n                                                primary_light\n                                                onClick={() => onButtonClick(item)}\n                                            >\n                                                {item.label}\n                                            </Button>\n                                        )}\n                                    </Table.Cell>\n                                ))}\n                            </Table.Row>\n                        )}\n                    </React.Fragment>\n                </Table>\n            </div>\n        </div>\n    );\n};\n\nexport default connect(({ modules, client, common, ui, traders_hub }: RootStore) => ({\n    account_settings: client.account_settings,\n    account_status: client.account_status,\n    account_type: modules.cfd.account_type,\n    clearCFDError: modules.cfd.clearCFDError,\n    current_list: modules.cfd.current_list,\n    has_real_account: client.has_active_real_account,\n    has_real_mt5_login: client.has_real_mt5_login,\n    is_virtual: client.is_virtual,\n    openSwitchToRealAccountModal: ui.openSwitchToRealAccountModal,\n    setAccountSettings: client.setAccountSettings,\n    setAccountType: modules.cfd.setAccountType,\n    setJurisdictionSelectedShortcode: modules.cfd.setJurisdictionSelectedShortcode,\n    should_restrict_bvi_account_creation: client.should_restrict_bvi_account_creation,\n    should_restrict_vanuatu_account_creation: client.should_restrict_vanuatu_account_creation,\n    toggleCFDVerificationModal: modules.cfd.toggleCFDVerificationModal,\n    trading_platform_available_accounts: client.trading_platform_available_accounts,\n    updateMT5Status: client.updateMT5Status,\n    upgradeable_landing_companies: client.upgradeable_landing_companies,\n    setAppstorePlatform: common.setAppstorePlatform,\n    no_CR_account: traders_hub.no_CR_account,\n    is_eu_user: traders_hub.is_eu_user,\n    no_MF_account: traders_hub.no_MF_account,\n    CFDs_restricted_countries: traders_hub.CFDs_restricted_countries,\n}))(DMT5CompareModalContent);\n","import React from 'react';\nimport { Table, Text, ThemedScrollbars, Div100vhContainer } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { isDesktop, CFD_PLATFORMS } from '@deriv/shared';\nimport { LandingCompany, CurrencyConfigStructure } from '@deriv/api-types';\n\n// TODO: Remove this temporary type when api-types updates\ntype TLandingCompany = LandingCompany & {\n    /**\n     * Available Deriv X financial account types (all except Synthetic Indices).\n     */\n    dxtrade_all_company?: {\n        /**\n         * Landing Company details.\n         */\n        standard?: {\n            /**\n             * Landing Company address\n             */\n            address?: string[] | null;\n            /**\n             * Special conditions for changing sensitive fields\n             */\n            changeable_fields?: {\n                [k: string]: unknown;\n            };\n            /**\n             * Landing Company country of incorporation\n             */\n            country?: string;\n            currency_config?: CurrencyConfigStructure;\n            /**\n             * Flag to indicate whether reality check is applicable for this Landing Company. `1`: applicable, `0`: not applicable. The Reality Check is a feature that gives a summary of the client's trades and account balances on a regular basis throughout his session, and is a regulatory requirement for certain Landing Companies.\n             */\n            has_reality_check?: 0 | 1;\n            /**\n             * Allowed contract types\n             */\n            legal_allowed_contract_categories?: string[];\n            /**\n             * Allowable currencies\n             */\n            legal_allowed_currencies?: string[];\n            /**\n             * Allowable markets\n             */\n            legal_allowed_markets?: string[];\n            /**\n             * Default account currency\n             */\n            legal_default_currency?: string;\n            /**\n             * Landing Company legal name\n             */\n            name?: string;\n            /**\n             * Legal requirements for the Landing Company\n             */\n            requirements?: {\n                [k: string]: unknown;\n            };\n            /**\n             * Landing Company short code\n             */\n            shortcode?: string;\n            /**\n             * Flag that indicates whether the landing company supports professional accounts or not\n             */\n            support_professional_client?: 0 | 1;\n        };\n    };\n};\n\ntype TCFDAttributeDescriberProps = {\n    name: string;\n    counter: number | null;\n};\n\ntype TFilterAvailableAccounts = (\n    landing_companies: TLandingCompany,\n    table: TAccountsDescription[],\n    is_logged_in: boolean,\n    is_eu_client: boolean,\n    platform: string,\n    is_australian: boolean\n) => Array<{ [key: string]: string | React.ReactNode | undefined }>;\n\ntype TAccountsDescription = {\n    attribute: string;\n    dxtrade: TDxTradeAccountsDescription;\n};\n\ntype TDxTradeAccountsDescription = {\n    derivx: string;\n    footnote: string | null;\n};\n\ntype TCompareAccountsReusedProps = {\n    landing_companies: TLandingCompany;\n    platform: string;\n    is_logged_in: boolean;\n    is_uk: boolean;\n};\n\ntype TCompareAccountsDataParams = TCompareAccountsReusedProps & {\n    is_eu_client: boolean;\n    residence: string;\n};\n\ntype TCFDCompareAccountHintProps = TCompareAccountsReusedProps & {\n    show_risk_message: boolean;\n};\n\ntype TModalContentProps = TCompareAccountsReusedProps & {\n    is_eu_client: boolean;\n    residence: string;\n    is_eu: boolean;\n};\n\ntype TGetAccounts = (params: TCompareAccountsReusedProps) => TAccountsDescription[];\n\ntype TAccountTypesToFilter = (TLandingCompany['dxtrade_all_company'] | boolean | undefined)[];\n\nconst getAccounts: TGetAccounts = ({ landing_companies, is_logged_in }) => {\n    const getLoggedInTypesCount = ([landing_companies?.dxtrade_all_company] as TAccountTypesToFilter).length;\n\n    const account_types_count = is_logged_in ? getLoggedInTypesCount : 2;\n\n    return [\n        {\n            attribute: localize('Currency'),\n            dxtrade: {\n                derivx: localize('USD'),\n                footnote: null,\n            },\n        },\n        {\n            attribute: localize('Maximum leverage'),\n            dxtrade: {\n                derivx: localize('Up to 1:1000'),\n                footnote: localize(\n                    'Leverage gives you the ability to trade a larger position using your existing capital. Leverage varies across different symbols.'\n                ),\n            },\n        },\n        {\n            attribute: localize('Order execution'),\n            dxtrade: {\n                derivx: localize('Market'),\n                footnote: localize(\n                    \"All {{count}} account types use market execution. This means you agree with the broker's price in advance and will place orders at the broker's price.\",\n                    {\n                        count: account_types_count,\n                    }\n                ),\n            },\n        },\n        {\n            attribute: localize('Spread'),\n            dxtrade: {\n                derivx: localize('Fixed/Variable'),\n                footnote: localize(\n                    \"The spread is the difference between the buy price and sell price. A variable spread means that the spread is constantly changing, depending on market conditions. A fixed spread remains constant but is subject to alteration, at the Broker's absolute discretion.\"\n                ),\n            },\n        },\n        {\n            attribute: localize('Commission'),\n            dxtrade: {\n                derivx: localize('No'),\n                footnote: localize('Deriv charges no commission across all account types.'),\n            },\n        },\n        {\n            attribute: localize('Minimum deposit'),\n            dxtrade: {\n                derivx: localize('No'),\n                footnote: null,\n            },\n        },\n        {\n            attribute: localize('Margin call'),\n            dxtrade: {\n                derivx: localize('100%'),\n                footnote: localize(\n                    'You’ll get a warning, named margin call, if your account balance drops down close to the stop out level.'\n                ),\n            },\n        },\n        {\n            attribute: localize('Stop out level'),\n            dxtrade: {\n                derivx: localize('50%'),\n                footnote: localize(\n                    'If your margin level drops below our stop out level, your positions may be closed automatically to protect you from further losses.'\n                ),\n            },\n        },\n        {\n            attribute: localize('Negative Balance Protection'),\n            dxtrade: {\n                derivx: localize('Available'),\n                footnote: null,\n            },\n        },\n        {\n            attribute: localize('Number of assets'),\n            dxtrade: {\n                derivx: localize('110+'),\n                footnote: null,\n            },\n        },\n        {\n            attribute: localize('Cryptocurrency trading'),\n            dxtrade: {\n                derivx: localize('N/A'),\n                footnote: localize('Indicates the availability of cryptocurrency trading on a particular account.'),\n            },\n        },\n        {\n            attribute: localize('Trading instruments'),\n            dxtrade: {\n                derivx: localize(\n                    'Synthetics, Baskets, Derived FX, Forex: standard/micro, Stocks, Stock indices, Commodities, Cryptocurrencies'\n                ),\n                footnote: null,\n            },\n        },\n    ];\n};\n\nconst CFDAttributeDescriber = ({ name, counter }: TCFDAttributeDescriberProps) => {\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    const [is_visible, setIsVisible] = React.useState(false);\n    const toggleModal = () => setIsVisible(prev => !prev);\n\n    return counter ? (\n        <React.Fragment>\n            <Text\n                as='p'\n                weight='bold'\n                size='xs'\n                line_height='s'\n                className='cfd-attribute-describer'\n                onClick={toggleModal}\n            >\n                {name}\n                <Text weight='bold' as='span' line_height='x' size='xxxs' className='counter'>\n                    {counter}\n                </Text>\n            </Text>\n        </React.Fragment>\n    ) : (\n        <Text as='p' weight='bold' size='xs' line_height='s' className='cfd-attribute-describer'>\n            {name}\n        </Text>\n    );\n};\n\nconst filterAvailableAccounts: TFilterAvailableAccounts = (\n    landing_companies,\n    table,\n    is_logged_in,\n    is_eu_client,\n    platform\n) => {\n    let footnote_number = 0;\n    return table\n        .filter(row => row[platform as keyof TAccountsDescription])\n        .map(({ attribute, dxtrade = {} }) => {\n            const { derivx, footnote } = dxtrade;\n            const footnote_counter = footnote ? ++footnote_number : null;\n\n            if (platform === CFD_PLATFORMS.DXTRADE) {\n                return {\n                    attribute: <CFDAttributeDescriber name={attribute} counter={footnote_counter} />,\n                    derivx,\n                };\n            }\n            if (is_logged_in) {\n                return {\n                    attribute: <CFDAttributeDescriber name={attribute} counter={footnote_counter} />,\n                };\n            }\n            return {\n                attribute: <CFDAttributeDescriber name={attribute} counter={footnote_counter} />,\n            };\n        });\n};\n\nconst compareAccountsData = ({\n    landing_companies,\n    is_logged_in,\n    is_eu_client,\n    platform,\n    residence,\n    is_uk,\n}: TCompareAccountsDataParams) => {\n    const is_australian = residence === 'au';\n    return filterAvailableAccounts(\n        landing_companies,\n        getAccounts({ landing_companies, platform, is_logged_in, is_uk }),\n        is_logged_in,\n        is_eu_client,\n        platform,\n        is_australian\n    );\n};\n\nconst CFDCompareAccountHint = ({\n    platform,\n    show_risk_message,\n    landing_companies,\n    is_logged_in,\n    is_uk,\n}: TCFDCompareAccountHintProps) => {\n    return (\n        <div className='cfd-compare-account--hint'>\n            <div className='cfd-compare-accounts__bullet-wrapper'>\n                <span className='cfd-compare-accounts__bullet cfd-compare-accounts__bullet--circle' />\n                <Localize i18n_default_text='At bank rollover, liquidity in the forex markets is reduced and may increase the spread and processing time for client orders. This happens around 21:00 GMT during daylight saving time, and 22:00 GMT non-daylight saving time.' />\n            </div>\n            {show_risk_message && (\n                <React.Fragment>\n                    <div className='cfd-compare-accounts__bullet-wrapper'>\n                        <span className='cfd-compare-accounts__bullet cfd-compare-accounts__bullet--circle' />\n                        <Localize i18n_default_text='Margin call and stop out level will change from time to time based on market condition.' />\n                    </div>\n                    <div className='cfd-compare-accounts__bullet-wrapper'>\n                        <Text\n                            size='xs'\n                            line_height='x'\n                            weight='bold'\n                            className='cfd-compare-accounts__bullet cfd-compare-accounts__bullet--star cfd-compare-accounts__star'\n                        >\n                            *\n                        </Text>\n                        <Localize\n                            i18n_default_text='To protect your portfolio from adverse market movements due to the market opening gap, we reserve the right to decrease leverage on all offered symbols for financial accounts before market close and increase it again after market open. Please make sure that you have enough funds available in your {{platform}} account to support your positions at all times.'\n                            values={{\n                                platform: localize('Deriv X'),\n                            }}\n                        />\n                    </div>\n                    {is_uk && (\n                        <div className='cfd-compare-accounts__bullet-wrapper'>\n                            <Text\n                                size='xs'\n                                line_height='x'\n                                weight='bold'\n                                className='cfd-compare-accounts__bullet cfd-compare-accounts__bullet--star cfd-compare-accounts__star'\n                            >\n                                **\n                            </Text>\n                            <Localize\n                                i18n_default_text='Cryptocurrency trading is not available for clients residing in the United Kingdom.'\n                                values={{\n                                    platform: localize('Deriv X'),\n                                }}\n                            />\n                        </div>\n                    )}\n                </React.Fragment>\n            )}\n            {getAccounts({ landing_companies, platform, is_logged_in, is_uk })\n                .filter(\n                    item =>\n                        !!(item[platform as keyof TAccountsDescription] as TAccountsDescription['dxtrade'])?.footnote\n                )\n                .map((account, index) => {\n                    return (\n                        <div key={index} className='cfd-compare-accounts__bullet-wrapper'>\n                            <Text\n                                size='xs'\n                                line_height='x'\n                                weight='bold'\n                                className='cfd-compare-accounts__bullet cfd-compare-accounts__bullet--star cfd-compare-accounts__star'\n                            >\n                                {index + 1}\n                            </Text>\n                            <div className='cfd-compare-accounts__footnote'>\n                                <Text\n                                    as='p'\n                                    size='xs'\n                                    weight='bold'\n                                    color='prominent'\n                                    className='cfd-compare-accounts__footnote-title'\n                                >\n                                    {account.attribute}\n                                </Text>\n                                <Text size='xs' color='prominent'>\n                                    {\n                                        (\n                                            account[\n                                                platform as keyof TAccountsDescription\n                                            ] as TAccountsDescription['dxtrade']\n                                        ).footnote\n                                    }\n                                </Text>\n                            </div>\n                        </div>\n                    );\n                })}\n        </div>\n    );\n};\n\nconst CfdDxtradeCompareContent = ({\n    landing_companies,\n    is_logged_in,\n    platform,\n    is_eu_client,\n    residence,\n    is_uk,\n}: TModalContentProps) => {\n    const [cols, setCols] = React.useState<Array<Record<string, string | React.ReactNode | undefined>>>([]);\n    const [template_columns, updateColumnsStyle] = React.useState('1fr 1.5fr');\n\n    React.useEffect(() => {\n        setCols(compareAccountsData({ landing_companies, is_logged_in, platform, is_eu_client, residence, is_uk }));\n        updateColumnsStyle('1fr 1.5fr');\n    }, [\n        landing_companies?.mt_financial_company,\n        landing_companies?.mt_gaming_company,\n        is_logged_in,\n        is_uk,\n        landing_companies,\n        platform,\n        is_eu_client,\n        residence,\n    ]);\n\n    const show_risk_message = !is_eu_client;\n\n    return (\n        <Div100vhContainer height_offset='40px' is_bypassed={isDesktop()}>\n            <ThemedScrollbars\n                className='cfd-compare-accounts'\n                style={{\n                    '--cfd-compare-accounts-template-columns': template_columns,\n                }}\n            >\n                <div className='cfd-compare-accounts__table-wrapper'>\n                    <Table className='cfd-compare-accounts__table'>\n                        <Table.Header>\n                            <Table.Row className='cfd-compare-accounts__table-row'>\n                                <Table.Head fixed />\n                                <Table.Head>{localize('Deriv X')}</Table.Head>\n                            </Table.Row>\n                        </Table.Header>\n                        <Table.Body>\n                            {cols.map((row, i) => (\n                                <Table.Row key={i} className='cfd-compare-accounts__table-row'>\n                                    {Object.keys(row).map((col, j) => (\n                                        <Table.Cell key={j} fixed={j === 0}>\n                                            {row[col]}\n                                        </Table.Cell>\n                                    ))}\n                                </Table.Row>\n                            ))}\n                        </Table.Body>\n                    </Table>\n                </div>\n                <CFDCompareAccountHint\n                    platform={platform}\n                    show_risk_message={show_risk_message}\n                    landing_companies={landing_companies}\n                    is_logged_in={is_logged_in}\n                    is_uk={is_uk}\n                />\n            </ThemedScrollbars>\n        </Div100vhContainer>\n    );\n};\n\nexport default CfdDxtradeCompareContent;\n","import React from 'react';\nimport { Button, Modal, DesktopWrapper, MobileDialog, MobileWrapper, UILoader } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { connect } from '../Stores/connect';\nimport RootStore from '../Stores/index';\nimport { CFD_PLATFORMS, isLandingCompanyEnabled, ContentFlag } from '@deriv/shared';\nimport { LandingCompany } from '@deriv/api-types';\nimport ModalContent from './compare-accounts-content';\nimport DMT5CompareModalContent from './mt5-compare-table-content';\nimport CfdDxtradeCompareContent from '../Components/cfd-dxtrade-compare-content';\n\ntype TCompareAccountsReusedProps = {\n    landing_companies: LandingCompany;\n    platform: string;\n    is_logged_in: boolean;\n    is_uk: boolean;\n};\n\ntype TOpenAccountTransferMeta = {\n    category: string;\n    type?: string;\n};\n\ntype TCompareAccountsModalProps = TCompareAccountsReusedProps & {\n    disableApp: () => void;\n    enableApp: () => void;\n    is_compare_accounts_visible: boolean;\n    is_loading: boolean;\n    is_eu: boolean;\n    is_real_enabled: boolean;\n    residence: string;\n    is_demo_tab: boolean;\n    has_unmerged_account: boolean;\n    toggleCompareAccounts: () => void;\n    openPasswordModal: (account_type: TOpenAccountTransferMeta) => void;\n    openDerivRealAccountNeededModal: () => void;\n    context: RootStore;\n    real_account_creation_unlock_date: string;\n    show_eu_related_content: boolean;\n    setShouldShowCooldownModal: (value: boolean) => void;\n    is_eu_user: string;\n    is_cr_demo_account: boolean;\n    upgradeable_landing_companies: unknown[];\n    landing_company_shortcode: string;\n    content_flag: string;\n    CFDs_restricted_countries: string[];\n};\n\ntype TDxtradeCompareAccountContent = TCompareAccountsReusedProps & {\n    is_demo_tab: boolean;\n    is_eu_client: boolean;\n    has_unmerged_account: boolean;\n    residence: string;\n    is_eu: boolean;\n};\n\n// TODO: Remove this component and use one component for both when real released.\nconst DxtradeCompareAccountContent = ({\n    is_demo_tab,\n    is_logged_in,\n    landing_companies,\n    platform,\n    is_eu_client,\n    has_unmerged_account,\n    residence,\n    is_eu,\n    is_uk,\n}: TDxtradeCompareAccountContent) => {\n    if (is_demo_tab || !has_unmerged_account) {\n        return (\n            <CfdDxtradeCompareContent\n                is_logged_in={is_logged_in}\n                landing_companies={landing_companies}\n                platform={platform}\n                is_eu_client={is_eu_client}\n                residence={residence}\n                is_eu={is_eu}\n                is_uk={is_uk}\n            />\n        );\n    }\n\n    return (\n        <ModalContent\n            is_logged_in={is_logged_in}\n            landing_companies={landing_companies}\n            platform={platform}\n            is_eu_client={is_eu_client}\n            residence={residence}\n            is_eu={is_eu}\n            is_uk={is_uk}\n        />\n    );\n};\n\nconst CompareAccountsModal = ({\n    context,\n    disableApp,\n    enableApp,\n    has_unmerged_account,\n    is_compare_accounts_visible,\n    is_demo_tab,\n    is_eu,\n    is_loading,\n    is_logged_in,\n    is_real_enabled,\n    is_uk,\n    landing_companies,\n    openDerivRealAccountNeededModal,\n    openPasswordModal,\n    platform,\n    real_account_creation_unlock_date,\n    residence,\n    setShouldShowCooldownModal,\n    toggleCompareAccounts,\n    content_flag,\n    show_eu_related_content,\n    CFDs_restricted_countries,\n}: TCompareAccountsModalProps) => {\n    const location = window.location.pathname;\n    const is_pre_appstore_setting = location.startsWith('/appstore/traders-hub');\n\n    // TODO : should change the type to all after changing derivx api\n    const has_derivx =\n        isLandingCompanyEnabled({\n            landing_companies,\n            platform: CFD_PLATFORMS.DXTRADE,\n            type: 'financial',\n        }) ||\n        isLandingCompanyEnabled({\n            landing_companies,\n            platform: CFD_PLATFORMS.DXTRADE,\n            type: 'gaming',\n        }) ||\n        isLandingCompanyEnabled({\n            landing_companies,\n            platform: CFD_PLATFORMS.DXTRADE,\n            type: 'all',\n        });\n\n    const should_show_derivx = is_pre_appstore_setting && has_derivx && !show_eu_related_content;\n\n    const show_preappstore_eu_demo = is_pre_appstore_setting && show_eu_related_content && is_demo_tab;\n    const is_preappstore_cr_demo_account = is_pre_appstore_setting && content_flag === ContentFlag.CR_DEMO;\n\n    const is_preappstore_restricted_cr_demo_account =\n        is_pre_appstore_setting && CFDs_restricted_countries && content_flag === ContentFlag.CR_DEMO;\n\n    const is_dxtrade = platform && platform === CFD_PLATFORMS.DXTRADE;\n    const mt5_accounts = [\n        landing_companies?.mt_gaming_company?.financial,\n        landing_companies?.mt_financial_company?.financial,\n        landing_companies?.mt_financial_company?.financial_stp,\n    ];\n\n    const cfd_account_button_label =\n        mt5_accounts.filter(Boolean).length === 1 ||\n        (is_demo_tab && platform === CFD_PLATFORMS.DXTRADE) ||\n        (!has_unmerged_account && platform === CFD_PLATFORMS.DXTRADE)\n            ? localize('Account Information')\n            : localize('Compare accounts');\n\n    const getCFDModalTitle = () => {\n        if (is_pre_appstore_setting && show_eu_related_content) {\n            return is_demo_tab ? localize('Deriv MT5 CFDs demo account') : localize('Deriv MT5 CFDs real account');\n        } else if (should_show_derivx) {\n            return is_demo_tab ? localize('Compare CFDs demo accounts') : localize('Compare CFDs real accounts');\n        }\n        return is_dxtrade ? cfd_account_button_label : localize('Compare available accounts');\n    };\n    const getModalStyle = () => {\n        if (is_dxtrade) {\n            return {\n                height: '696px',\n                width: '903px',\n            };\n        } else if (is_preappstore_cr_demo_account) {\n            return {\n                height: '404px',\n                width: '610px',\n            };\n        } else if (show_eu_related_content) {\n            if (is_pre_appstore_setting) {\n                if (content_flag === ContentFlag.EU_DEMO) {\n                    return {\n                        height: '350px',\n                        width: '483px',\n                    };\n                }\n                return {\n                    height: '560px',\n                    width: '483px',\n                };\n            }\n            return {\n                height: '525px',\n                width: '300px',\n            };\n        } else if (is_pre_appstore_setting && should_show_derivx) {\n            return {\n                height: '600px',\n                width: '1115px',\n            };\n        }\n        return {\n            height: '506px',\n            width: '996px',\n        };\n    };\n\n    const getModalContent = () => {\n        return is_dxtrade ? (\n            <DxtradeCompareAccountContent\n                is_demo_tab={is_demo_tab}\n                is_logged_in={is_logged_in}\n                landing_companies={landing_companies}\n                platform={platform}\n                is_eu_client={!!show_eu_related_content}\n                residence={residence}\n                has_unmerged_account={has_unmerged_account}\n                is_eu={is_eu}\n                is_uk={is_uk}\n            />\n        ) : (\n            <DMT5CompareModalContent\n                content_flag={content_flag}\n                context={context}\n                is_demo_tab={is_demo_tab}\n                is_logged_in={is_logged_in}\n                is_pre_appstore_setting={is_pre_appstore_setting}\n                is_preappstore_cr_demo_account={is_preappstore_cr_demo_account}\n                is_preappstore_restricted_cr_demo_account={is_preappstore_restricted_cr_demo_account}\n                is_real_enabled={is_real_enabled}\n                openDerivRealAccountNeededModal={openDerivRealAccountNeededModal}\n                openPasswordModal={openPasswordModal}\n                real_account_creation_unlock_date={real_account_creation_unlock_date}\n                setShouldShowCooldownModal={setShouldShowCooldownModal}\n                should_show_derivx={should_show_derivx}\n                show_eu_related_content={show_eu_related_content}\n                show_preappstore_eu_demo={show_preappstore_eu_demo}\n                toggleCompareAccounts={toggleCompareAccounts}\n            />\n        );\n    };\n\n    return (\n        <>\n            <div className='cfd-compare-accounts-modal__wrapper' style={{ marginTop: is_dxtrade ? '5rem' : '2.4rem' }}>\n                {!(is_demo_tab && platform === 'mt5') && !is_pre_appstore_setting && (\n                    <Button\n                        className='cfd-dashboard__welcome-message--button'\n                        has_effect\n                        text={cfd_account_button_label}\n                        onClick={toggleCompareAccounts}\n                        secondary\n                        disabled={is_loading}\n                    />\n                )}\n                <React.Suspense fallback={<UILoader />}>\n                    <DesktopWrapper>\n                        <Modal\n                            className={is_dxtrade ? 'cfd-dashboard__compare-accounts' : 'cfd-accounts-compare-modal'}\n                            disableApp={disableApp}\n                            enableApp={enableApp}\n                            is_open={is_compare_accounts_visible}\n                            title={getCFDModalTitle()}\n                            toggleModal={toggleCompareAccounts}\n                            type='button'\n                            height={getModalStyle().height}\n                            width={getModalStyle().width}\n                            exit_classname={is_dxtrade ? '' : 'cfd-modal--custom-exit'}\n                        >\n                            {getModalContent()}\n                        </Modal>\n                    </DesktopWrapper>\n                    <MobileWrapper>\n                        <MobileDialog\n                            portal_element_id='deriv_app'\n                            title={getCFDModalTitle()}\n                            wrapper_classname='cfd-dashboard__compare-accounts'\n                            visible={is_compare_accounts_visible}\n                            onClose={toggleCompareAccounts}\n                            header_classname={is_dxtrade ? '' : 'cfd-accounts-compare-modal-mobile-header'}\n                            has_full_height\n                        >\n                            {getModalContent()}\n                        </MobileDialog>\n                    </MobileWrapper>\n                </React.Suspense>\n            </div>\n        </>\n    );\n};\n\nexport default connect(({ modules, ui, client, traders_hub }: RootStore) => ({\n    disableApp: ui.disableApp,\n    enableApp: ui.enableApp,\n    is_compare_accounts_visible: modules.cfd.is_compare_accounts_visible,\n    is_loading: client.is_populating_mt5_account_list,\n    is_eu: client.is_eu,\n    is_uk: client.is_uk,\n    is_eu_country: client.is_eu_country,\n    is_logged_in: client.is_logged_in,\n    landing_companies: client.landing_companies,\n    residence: client.residence,\n    toggleCompareAccounts: modules.cfd.toggleCompareAccountsModal,\n    openDerivRealAccountNeededModal: ui.openDerivRealAccountNeededModal,\n    selected_region: traders_hub.selected_region,\n    is_eu_user: traders_hub.is_eu_user,\n    content_flag: traders_hub.content_flag,\n    show_eu_related_content: traders_hub.show_eu_related_content,\n    CFDs_restricted_countries: traders_hub.CFDs_restricted_countries,\n}))(CompareAccountsModal);\n"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__deriv_components__","__WEBPACK_EXTERNAL_MODULE__deriv_shared__","__WEBPACK_EXTERNAL_MODULE__deriv_translations__","__WEBPACK_EXTERNAL_MODULE_mobx_react__","__WEBPACK_EXTERNAL_MODULE_react__","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","includes","key","call","join","default","MobxContent","React","connect","propsToSelectFn","Component","BaseComponent","own_props","store","ObservedComponent","isReactComponent","isClassComponent","props","context","useObserver","displayName","name","injectStorePropsToComponent","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","obj","prop","getAccounts","landing_companies","platform","is_logged_in","is_uk","account_types_count","CFD_PLATFORMS","mt_gaming_company","financial","mt_financial_company","financial_stp","dxtrade_gaming_company","dxtrade_financial_company","filter","Boolean","financial_eu_trading_instruments","localize","Text","size","weight","className","attribute","mt5","synthetic","synthetic_eu","financial_au","financial_eu","footnote","dxtrade","count","CFDAttributeDescriber","counter","is_visible","setIsVisible","as","line_height","onClick","compareAccountsData","is_eu_client","residence","is_australian","table","getFinancialObject","footnote_number","row","map","synthetic_object","financial_object","footnote_counter","filterAvailableAccounts","CFDCompareAccountHint","show_risk_message","Localize","i18n_default_text","values","item","account","index","color","is_eu","cols","setCols","template_columns","updateColumnsStyle","financial_account_table_head_text","Div100vhContainer","height_offset","is_bypassed","isDesktop","ThemedScrollbars","style","Table","fixed","isLandingCompanyEnabled","type","keys","col","j","getEuFooterButtons","label","action","Row","id","pre_appstore_class","available_accounts_count","classname_for_demo_and_eu","is_pre_appstore_setting","content_flag","is_high_risk_for_mt5","CFDs_restricted_countries","is_preappstore_restricted_cr_demo_account","is_leverage_row","is_platform_row","is_instruments_row","getContentSize","synthetic_bvi","text","derivx","ContentFlag","financial_svg","rowKey","tooltip_msg","options","align","styles","should_show_asterick_at_end","Popover","alignment","classNameBubble","icon","disable_message_icon","is_bubble_hover_enabled","message","zIndex","modules","client","common","ui","traders_hub","account_settings","account_status","account_type","cfd","clearCFDError","current_list","has_real_account","has_active_real_account","has_real_mt5_login","is_virtual","openSwitchToRealAccountModal","setAccountSettings","setAccountType","setJurisdictionSelectedShortcode","should_restrict_bvi_account_creation","should_restrict_vanuatu_account_creation","toggleCFDVerificationModal","trading_platform_available_accounts","updateMT5Status","upgradeable_landing_companies","setAppstorePlatform","no_CR_account","is_eu_user","no_MF_account","is_demo_tab","is_preappstore_cr_demo_account","is_real_enabled","openDerivRealAccountNeededModal","openPasswordModal","real_account_creation_unlock_date","setShouldShowCooldownModal","should_show_derivx","show_eu_related_content","toggleCompareAccounts","has_submitted_personal_details","setHasSubmittedPersonalDetails","mt5_platforms","market_type","shortcode","has_synthetic","some","available_accounts_keys","logged_out_available_accounts_count","synthetic_accounts_count","startsWith","financial_accounts_count","getAuthenticationStatusInfo","poi_or_poa_not_submitted","poi_acknowledged_for_vanuatu_maltainvest","poi_acknowledged_for_bvi_labuan","poa_acknowledged","poa_pending","get_settings_response","WS","then","response","get_settings","citizen","place_of_birth","tax_residence","tax_identification_number","account_opening_reason","footer_button_data","modal_content","isMt5AccountAdded","entries","value","split","market","current_account_type","landing_company_short","onButtonClick","should_show_missing_real_account","type_of_account","category","Jurisdiction","onSelectRealAccount","synthetic_svg","financial_maltainvest","paddingTop","padding","synthetic_vanuatu","financial_bvi","financial_vanuatu","financial_labuan","row_data","available_accounts_values","reduce","acc","content_data","col_num","sorted_values","el","forEach","rest","data","shouldShowPendingStatus","Button","disabled","primary_light","getLoggedInTypesCount","dxtrade_all_company","prev","DxtradeCompareAccountContent","has_unmerged_account","disableApp","enableApp","is_compare_accounts_visible","is_loading","is_populating_mt5_account_list","is_eu_country","toggleCompareAccountsModal","selected_region","window","location","pathname","has_derivx","show_preappstore_eu_demo","is_dxtrade","cfd_account_button_label","getCFDModalTitle","getModalStyle","height","width","getModalContent","marginTop","has_effect","secondary","fallback","UILoader","DesktopWrapper","Modal","is_open","title","toggleModal","exit_classname","MobileWrapper","MobileDialog","portal_element_id","wrapper_classname","visible","onClose","header_classname","has_full_height"],"sourceRoot":""}