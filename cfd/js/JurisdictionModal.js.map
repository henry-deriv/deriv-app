{"version":3,"file":"cfd/js/JurisdictionModal.js","mappings":"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","sources":["webpack://@deriv/cfd/webpack/universalModuleDefinition","webpack://@deriv/cfd/../../node_modules/classnames/index.js","webpack://@deriv/cfd/./src/Stores/connect.js","webpack://@deriv/cfd/external umd \"@deriv/components\"","webpack://@deriv/cfd/external umd \"@deriv/shared\"","webpack://@deriv/cfd/external umd \"@deriv/translations\"","webpack://@deriv/cfd/external umd \"mobx-react\"","webpack://@deriv/cfd/external umd \"react\"","webpack://@deriv/cfd/webpack/bootstrap","webpack://@deriv/cfd/webpack/runtime/compat get default export","webpack://@deriv/cfd/webpack/runtime/define property getters","webpack://@deriv/cfd/webpack/runtime/hasOwnProperty shorthand","webpack://@deriv/cfd/./src/Constants/jurisdiction-contents/jurisdiction-verification-contents.ts","webpack://@deriv/cfd/./src/Containers/jurisdiction-modal/jurisdiction-card-back.tsx","webpack://@deriv/cfd/./src/Containers/jurisdiction-modal/jurisdiction-clickable-description.tsx","webpack://@deriv/cfd/./src/Containers/jurisdiction-modal/jurisdiction-title-indicator.tsx","webpack://@deriv/cfd/./src/Containers/jurisdiction-modal/jurisdiction-card-section.tsx","webpack://@deriv/cfd/./src/Containers/jurisdiction-modal/jurisdiction-card-front.tsx","webpack://@deriv/cfd/./src/Containers/jurisdiction-modal/jurisdiction-card.tsx","webpack://@deriv/cfd/./src/Constants/jurisdiction-contents/jurisdiction-contents.ts","webpack://@deriv/cfd/./src/Constants/jurisdiction-contents/jurisdiction-svg-contents.ts","webpack://@deriv/cfd/./src/Constants/jurisdiction-contents/jurisdiction-bvi-contents.ts","webpack://@deriv/cfd/./src/Constants/jurisdiction-contents/jurisdiction-vanuatu-contents.ts","webpack://@deriv/cfd/./src/Constants/jurisdiction-contents/jurisdiction-labuan-contents.ts","webpack://@deriv/cfd/./src/Constants/jurisdiction-contents/jurisdiction_maltainvest_contents.ts","webpack://@deriv/cfd/./src/Containers/jurisdiction-modal/jurisdiction-modal-content.tsx","webpack://@deriv/cfd/./src/Containers/jurisdiction-modal/jurisdiction-modal-checkbox.tsx","webpack://@deriv/cfd/./src/Containers/jurisdiction-modal/jurisdiction-modal-foot-note.tsx","webpack://@deriv/cfd/./src/Containers/jurisdiction-modal/jurisdiction-modal-content-wrapper.tsx","webpack://@deriv/cfd/./src/Containers/jurisdiction-modal/jurisdiction-modal.tsx"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@deriv/components\"), require(\"@deriv/shared\"), require(\"@deriv/translations\"), require(\"mobx-react\"), require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@deriv/components\", \"@deriv/shared\", \"@deriv/translations\", \"mobx-react\", \"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@deriv/cfd\"] = factory(require(\"@deriv/components\"), require(\"@deriv/shared\"), require(\"@deriv/translations\"), require(\"mobx-react\"), require(\"react\"));\n\telse\n\t\troot[\"@deriv/cfd\"] = factory(root[\"@deriv/components\"], root[\"@deriv/shared\"], root[\"@deriv/translations\"], root[\"mobx-react\"], root[\"react\"]);\n})(self, (__WEBPACK_EXTERNAL_MODULE__deriv_components__, __WEBPACK_EXTERNAL_MODULE__deriv_shared__, __WEBPACK_EXTERNAL_MODULE__deriv_translations__, __WEBPACK_EXTERNAL_MODULE_mobx_react__, __WEBPACK_EXTERNAL_MODULE_react__) => {\nreturn ","/*!\n\tCopyright (c) 2018 Jed Watson.\n\tLicensed under the MIT License (MIT), see\n\thttp://jedwatson.github.io/classnames\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar hasOwn = {}.hasOwnProperty;\n\tvar nativeCodeString = '[native code]';\n\n\tfunction classNames() {\n\t\tvar classes = [];\n\n\t\tfor (var i = 0; i < arguments.length; i++) {\n\t\t\tvar arg = arguments[i];\n\t\t\tif (!arg) continue;\n\n\t\t\tvar argType = typeof arg;\n\n\t\t\tif (argType === 'string' || argType === 'number') {\n\t\t\t\tclasses.push(arg);\n\t\t\t} else if (Array.isArray(arg)) {\n\t\t\t\tif (arg.length) {\n\t\t\t\t\tvar inner = classNames.apply(null, arg);\n\t\t\t\t\tif (inner) {\n\t\t\t\t\t\tclasses.push(inner);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (argType === 'object') {\n\t\t\t\tif (arg.toString !== Object.prototype.toString && !arg.toString.toString().includes('[native code]')) {\n\t\t\t\t\tclasses.push(arg.toString());\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tfor (var key in arg) {\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\n\t\t\t\t\t\tclasses.push(key);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn classes.join(' ');\n\t}\n\n\tif (typeof module !== 'undefined' && module.exports) {\n\t\tclassNames.default = classNames;\n\t\tmodule.exports = classNames;\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\t// register as 'classnames', consistent with npm package name\n\t\tdefine('classnames', [], function () {\n\t\t\treturn classNames;\n\t\t});\n\t} else {\n\t\twindow.classNames = classNames;\n\t}\n}());\n","import { useObserver } from 'mobx-react';\nimport React from 'react';\n\nconst isClassComponent = Component =>\n    !!(typeof Component === 'function' && Component.prototype && Component.prototype.isReactComponent);\n\nexport const MobxContent = React.createContext(null);\n\nfunction injectStorePropsToComponent(propsToSelectFn, BaseComponent) {\n    const Component = own_props => {\n        const store = React.useContext(MobxContent);\n\n        let ObservedComponent = BaseComponent;\n\n        if (isClassComponent(BaseComponent)) {\n            const FunctionalWrapperComponent = props => <BaseComponent {...props} />;\n            ObservedComponent = FunctionalWrapperComponent;\n        }\n\n        //  This is a temporary approach to pass stores from different packages\n        const context = own_props.context || store;\n        return useObserver(() => ObservedComponent({ ...own_props, ...propsToSelectFn(context, own_props) }));\n    };\n\n    Component.displayName = BaseComponent.name;\n    return Component;\n}\n\nexport const MobxContentProvider = ({ store, children }) => {\n    return <MobxContent.Provider value={{ ...store, mobxStores: store }}>{children}</MobxContent.Provider>;\n};\n\nexport const connect = propsToSelectFn => Component => injectStorePropsToComponent(propsToSelectFn, Component);\n","module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_components__;","module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_shared__;","module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_translations__;","module.exports = __WEBPACK_EXTERNAL_MODULE_mobx_react__;","module.exports = __WEBPACK_EXTERNAL_MODULE_react__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import { localize } from '@deriv/translations';\nimport { TJurisdictionVerificationItems, TJurisdictionVerificationStatus } from 'Components/props.types';\n\ntype TJurisdictionVerificationContents = {\n    short_description: string;\n    required_verification_docs: TJurisdictionVerificationItems;\n    status_references: Array<TJurisdictionVerificationStatus>;\n};\n\nexport const jurisdictionVerificationContents = (): TJurisdictionVerificationContents => ({\n    short_description: localize('We need you to submit these in order to get this account:'),\n    required_verification_docs: {\n        document_number: {\n            icon: 'IcDocumentNumberVerification',\n            text: localize('Document number (identity card, passport)'),\n        },\n        selfie: {\n            icon: 'IcSelfieVerification',\n            text: localize('A selfie of yourself.'),\n        },\n        identity_document: {\n            icon: 'IcIdentityDocumentVerification',\n            text: localize('A copy of your identity document (identity card, passport)'),\n        },\n        name_and_address: {\n            icon: 'IcNameAndAddressVerification',\n            text: localize(\n                'A recent utility bill (electricity, water or gas) or recent bank statement or government-issued letter with your name and address.'\n            ),\n        },\n        not_applicable: {\n            icon: 'IcNotApplicableVerification',\n            text: '',\n        },\n    },\n    status_references: [\n        {\n            icon: 'IcVerificationStatusYellow',\n            text: localize('Your document is pending for verification.'),\n            color: 'yellow',\n        },\n        {\n            icon: 'IcVerificationStatusRed',\n            text: localize('Verification failed. Resubmit during account creation.'),\n            color: 'red',\n        },\n        { icon: 'IcVerificationStatusGreen', text: localize('Your document is verified.'), color: 'green' },\n    ],\n});\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Icon, Text } from '@deriv/components';\nimport { jurisdictionVerificationContents } from 'Constants/jurisdiction-contents/jurisdiction-verification-contents';\nimport { TJurisdictionCardBackProps } from 'Containers/props.types';\n\nconst JurisdictionCardBack = ({\n    card_classname,\n    disabled,\n    is_card_selected,\n    toggleCardFlip,\n    verification_docs,\n}: TJurisdictionCardBackProps) => (\n    <div\n        data-testid='dt_jurisdiction_card_back_container'\n        className={classNames(card_classname, 'cfd-card-back', {\n            [`${card_classname}--selected selected-card`]: is_card_selected,\n            'cfd-card-disabled-flat': disabled,\n        })}\n    >\n        <div\n            data-testid='dt_jurisdiction_card_back'\n            className={classNames(\n                `${card_classname}__card-content-container`,\n                `${card_classname}__card-flipped-container`\n            )}\n        >\n            <div>\n                <Icon\n                    onClick={toggleCardFlip}\n                    className='cfd-card-back-section-back-button'\n                    icon='IcBackButton'\n                    size={20}\n                />\n            </div>\n            <Text as='div' size='xxs'>\n                {jurisdictionVerificationContents().short_description}\n            </Text>\n            <div className={classNames('cfd-card-back-section-items-container')}>\n                {verification_docs?.map(verification_item => (\n                    <div key={verification_item} className='cfd-card-back-section-items-sub-container'>\n                        <div>\n                            <Icon\n                                icon={\n                                    jurisdictionVerificationContents().required_verification_docs[verification_item]\n                                        ?.icon\n                                }\n                            />\n                        </div>\n                        <Text as='span' size='xxs' className='cfd-card-back-section-text-icon-aligned'>\n                            {jurisdictionVerificationContents().required_verification_docs[verification_item]?.text}\n                        </Text>\n                    </div>\n                ))}\n            </div>\n            <div className='cfd-card-section-divider' />\n            <div className='cfd-card-back-section-items-container'>\n                {jurisdictionVerificationContents().status_references.map(status_item => (\n                    <div className='cfd-card-back-section-items-sub-container' key={status_item.color}>\n                        <div>\n                            <Icon icon={status_item.icon} />\n                        </div>\n                        <Text as='span' size='xxs' className='cfd-card-back-section-text-icon-aligned'>\n                            {status_item.text}\n                        </Text>\n                    </div>\n                ))}\n            </div>\n        </div>\n    </div>\n);\n\nexport default JurisdictionCardBack;\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { TJurisdictionClickableDescriptionProps } from 'Containers/props.types';\n\nconst JurisdictionClickableDescription = ({\n    clickable_description,\n    toggleCardFlip,\n}: TJurisdictionClickableDescriptionProps) => (\n    <div>\n        {clickable_description.map(description_part => {\n            return description_part.type === 'link' ? (\n                <span key={description_part.text} onClick={toggleCardFlip}>\n                    <Text\n                        data-testid='dt_jurisdiction_clickable_description'\n                        as='span'\n                        size='xxs'\n                        className='cfd-card-clickable-description-link'\n                    >\n                        {description_part.text}\n                    </Text>\n                    &nbsp;\n                </span>\n            ) : (\n                <Text key={description_part.text} as='span' size='xxs'>\n                    {description_part.text}\n                </Text>\n            );\n        })}\n    </div>\n);\n\nexport default JurisdictionClickableDescription;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Icon, Text } from '@deriv/components';\nimport { getAuthenticationStatusInfo, Jurisdiction } from '@deriv/shared';\nimport { jurisdictionVerificationContents } from 'Constants/jurisdiction-contents/jurisdiction-verification-contents';\nimport { TJurisdictionTitleIndicatorProps } from 'Containers/props.types';\nimport { TJurisdictionCardItemVerificationItem, TJurisdictionCardVerificationStatus } from 'Components/props.types';\n\nconst JurisdictionTitleIndicator = ({\n    account_status,\n    title_indicators,\n    type_of_card,\n    verification_docs,\n}: TJurisdictionTitleIndicatorProps) => {\n    const {\n        poi_pending_for_bvi_labuan,\n        poi_resubmit_for_bvi_labuan,\n        poi_verified_for_bvi_labuan,\n        poi_pending_for_vanuatu_maltainvest,\n        poi_resubmit_for_vanuatu_maltainvest,\n        poi_verified_for_vanuatu_maltainvest,\n        poa_pending,\n        need_poa_resubmission,\n        poa_verified,\n    } = getAuthenticationStatusInfo(account_status);\n\n    const getVerificationIconVariant = (verification_document: TJurisdictionCardItemVerificationItem): string => {\n        let icon_variant: TJurisdictionCardVerificationStatus = 'Default';\n        if ([Jurisdiction.BVI, Jurisdiction.LABUAN].includes(type_of_card)) {\n            if (['document_number', 'selfie', 'identity_document'].includes(verification_document)) {\n                if (poi_pending_for_bvi_labuan) {\n                    icon_variant = 'Pending';\n                } else if (poi_resubmit_for_bvi_labuan) {\n                    icon_variant = 'Failed';\n                } else if (poi_verified_for_bvi_labuan) {\n                    icon_variant = 'Verified';\n                }\n            }\n        } else if ([Jurisdiction.VANUATU, Jurisdiction.MALTA_INVEST].includes(type_of_card)) {\n            if (['document_number', 'selfie', 'identity_document'].includes(verification_document)) {\n                if (poi_pending_for_vanuatu_maltainvest) {\n                    icon_variant = 'Pending';\n                } else if (poi_resubmit_for_vanuatu_maltainvest) {\n                    icon_variant = 'Failed';\n                } else if (poi_verified_for_vanuatu_maltainvest) {\n                    icon_variant = 'Verified';\n                }\n            }\n        }\n        if (verification_document === 'name_and_address') {\n            if (poa_pending) {\n                icon_variant = 'Pending';\n            } else if (need_poa_resubmission) {\n                icon_variant = 'Failed';\n            } else if (poa_verified) {\n                icon_variant = 'Verified';\n            }\n        }\n        return icon_variant;\n    };\n\n    return title_indicators.type === 'displayText' ? (\n        <Text\n            as='span'\n            color='colored-background'\n            weight='bold'\n            align='center'\n            size='xxxs'\n            className={classNames(\n                'cfd-card-section-title-indicator',\n                `cfd-card-section-title-indicator__${title_indicators.display_text_skin_color}`\n            )}\n        >\n            {title_indicators.display_text}\n        </Text>\n    ) : (\n        <div\n            data-testid='dt_jurisdiction_title_indicator_icon'\n            className='cfd-card-section-title-indicator-icon-container'\n        >\n            {verification_docs?.map(verification_document => (\n                <div\n                    data-testid={`dt_jurisdiction_title_indicator_${getVerificationIconVariant(\n                        verification_document\n                    )}_icon`}\n                    key={verification_document}\n                >\n                    <Icon\n                        size={24}\n                        icon={jurisdictionVerificationContents().required_verification_docs[\n                            verification_document\n                        ]?.icon.concat(getVerificationIconVariant(verification_document))}\n                    />\n                </div>\n            ))}\n        </div>\n    );\n};\n\nexport default JurisdictionTitleIndicator;\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { TJurisdictionCardSectionProps } from '../props.types';\nimport JurisdictionClickableDescription from './jurisdiction-clickable-description';\nimport JurisdictionTitleIndicator from './jurisdiction-title-indicator';\n\nconst JurisdictionCardSection = ({\n    account_status,\n    card_section_item,\n    toggleCardFlip,\n    type_of_card,\n    verification_docs,\n}: TJurisdictionCardSectionProps) => (\n    <div className='cfd-card-section'>\n        <div className='cfd-card-title-container'>\n            <Text as='span' weight='bold' size='xs'>\n                {card_section_item.title}\n            </Text>\n            {card_section_item.title_indicators && (\n                <JurisdictionTitleIndicator\n                    account_status={account_status}\n                    title_indicators={card_section_item.title_indicators}\n                    type_of_card={type_of_card}\n                    verification_docs={verification_docs}\n                />\n            )}\n        </div>\n        {(card_section_item.clickable_description || card_section_item.description) && (\n            <div className={`cfd-card-section-description-height-${card_section_item.key.toLowerCase()}`}>\n                {card_section_item.clickable_description ? (\n                    <JurisdictionClickableDescription\n                        clickable_description={card_section_item.clickable_description}\n                        toggleCardFlip={toggleCardFlip}\n                    />\n                ) : (\n                    card_section_item.description && (\n                        <Text as='span' size='xxs'>\n                            {card_section_item.description}\n                        </Text>\n                    )\n                )}\n            </div>\n        )}\n    </div>\n);\n\nexport default JurisdictionCardSection;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { TJurisdictionCardFrontProps } from 'Containers/props.types';\nimport JurisdictionCardSection from './jurisdiction-card-section';\n\nconst JurisdictionCardFront = ({\n    account_status,\n    card_classname,\n    card_data,\n    card_values,\n    disabled,\n    is_card_selected,\n    toggleCardFlip,\n    type_of_card,\n    verification_docs,\n}: TJurisdictionCardFrontProps) => (\n    <div\n        className={classNames(card_classname, 'cfd-card-front', {\n            [`${card_classname}--selected selected-card`]: is_card_selected,\n            'cfd-card-disabled-flat': disabled,\n        })}\n    >\n        <div className={`${card_classname}__card-content-container`}>\n            {card_values.is_over_header_available ? (\n                <Text\n                    as='div'\n                    weight='bold'\n                    color='info-blue'\n                    align='center'\n                    size='xs'\n                    className={`${card_classname}__card-content-over-header`}\n                >\n                    <Localize i18n_default_text={card_values.over_header} />\n                </Text>\n            ) : (\n                <div className={`${card_classname}__card-content-over-header-blank`} />\n            )}\n            <Text\n                as='p'\n                weight='bold'\n                color='prominent'\n                align='center'\n                size='xsm'\n                className={`${card_classname}__h2-header`}\n            >\n                <Localize i18n_default_text={card_values.header} />\n            </Text>\n            <div className={`${card_classname}__card-section-container`}>\n                {card_data.map((item, index) => (\n                    <React.Fragment key={item.key}>\n                        <JurisdictionCardSection\n                            account_status={account_status}\n                            card_section_item={item}\n                            toggleCardFlip={toggleCardFlip}\n                            type_of_card={type_of_card}\n                            verification_docs={verification_docs}\n                        />\n                        {index < card_data.length - 1 && <div className='cfd-card-section-divider' />}\n                    </React.Fragment>\n                ))}\n            </div>\n            {disabled && (\n                <div className={`${card_classname}__card-content-footer`}>\n                    <Text\n                        as='div'\n                        weight='bold'\n                        color='colored-background'\n                        align='center'\n                        size='xs'\n                        className={`${card_classname}__card-content-footer-text`}\n                    >\n                        <Localize i18n_default_text='Added' />\n                    </Text>\n                </div>\n            )}\n        </div>\n    </div>\n);\n\nexport default JurisdictionCardFront;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Jurisdiction } from '@deriv/shared';\nimport { getJurisdictionContents } from '../../Constants/jurisdiction-contents/jurisdiction-contents';\nimport { TJurisdictionCardProps } from '../props.types';\nimport JurisdictionCardBack from './jurisdiction-card-back';\nimport JurisdictionCardFront from './jurisdiction-card-front';\n\nconst JurisdictionCard = ({\n    account_status,\n    account_type,\n    disabled,\n    is_non_idv_design = false,\n    jurisdiction_selected_shortcode,\n    setJurisdictionSelectedShortcode,\n    type_of_card,\n}: TJurisdictionCardProps) => {\n    const card_classname = `cfd-jurisdiction-card--${account_type}`;\n    const is_synthetic = account_type === 'synthetic';\n    const is_swapfree = account_type === 'all';\n    const card_values = getJurisdictionContents()[type_of_card];\n    const non_synthetic_card_data = is_swapfree\n        ? card_values?.swapfree_contents ?? []\n        : card_values?.financial_contents;\n    const card_data = is_synthetic ? card_values?.synthetic_contents : non_synthetic_card_data;\n    const [is_card_flipped, setIsCardFlipped] = React.useState(false);\n    const is_card_selected = jurisdiction_selected_shortcode === type_of_card;\n    let verification_docs = is_synthetic\n        ? card_values?.synthetic_verification_docs\n        : card_values?.financial_verification_docs;\n    if ([Jurisdiction.BVI, Jurisdiction.VANUATU, Jurisdiction.LABUAN].includes(type_of_card) && is_non_idv_design) {\n        verification_docs = ['selfie', 'identity_document', 'name_and_address'];\n    }\n\n    const cardSelection = (cardType: string) => {\n        setJurisdictionSelectedShortcode(jurisdiction_selected_shortcode === cardType ? '' : cardType);\n    };\n\n    const toggleCardFlip: React.MouseEventHandler<HTMLSpanElement> = event => {\n        event.stopPropagation();\n        setIsCardFlipped(!is_card_flipped);\n    };\n\n    return (\n        <div className='cfd-card-perspective'>\n            <div\n                data-testid='dt_jurisdiction_card'\n                className={classNames('cfd-card-container', `${account_type}`, {\n                    'cfd-card-flipped': is_card_flipped,\n                    'cfd-card-disabled': disabled,\n                })}\n                onClick={disabled ? () => undefined : () => cardSelection(type_of_card)}\n            >\n                <JurisdictionCardFront\n                    account_status={account_status}\n                    card_classname={card_classname}\n                    card_data={card_data}\n                    card_values={card_values}\n                    disabled={disabled}\n                    is_card_selected={is_card_selected}\n                    toggleCardFlip={toggleCardFlip}\n                    type_of_card={type_of_card}\n                    verification_docs={verification_docs}\n                />\n                <JurisdictionCardBack\n                    card_classname={card_classname}\n                    disabled={disabled}\n                    is_card_selected={is_card_selected}\n                    toggleCardFlip={toggleCardFlip}\n                    verification_docs={verification_docs}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default JurisdictionCard;\n","import { TJurisdictionCardItems } from 'Components/props.types';\nimport { getJurisdictionBviContents } from './jurisdiction-bvi-contents';\nimport { getJurisdictionLabuanContents } from './jurisdiction-labuan-contents';\nimport { getJurisdictionSvgContents } from './jurisdiction-svg-contents';\nimport { getJurisdictionVanuatuContents } from './jurisdiction-vanuatu-contents';\nimport { getJurisdictionMaltainvestContents } from './jurisdiction_maltainvest_contents';\n\ntype TJurisdictionContent = {\n    svg: TJurisdictionCardItems;\n    vanuatu: TJurisdictionCardItems;\n    labuan: TJurisdictionCardItems;\n    maltainvest: TJurisdictionCardItems;\n    bvi: TJurisdictionCardItems;\n};\n\nexport const getJurisdictionContents = (): TJurisdictionContent => ({\n    svg: getJurisdictionSvgContents(),\n    bvi: getJurisdictionBviContents(),\n    vanuatu: getJurisdictionVanuatuContents(),\n    labuan: getJurisdictionLabuanContents(),\n    maltainvest: getJurisdictionMaltainvestContents(),\n});\n","import { localize } from '@deriv/translations';\nimport { TJurisdictionCardItems } from 'Components/props.types';\n\nexport const getJurisdictionSvgContents = (): TJurisdictionCardItems => ({\n    is_over_header_available: false,\n    header: localize('St. Vincent & Grenadines'),\n    synthetic_contents: [\n        {\n            key: 'assets',\n            title: localize('Assets'),\n            description: localize('Synthetics, Basket indices and Derived FX'),\n            title_indicators: {\n                type: 'displayText',\n                display_text: localize('40+'),\n                display_text_skin_color: 'red-darker',\n            },\n        },\n        {\n            key: 'leverage',\n            title: localize('Leverage'),\n            title_indicators: {\n                type: 'displayText',\n                display_text: localize('1:1000'),\n                display_text_skin_color: 'yellow-light',\n            },\n        },\n        {\n            key: 'verifications',\n            title: localize('Verifications'),\n            title_indicators: { type: 'displayIcons' },\n            description: localize(\n                'You will need to submit proof of identity and address once you reach certain thresholds.'\n            ),\n        },\n        {\n            key: 'regulator',\n            title: localize('Regulator/EDR'),\n            description: localize('Deriv (SVG) LLC (company no. 273 LLC 2020)'),\n        },\n    ],\n    financial_contents: [\n        {\n            key: 'assets',\n            title: localize('Assets'),\n            description: localize('Forex, Stocks, Stock indices, Commodities, and Cryptocurrencies'),\n            title_indicators: {\n                type: 'displayText',\n                display_text: localize('170+'),\n                display_text_skin_color: 'red-light',\n            },\n        },\n        {\n            key: 'leverage',\n            title: localize('Leverage'),\n            title_indicators: {\n                type: 'displayText',\n                display_text: localize('1:1000'),\n                display_text_skin_color: 'yellow-light',\n            },\n        },\n        {\n            key: 'spreadsFrom',\n            title: localize('Spreads from'),\n            title_indicators: {\n                type: 'displayText',\n                display_text: localize('0.6 pips'),\n                display_text_skin_color: 'violet-dark',\n            },\n        },\n        {\n            key: 'verifications',\n            title: localize('Verifications'),\n            title_indicators: { type: 'displayIcons' },\n            description: localize(\n                'You will need to submit proof of identity and address once you reach certain thresholds.'\n            ),\n        },\n        {\n            key: 'regulator',\n            title: localize('Regulator/EDR'),\n            description: localize('Deriv (SVG) LLC (company no. 273 LLC 2020)'),\n        },\n    ],\n    swapfree_contents: [\n        {\n            key: 'assets',\n            title: localize('Assets'),\n            description: localize('Synthetics, Forex, Stocks, Stock Indices, Cryptocurrencies, and ETFs'),\n            title_indicators: {\n                type: 'displayText',\n                display_text: localize('40+'),\n                display_text_skin_color: 'red-darker',\n            },\n        },\n        {\n            key: 'leverage',\n            title: localize('Leverage'),\n            title_indicators: {\n                type: 'displayText',\n                display_text: localize('1:1000'),\n                display_text_skin_color: 'yellow-light',\n            },\n        },\n        {\n            key: 'verifications',\n            title: localize('Verifications'),\n            title_indicators: { type: 'displayIcons' },\n            description: localize(\n                'You will need to submit proof of identity and address once you reach certain thresholds.'\n            ),\n        },\n        {\n            key: 'regulator',\n            title: localize('Regulator/EDR'),\n            description: localize('Deriv (SVG) LLC (company no. 273 LLC 2020)'),\n        },\n    ],\n    synthetic_verification_docs: ['not_applicable'],\n    financial_verification_docs: ['not_applicable'],\n});\n","import { localize } from '@deriv/translations';\nimport { TJurisdictionCardItems } from 'Components/props.types';\n\nexport const getJurisdictionBviContents = (): TJurisdictionCardItems => ({\n    is_over_header_available: false,\n    header: localize('British Virgin Islands'),\n    synthetic_contents: [\n        {\n            key: 'assets',\n            title: localize('Assets'),\n            description: localize('Synthetics, Basket indices and Derived FX'),\n            title_indicators: {\n                type: 'displayText',\n                display_text: localize('40+'),\n                display_text_skin_color: 'red-darker',\n            },\n        },\n        {\n            key: 'leverage',\n            title: localize('Leverage'),\n            title_indicators: {\n                type: 'displayText',\n                display_text: localize('1:1000'),\n                display_text_skin_color: 'yellow-light',\n            },\n        },\n        {\n            key: 'verifications',\n            title: localize('Verifications'),\n            title_indicators: { type: 'displayIcons' },\n            clickable_description: [\n                { type: 'link', text: localize('Learn more') },\n                { type: 'text', text: localize('about verifications needed.') },\n            ],\n        },\n        {\n            key: 'regulator',\n            title: localize('Regulator/EDR'),\n            description: localize('British Virgin Islands Financial Services Commission (License no. SIBA/L/18/1114)'),\n        },\n    ],\n    financial_contents: [\n        {\n            key: 'assets',\n            title: localize('Assets'),\n            description: localize('Forex, Stocks, Stock indices, Commodities, and Cryptocurrencies'),\n            title_indicators: {\n                type: 'displayText',\n                display_text: localize('170+'),\n                display_text_skin_color: 'red-light',\n            },\n        },\n        {\n            key: 'leverage',\n            title: localize('Leverage'),\n            title_indicators: {\n                type: 'displayText',\n                display_text: localize('1:1000'),\n                display_text_skin_color: 'yellow-light',\n            },\n        },\n        {\n            key: 'spreadsFrom',\n            title: localize('Spreads from'),\n            title_indicators: {\n                type: 'displayText',\n                display_text: localize('0.5 pips'),\n                display_text_skin_color: 'violet-dark',\n            },\n        },\n        {\n            key: 'verifications',\n            title: localize('Verifications'),\n            title_indicators: { type: 'displayIcons' },\n            clickable_description: [\n                { type: 'link', text: localize('Learn more') },\n                { type: 'text', text: localize('about verifications needed.') },\n            ],\n        },\n        {\n            key: 'regulator',\n            title: localize('Regulator/EDR'),\n            description: localize('British Virgin Islands Financial Services Commission (License no. SIBA/L/18/1114)'),\n        },\n    ],\n    synthetic_verification_docs: ['document_number', 'name_and_address'],\n    financial_verification_docs: ['document_number', 'name_and_address'],\n});\n","import { localize } from '@deriv/translations';\nimport { TJurisdictionCardItems } from 'Components/props.types';\n\nexport const getJurisdictionVanuatuContents = (): TJurisdictionCardItems => ({\n    is_over_header_available: false,\n    header: localize('Vanuatu'),\n    synthetic_contents: [\n        {\n            key: 'assets',\n            title: localize('Assets'),\n            description: localize('Synthetics, Basket indices and Derived FX'),\n            title_indicators: {\n                type: 'displayText',\n                display_text: localize('40+'),\n                display_text_skin_color: 'red-darker',\n            },\n        },\n        {\n            key: 'leverage',\n            title: localize('Leverage'),\n            title_indicators: {\n                type: 'displayText',\n                display_text: localize('1:1000'),\n                display_text_skin_color: 'yellow-light',\n            },\n        },\n        {\n            key: 'verifications',\n            title: localize('Verifications'),\n            title_indicators: { type: 'displayIcons' },\n            clickable_description: [\n                { type: 'link', text: localize('Learn more') },\n                { type: 'text', text: localize('about verifications needed.') },\n            ],\n        },\n        {\n            key: 'regulator',\n            title: localize('Regulator/EDR'),\n            description: localize('Vanuatu Financial Services Commission'),\n        },\n    ],\n    financial_contents: [\n        {\n            key: 'assets',\n            title: localize('Assets'),\n            description: localize('Forex, Stock indices, Commodities and Cryptocurrencies'),\n            title_indicators: {\n                type: 'displayText',\n                display_text: localize('90+'),\n                display_text_skin_color: 'red-dark',\n            },\n        },\n        {\n            key: 'leverage',\n            title: localize('Leverage'),\n            title_indicators: {\n                type: 'displayText',\n                display_text: localize('1:1000'),\n                display_text_skin_color: 'yellow-light',\n            },\n        },\n        {\n            key: 'spreadsFrom',\n            title: localize('Spreads from'),\n            title_indicators: {\n                type: 'displayText',\n                display_text: localize('0.5 pips'),\n                display_text_skin_color: 'violet-dark',\n            },\n        },\n        {\n            key: 'verifications',\n            title: localize('Verifications'),\n            title_indicators: { type: 'displayIcons' },\n            clickable_description: [\n                { type: 'link', text: localize('Learn more') },\n                { type: 'text', text: localize('about verifications needed.') },\n            ],\n        },\n        {\n            key: 'regulator',\n            title: localize('Regulator/EDR'),\n            description: localize('Vanuatu Financial Services Commission'),\n        },\n    ],\n    synthetic_verification_docs: ['document_number', 'name_and_address'],\n    financial_verification_docs: ['document_number', 'name_and_address'],\n});\n","import { localize } from '@deriv/translations';\nimport { TJurisdictionCardItems } from 'Components/props.types';\n\nexport const getJurisdictionLabuanContents = (): TJurisdictionCardItems => ({\n    over_header: localize('Straight-through processing'),\n    is_over_header_available: true,\n    header: localize('Labuan'),\n    synthetic_contents: [\n        { key: 'assets', title: localize('Assets'), description: localize('Forex and Cryptocurrencies') },\n        { key: 'leverage', title: localize('Leverage') },\n        {\n            key: 'spreadsFrom',\n            title: localize('Spreads from'),\n        },\n        {\n            key: 'verifications',\n            title: localize('Verifications'),\n            title_indicators: { type: 'displayIcons' },\n            clickable_description: [\n                { type: 'link', text: localize('Learn more') },\n                { type: 'text', text: localize('about verifications needed.') },\n            ],\n        },\n        {\n            key: 'regulator',\n            title: localize('Regulator/EDR'),\n            description: localize('Labuan Financial Services Authority (licence no. MB/18/0024)'),\n        },\n    ],\n    financial_contents: [\n        {\n            key: 'assets',\n            title: localize('Assets'),\n            description: localize('Forex and Cryptocurrencies'),\n            title_indicators: {\n                type: 'displayText',\n                display_text: localize('80+'),\n                display_text_skin_color: 'red-dark',\n            },\n        },\n        {\n            key: 'leverage',\n            title: localize('Leverage'),\n            title_indicators: {\n                type: 'displayText',\n                display_text: localize('1:100'),\n                display_text_skin_color: 'yellow-dark',\n            },\n        },\n        {\n            key: 'spreadsFrom',\n            title: localize('Spreads from'),\n            title_indicators: {\n                type: 'displayText',\n                display_text: localize('0.6 pips'),\n                display_text_skin_color: 'violet-dark',\n            },\n        },\n        {\n            key: 'verifications',\n            title: localize('Verifications'),\n            title_indicators: { type: 'displayIcons' },\n            clickable_description: [\n                { type: 'link', text: localize('Learn more') },\n                { type: 'text', text: localize('about verifications needed.') },\n            ],\n        },\n        {\n            key: 'regulator',\n            title: localize('Regulator/EDR'),\n            description: localize('Labuan Financial Services Authority (licence no. MB/18/0024)'),\n        },\n    ],\n    synthetic_verification_docs: ['document_number', 'name_and_address'],\n    financial_verification_docs: ['document_number', 'name_and_address'],\n});\n","import { localize } from '@deriv/translations';\nimport { TJurisdictionCardItems } from 'Components/props.types';\n\nexport const getJurisdictionMaltainvestContents = (): TJurisdictionCardItems => ({\n    is_over_header_available: false,\n    header: localize('Malta'),\n    synthetic_contents: [\n        {\n            key: 'assets',\n            title: localize('Assets'),\n            description: localize('Synthetics, Forex, Stocks, Stock indices, Commodities, and Cryptocurrencies'),\n            title_indicators: {\n                type: 'displayText',\n                display_text: localize('140+'),\n                display_text_skin_color: 'red-light',\n            },\n        },\n        {\n            key: 'leverage',\n            title: localize('Leverage'),\n            title_indicators: {\n                type: 'displayText',\n                display_text: localize('1:30'),\n                display_text_skin_color: 'brown-dark',\n            },\n        },\n        {\n            key: 'spreadsFrom',\n            title: localize('Spreads from'),\n            title_indicators: {\n                type: 'displayText',\n                display_text: localize('0.5 pips'),\n                display_text_skin_color: 'violet-dark',\n            },\n        },\n        {\n            key: 'verifications',\n            title: localize('Verifications'),\n            clickable_description: [\n                { type: 'link', text: localize('Learn more') },\n                { type: 'text', text: localize('about verifications needed.') },\n            ],\n        },\n        {\n            key: 'regulator',\n            title: localize('Regulator/EDR'),\n            description: localize('Malta Financial Services Authority (MFSA) (licence no. IS/70156)'),\n        },\n    ],\n    financial_contents: [\n        {\n            key: 'assets',\n            title: localize('Assets'),\n            description: localize('Synthetics, Forex, Stocks, Stock indices, Commodities, and Cryptocurrencies'),\n            title_indicators: {\n                type: 'displayText',\n                display_text: localize('140+'),\n                display_text_skin_color: 'red-light',\n            },\n        },\n        {\n            key: 'leverage',\n            title: localize('Leverage'),\n            title_indicators: {\n                type: 'displayText',\n                display_text: localize('1:30'),\n                display_text_skin_color: 'brown-dark',\n            },\n        },\n        {\n            key: 'spreadsFrom',\n            title: localize('Spreads from'),\n            title_indicators: {\n                type: 'displayText',\n                display_text: localize('0.5 pips'),\n                display_text_skin_color: 'violet-dark',\n            },\n        },\n        {\n            key: 'verifications',\n            title: localize('Verifications'),\n            title_indicators: { type: 'displayIcons' },\n            clickable_description: [\n                { type: 'link', text: localize('Learn more') },\n                { type: 'text', text: localize('about verifications needed.') },\n            ],\n        },\n        {\n            key: 'regulator',\n            title: localize('Regulator/EDR'),\n            description: localize('Malta Financial Services Authority (MFSA) (licence no. IS/70156)'),\n        },\n    ],\n    synthetic_verification_docs: ['selfie', 'identity_document', 'name_and_address'],\n    financial_verification_docs: ['selfie', 'identity_document', 'name_and_address'],\n});\n","import React from 'react';\nimport { Jurisdiction } from '@deriv/shared';\nimport { TJurisdictionModalContentProps } from '../props.types';\nimport JurisdictionCard from './jurisdiction-card';\n\nconst JurisdictionModalContent = ({\n    account_status,\n    account_type,\n    is_non_idv_design = false,\n    is_virtual,\n    jurisdiction_selected_shortcode,\n    setJurisdictionSelectedShortcode,\n    synthetic_available_accounts,\n    financial_available_accounts,\n    real_synthetic_accounts_existing_data,\n    real_financial_accounts_existing_data,\n    real_swapfree_accounts_existing_data,\n    swapfree_available_accounts,\n}: TJurisdictionModalContentProps) => {\n    const card_classname = `cfd-jurisdiction-card--${account_type}`;\n\n    const cardsToBeShown = (type_of_card: string) => {\n        switch (account_type) {\n            case 'synthetic':\n                return synthetic_available_accounts?.some(account => account.shortcode === type_of_card);\n            case 'all':\n                return swapfree_available_accounts?.some(account => account.shortcode === type_of_card);\n            default:\n                return financial_available_accounts?.some(account => account.shortcode === type_of_card);\n        }\n    };\n\n    const disableCard = (type_of_card: string) => {\n        if (is_virtual && type_of_card !== 'svg') {\n            return true;\n        }\n        switch (account_type) {\n            case 'synthetic':\n                return real_synthetic_accounts_existing_data?.some(\n                    account => account.landing_company_short === type_of_card\n                );\n            case 'all':\n                return real_swapfree_accounts_existing_data?.some(\n                    account => account.landing_company_short === type_of_card\n                );\n            default:\n                return real_financial_accounts_existing_data?.some(\n                    account => account.landing_company_short === type_of_card\n                );\n        }\n    };\n\n    const jurisdiction_cards_array = [\n        Jurisdiction.SVG,\n        Jurisdiction.BVI,\n        Jurisdiction.VANUATU,\n        Jurisdiction.LABUAN,\n        Jurisdiction.MALTA_INVEST,\n    ];\n\n    return (\n        <div data-testid='dt-jurisdiction-modal-content' className={`${card_classname}__wrapper`}>\n            {jurisdiction_cards_array.map(\n                card =>\n                    cardsToBeShown(card) && (\n                        <JurisdictionCard\n                            account_status={account_status}\n                            account_type={account_type}\n                            disabled={disableCard(card)}\n                            is_non_idv_design={is_non_idv_design}\n                            jurisdiction_selected_shortcode={jurisdiction_selected_shortcode}\n                            key={card}\n                            setJurisdictionSelectedShortcode={setJurisdictionSelectedShortcode}\n                            type_of_card={card}\n                        />\n                    )\n            )}\n        </div>\n    );\n};\n\nexport default JurisdictionModalContent;\n","import React from 'react';\nimport { Checkbox, StaticUrl, Text } from '@deriv/components';\nimport { isMobile, Jurisdiction } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport { TJurisdictionCheckBoxProps } from '../props.types';\n\nconst JurisdictionCheckBox = ({\n    class_name,\n    is_checked,\n    jurisdiction_selected_shortcode,\n    onCheck,\n    context,\n    should_restrict_bvi_account_creation,\n    should_restrict_vanuatu_account_creation,\n}: TJurisdictionCheckBoxProps) => {\n    const shouldShowCheckBox = () => {\n        if (\n            !jurisdiction_selected_shortcode ||\n            jurisdiction_selected_shortcode === Jurisdiction.SVG ||\n            (jurisdiction_selected_shortcode === Jurisdiction.BVI && should_restrict_bvi_account_creation) ||\n            (jurisdiction_selected_shortcode === Jurisdiction.VANUATU && should_restrict_vanuatu_account_creation)\n        ) {\n            return false;\n        }\n        return true;\n    };\n\n    const dbvi_company_names: { [key: string]: { [key: string]: string } } = {\n        bvi: { name: 'Deriv (BVI) Ltd', tnc_url: 'tnc/deriv-(bvi)-ltd.pdf' },\n        labuan: { name: 'Deriv (FX) Ltd', tnc_url: 'tnc/deriv-(fx)-ltd.pdf' },\n        maltainvest: {\n            name: 'Deriv Investments (Europe) Limited',\n            tnc_url: 'tnc/deriv-investments-(europe)-limited.pdf',\n        },\n        vanuatu: { name: 'Deriv (V) Ltd', tnc_url: 'tnc/general-terms.pdf' },\n    };\n\n    const getCheckboxLabel = () => (\n        <Text as='p' align='center' size={isMobile() ? 'xxs' : 'xs'} line_height='xs'>\n            <Localize\n                i18n_default_text=\"I confirm and accept {{company}} 's <0>Terms and Conditions</0>\"\n                values={{ company: dbvi_company_names[jurisdiction_selected_shortcode].name }}\n                components={[\n                    <StaticUrl\n                        key={0}\n                        className='link--no-bold'\n                        href={dbvi_company_names[jurisdiction_selected_shortcode].tnc_url}\n                    />,\n                ]}\n            />\n        </Text>\n    );\n    return (\n        <React.Fragment>\n            {shouldShowCheckBox() && (\n                <div className={class_name}>\n                    <Checkbox\n                        context={context}\n                        value={is_checked}\n                        onChange={onCheck}\n                        label={getCheckboxLabel()}\n                        defaultChecked={!!is_checked}\n                    />\n                </div>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default JurisdictionCheckBox;\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { getAuthenticationStatusInfo, isMobile, Jurisdiction, getMT5Title } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport { TJurisdictionModalFootNoteProps } from '../props.types';\n\nconst FooterNote = ({\n    account_status,\n    account_type,\n    context,\n    card_classname,\n    jurisdiction_selected_shortcode,\n    should_restrict_bvi_account_creation,\n    should_restrict_vanuatu_account_creation,\n}: TJurisdictionModalFootNoteProps) => {\n    const account_type_name = getMT5Title(account_type);\n\n    const { poa_pending } = getAuthenticationStatusInfo(account_status);\n\n    if (jurisdiction_selected_shortcode === Jurisdiction.SVG) {\n        return (\n            <Localize\n                i18n_default_text='Add your Deriv MT5 <0>{{account_type_name}}</0> account under Deriv (SVG) LLC (company no. 273 LLC 2020).'\n                values={{ account_type_name }}\n            />\n        );\n    } else if (\n        (jurisdiction_selected_shortcode === Jurisdiction.BVI && should_restrict_bvi_account_creation) ||\n        (jurisdiction_selected_shortcode === Jurisdiction.VANUATU && should_restrict_vanuatu_account_creation)\n    ) {\n        return poa_pending ? (\n            <Localize\n                i18n_default_text='<0>You can open this account once your submitted documents have been verified.</0>'\n                components={[<span key={0} className={`${card_classname}__footnote--pending`} />]}\n            />\n        ) : (\n            <Localize i18n_default_text='To create this account first we need you to resubmit your proof of address.' />\n        );\n    } else if (jurisdiction_selected_shortcode === Jurisdiction.BVI) {\n        return (\n            <Localize\n                i18n_default_text='Add your Deriv MT5 <0>{{account_type_name}}</0>  account under Deriv (BVI) Ltd, regulated by the British Virgin Islands Financial Services Commission (License no. SIBA/L/18/1114).'\n                values={{ account_type_name }}\n            />\n        );\n    } else if (jurisdiction_selected_shortcode === Jurisdiction.VANUATU) {\n        return (\n            <Localize\n                i18n_default_text='Add Your Deriv MT5 <0>{{account_type_name}}</0>  account under Deriv (V) Ltd, regulated by the Vanuatu Financial Services Commission.'\n                values={{ account_type_name }}\n            />\n        );\n    } else if (jurisdiction_selected_shortcode === Jurisdiction.LABUAN) {\n        return (\n            <Localize\n                i18n_default_text='Add your Deriv MT5 <0>{{account_type_name}}</0>  STP account under Deriv (FX) Ltd regulated by Labuan Financial Services Authority (Licence no. MB/18/0024).'\n                values={{ account_type_name }}\n            />\n        );\n    } else if (jurisdiction_selected_shortcode === Jurisdiction.MALTA_INVEST) {\n        return (\n            <Localize i18n_default_text='Add your Deriv MT5 CFDs account under Deriv Investments (Europe) Limited, regulated by the Malta Financial Services Authority (MFSA) (licence no. IS/70156).' />\n        );\n    }\n\n    return null;\n};\n\nconst JurisdictionModalFootNote = (props: TJurisdictionModalFootNoteProps) => {\n    return (\n        <React.Fragment>\n            {props.jurisdiction_selected_shortcode && (\n                <div data-testid='dt-jurisdiction-footnote' className={`${props.card_classname}__footnote`}>\n                    <Text\n                        as='p'\n                        color='prominent'\n                        align='center'\n                        size={isMobile() ? 'xxs' : 'xs'}\n                        weight='bold'\n                        line_height='xs'\n                    >\n                        <FooterNote {...props} />\n                    </Text>\n                </div>\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default JurisdictionModalFootNote;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Button, Modal } from '@deriv/components';\nimport { getAuthenticationStatusInfo, isMobile, Jurisdiction } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { TJurisdictionModalContentWrapperProps } from '../props.types';\nimport { connect } from '../../Stores/connect';\nimport RootStore from '../../Stores/index';\nimport JurisdictionModalContent from './jurisdiction-modal-content';\nimport JurisdictionCheckBox from './jurisdiction-modal-checkbox';\nimport JurisdictionModalFootNote from './jurisdiction-modal-foot-note';\n\nconst JurisdictionModalContentWrapper = ({\n    account_status,\n    account_type,\n    context,\n    fetchAccountSettings,\n    has_submitted_cfd_personal_details,\n    is_jurisdiction_modal_visible,\n    is_virtual,\n    jurisdiction_selected_shortcode,\n    openPasswordModal,\n    real_financial_accounts_existing_data,\n    real_swapfree_accounts_existing_data,\n    real_synthetic_accounts_existing_data,\n    residence,\n    residence_list,\n    setJurisdictionSelectedShortcode,\n    should_restrict_bvi_account_creation,\n    should_restrict_vanuatu_account_creation,\n    show_eu_related_content,\n    toggleCFDVerificationModal,\n    trading_platform_available_accounts,\n    toggleJurisdictionModal,\n    updateMT5Status,\n}: TJurisdictionModalContentWrapperProps) => {\n    const [checked, setChecked] = React.useState(false);\n\n    const {\n        poi_or_poa_not_submitted,\n        poi_acknowledged_for_bvi_labuan,\n        poi_acknowledged_for_vanuatu_maltainvest,\n        poa_acknowledged,\n        need_poa_resubmission,\n    } = getAuthenticationStatusInfo(account_status);\n\n    React.useEffect(() => {\n        if (is_jurisdiction_modal_visible) {\n            if (!is_virtual) {\n                updateMT5Status();\n                fetchAccountSettings();\n            }\n            setJurisdictionSelectedShortcode('');\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [is_jurisdiction_modal_visible]);\n\n    React.useEffect(() => {\n        if (jurisdiction_selected_shortcode) {\n            setChecked(false);\n        }\n    }, [jurisdiction_selected_shortcode, is_jurisdiction_modal_visible]);\n\n    const financial_available_accounts = trading_platform_available_accounts.filter(\n        available_account =>\n            available_account.market_type === 'financial' &&\n            (show_eu_related_content\n                ? available_account.shortcode === 'maltainvest'\n                : available_account.shortcode !== 'maltainvest')\n    );\n\n    const synthetic_available_accounts = trading_platform_available_accounts.filter(\n        available_account =>\n            available_account.market_type === 'gaming' &&\n            (show_eu_related_content\n                ? available_account.shortcode === 'maltainvest'\n                : available_account.shortcode !== 'maltainvest')\n    );\n\n    const is_svg_selected = jurisdiction_selected_shortcode === Jurisdiction.SVG;\n    const is_bvi_selected = jurisdiction_selected_shortcode === Jurisdiction.BVI;\n    const is_vanuatu_selected = jurisdiction_selected_shortcode === Jurisdiction.VANUATU;\n    const is_labuan_selected = jurisdiction_selected_shortcode === Jurisdiction.LABUAN;\n    const is_maltainvest_selected = jurisdiction_selected_shortcode === Jurisdiction.MALTA_INVEST;\n\n    const is_idv_country =\n        residence_list.find(elem => elem?.value === residence)?.identity?.services?.idv?.is_country_supported === 1;\n    const has_idv_attempts = (account_status?.authentication?.identity?.services?.idv?.submissions_left ?? 0) > 0;\n    const is_non_idv_design = !is_idv_country || (is_idv_country && !has_idv_attempts);\n\n    const swapfree_available_accounts = trading_platform_available_accounts.filter(\n        available_account =>\n            available_account.market_type === 'all' &&\n            (show_eu_related_content\n                ? available_account.shortcode === 'maltainvest'\n                : available_account.shortcode !== 'maltainvest')\n    );\n\n    const isNextButtonDisabled = () => {\n        if (jurisdiction_selected_shortcode) {\n            let is_account_created;\n            if (account_type.type === 'synthetic') {\n                is_account_created = real_synthetic_accounts_existing_data?.some(\n                    account => account.landing_company_short === jurisdiction_selected_shortcode\n                );\n            } else if (account_type.type === 'all') {\n                is_account_created = real_swapfree_accounts_existing_data?.some(\n                    account => account.landing_company_short === jurisdiction_selected_shortcode\n                );\n            } else {\n                is_account_created = real_financial_accounts_existing_data?.some(\n                    account => account.landing_company_short === jurisdiction_selected_shortcode\n                );\n            }\n            if (!is_account_created) {\n                if (\n                    is_svg_selected ||\n                    (is_bvi_selected && should_restrict_bvi_account_creation && need_poa_resubmission) ||\n                    (is_vanuatu_selected && should_restrict_vanuatu_account_creation && need_poa_resubmission)\n                ) {\n                    return false;\n                }\n                return !checked;\n            }\n            return true;\n        }\n        return true;\n    };\n\n    const onSelectRealAccount = () => {\n        const type_of_account = {\n            category: account_type.category,\n            type: account_type.type,\n        };\n\n        if (is_svg_selected) {\n            openPasswordModal(type_of_account);\n        } else if (is_vanuatu_selected) {\n            if (\n                poi_acknowledged_for_vanuatu_maltainvest &&\n                !poi_or_poa_not_submitted &&\n                !should_restrict_vanuatu_account_creation &&\n                poa_acknowledged &&\n                has_submitted_cfd_personal_details\n            ) {\n                openPasswordModal(type_of_account);\n            } else {\n                toggleCFDVerificationModal();\n            }\n        } else if (is_bvi_selected) {\n            if (\n                poi_acknowledged_for_bvi_labuan &&\n                !poi_or_poa_not_submitted &&\n                !should_restrict_bvi_account_creation &&\n                poa_acknowledged &&\n                has_submitted_cfd_personal_details\n            ) {\n                openPasswordModal(type_of_account);\n            } else {\n                toggleCFDVerificationModal();\n            }\n        } else if (is_labuan_selected) {\n            if (poi_acknowledged_for_bvi_labuan && poa_acknowledged && has_submitted_cfd_personal_details) {\n                openPasswordModal(type_of_account);\n            } else {\n                toggleCFDVerificationModal();\n            }\n        } else if (is_maltainvest_selected) {\n            if (poi_acknowledged_for_vanuatu_maltainvest && poa_acknowledged) {\n                openPasswordModal(type_of_account);\n            } else {\n                toggleCFDVerificationModal();\n            }\n        }\n    };\n\n    return (\n        <div className='jurisdiction-modal__content-wrapper'>\n            <div className='jurisdiction-modal__scrollable-content'>\n                <JurisdictionModalContent\n                    account_status={account_status}\n                    account_type={account_type.type}\n                    financial_available_accounts={financial_available_accounts}\n                    is_non_idv_design={is_non_idv_design}\n                    is_virtual={is_virtual}\n                    real_financial_accounts_existing_data={real_financial_accounts_existing_data}\n                    real_synthetic_accounts_existing_data={real_synthetic_accounts_existing_data}\n                    jurisdiction_selected_shortcode={jurisdiction_selected_shortcode}\n                    real_swapfree_accounts_existing_data={real_swapfree_accounts_existing_data}\n                    setJurisdictionSelectedShortcode={setJurisdictionSelectedShortcode}\n                    swapfree_available_accounts={swapfree_available_accounts}\n                    synthetic_available_accounts={synthetic_available_accounts}\n                />\n                <div\n                    className={classNames(\n                        'jurisdiction-modal__footer-content',\n                        `cfd-jurisdiction-card--${account_type.type}__footer-wrapper`\n                    )}\n                >\n                    <div className={`cfd-jurisdiction-card--${account_type.type}__footnotes-container`}>\n                        <JurisdictionModalFootNote\n                            account_status={account_status}\n                            account_type={account_type.type}\n                            card_classname={`cfd-jurisdiction-card--${account_type.type}`}\n                            context={context}\n                            jurisdiction_selected_shortcode={jurisdiction_selected_shortcode}\n                            should_restrict_bvi_account_creation={should_restrict_bvi_account_creation}\n                            should_restrict_vanuatu_account_creation={should_restrict_vanuatu_account_creation}\n                        />\n                        <JurisdictionCheckBox\n                            is_checked={checked}\n                            context={context}\n                            onCheck={() => setChecked(!checked)}\n                            class_name={`cfd-jurisdiction-card--${account_type.type}__jurisdiction-checkbox`}\n                            jurisdiction_selected_shortcode={jurisdiction_selected_shortcode}\n                            should_restrict_bvi_account_creation={should_restrict_bvi_account_creation}\n                            should_restrict_vanuatu_account_creation={should_restrict_vanuatu_account_creation}\n                        />\n                    </div>\n                </div>\n            </div>\n            <Modal.Footer className='jurisdiction-modal__footer-button' has_separator>\n                <Button\n                    disabled={isNextButtonDisabled()}\n                    primary\n                    style={{ width: isMobile() ? '100%' : 'unset' }}\n                    onClick={() => {\n                        toggleJurisdictionModal();\n                        onSelectRealAccount();\n                    }}\n                >\n                    {localize('Next')}\n                </Button>\n            </Modal.Footer>\n        </div>\n    );\n};\nexport default connect(({ modules: { cfd }, client, traders_hub }: RootStore) => ({\n    account_status: client.account_status,\n    account_type: cfd.account_type,\n    fetchAccountSettings: client.fetchAccountSettings,\n    has_submitted_cfd_personal_details: cfd.has_submitted_cfd_personal_details,\n    is_jurisdiction_modal_visible: cfd.is_jurisdiction_modal_visible,\n    is_virtual: client.is_virtual,\n    jurisdiction_selected_shortcode: cfd.jurisdiction_selected_shortcode,\n    real_financial_accounts_existing_data: cfd.real_financial_accounts_existing_data,\n    real_swapfree_accounts_existing_data: cfd.real_swapfree_accounts_existing_data,\n    real_synthetic_accounts_existing_data: cfd.real_synthetic_accounts_existing_data,\n    residence: client.residence,\n    residence_list: client.residence_list,\n    setJurisdictionSelectedShortcode: cfd.setJurisdictionSelectedShortcode,\n    should_restrict_bvi_account_creation: client.should_restrict_bvi_account_creation,\n    should_restrict_vanuatu_account_creation: client.should_restrict_vanuatu_account_creation,\n    show_eu_related_content: traders_hub.show_eu_related_content,\n    toggleCFDVerificationModal: cfd.toggleCFDVerificationModal,\n    trading_platform_available_accounts: client.trading_platform_available_accounts,\n    toggleJurisdictionModal: cfd.toggleJurisdictionModal,\n    updateMT5Status: client.updateMT5Status,\n}))(JurisdictionModalContentWrapper);\n","import React from 'react';\nimport { DesktopWrapper, MobileDialog, MobileWrapper, Modal, UILoader } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { connect } from '../../Stores/connect';\nimport RootStore from '../../Stores/index';\nimport { getMT5Title } from '@deriv/shared';\nimport { TJurisdictionModalProps } from '../props.types';\nimport JurisdictionModalContentWrapper from './jurisdiction-modal-content-wrapper';\n\nconst JurisdictionModal = ({\n    account_type,\n    context,\n    disableApp,\n    enableApp,\n    is_jurisdiction_modal_visible,\n    openPasswordModal,\n    show_eu_related_content,\n    toggleJurisdictionModal,\n}: TJurisdictionModalProps) => {\n    const modal_title = show_eu_related_content\n        ? localize('Choose a jurisdiction for your Deriv MT5 CFDs account')\n        : localize('Choose a jurisdiction for your Deriv MT5 {{account_type}} account', {\n              account_type: getMT5Title(account_type.type),\n          });\n\n    return (\n        <div>\n            <React.Suspense fallback={<UILoader />}>\n                <DesktopWrapper>\n                    <Modal\n                        className='jurisdiction-modal'\n                        disableApp={disableApp}\n                        enableApp={enableApp}\n                        exit_classname='cfd-modal--custom-exit'\n                        is_open={is_jurisdiction_modal_visible}\n                        title={modal_title}\n                        toggleModal={toggleJurisdictionModal}\n                        type='button'\n                        context={context}\n                        width={account_type.type === 'financial' ? '1200px' : '1040px'}\n                    >\n                        <JurisdictionModalContentWrapper openPasswordModal={openPasswordModal} context={context} />\n                    </Modal>\n                </DesktopWrapper>\n                <MobileWrapper>\n                    <MobileDialog\n                        portal_element_id='deriv_app'\n                        title={modal_title}\n                        context={context}\n                        visible={is_jurisdiction_modal_visible}\n                        onClose={toggleJurisdictionModal}\n                    >\n                        <JurisdictionModalContentWrapper openPasswordModal={openPasswordModal} context={context} />\n                    </MobileDialog>\n                </MobileWrapper>\n            </React.Suspense>\n        </div>\n    );\n};\n\nexport default connect(({ modules: { cfd }, ui, traders_hub }: RootStore) => ({\n    account_type: cfd.account_type,\n    disableApp: ui.disableApp,\n    enableApp: ui.enableApp,\n    is_jurisdiction_modal_visible: cfd.is_jurisdiction_modal_visible,\n    show_eu_related_content: traders_hub.show_eu_related_content,\n    toggleJurisdictionModal: cfd.toggleJurisdictionModal,\n}))(JurisdictionModal);\n"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__deriv_components__","__WEBPACK_EXTERNAL_MODULE__deriv_shared__","__WEBPACK_EXTERNAL_MODULE__deriv_translations__","__WEBPACK_EXTERNAL_MODULE_mobx_react__","__WEBPACK_EXTERNAL_MODULE_react__","hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","inner","apply","toString","Object","prototype","includes","key","call","join","default","MobxContent","React","connect","propsToSelectFn","Component","BaseComponent","own_props","store","ObservedComponent","isReactComponent","isClassComponent","props","context","useObserver","displayName","name","injectStorePropsToComponent","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","o","defineProperty","enumerable","get","obj","prop","jurisdictionVerificationContents","short_description","localize","required_verification_docs","document_number","icon","text","selfie","identity_document","name_and_address","not_applicable","status_references","color","card_classname","disabled","is_card_selected","toggleCardFlip","verification_docs","className","Icon","onClick","size","Text","as","map","verification_item","status_item","clickable_description","description_part","type","account_status","title_indicators","type_of_card","getAuthenticationStatusInfo","poi_pending_for_bvi_labuan","poi_resubmit_for_bvi_labuan","poi_verified_for_bvi_labuan","poi_pending_for_vanuatu_maltainvest","poi_resubmit_for_vanuatu_maltainvest","poi_verified_for_vanuatu_maltainvest","poa_pending","need_poa_resubmission","poa_verified","getVerificationIconVariant","verification_document","icon_variant","Jurisdiction","weight","align","display_text_skin_color","display_text","concat","card_section_item","title","description","toLowerCase","card_data","card_values","is_over_header_available","Localize","i18n_default_text","over_header","header","item","index","account_type","is_non_idv_design","jurisdiction_selected_shortcode","setJurisdictionSelectedShortcode","is_synthetic","is_swapfree","svg","synthetic_contents","financial_contents","swapfree_contents","synthetic_verification_docs","financial_verification_docs","bvi","vanuatu","labuan","maltainvest","non_synthetic_card_data","is_card_flipped","setIsCardFlipped","event","stopPropagation","cardType","is_virtual","synthetic_available_accounts","financial_available_accounts","real_synthetic_accounts_existing_data","real_financial_accounts_existing_data","real_swapfree_accounts_existing_data","swapfree_available_accounts","disableCard","some","account","landing_company_short","jurisdiction_cards_array","card","shortcode","cardsToBeShown","class_name","is_checked","onCheck","should_restrict_bvi_account_creation","should_restrict_vanuatu_account_creation","dbvi_company_names","tnc_url","Checkbox","value","onChange","label","isMobile","line_height","values","company","components","StaticUrl","href","defaultChecked","FooterNote","account_type_name","getMT5Title","cfd","modules","client","traders_hub","fetchAccountSettings","has_submitted_cfd_personal_details","is_jurisdiction_modal_visible","residence","residence_list","show_eu_related_content","toggleCFDVerificationModal","trading_platform_available_accounts","toggleJurisdictionModal","updateMT5Status","openPasswordModal","checked","setChecked","poi_or_poa_not_submitted","poi_acknowledged_for_bvi_labuan","poi_acknowledged_for_vanuatu_maltainvest","poa_acknowledged","filter","available_account","market_type","is_svg_selected","is_bvi_selected","is_vanuatu_selected","is_labuan_selected","is_maltainvest_selected","is_idv_country","find","elem","identity","services","idv","is_country_supported","has_idv_attempts","authentication","submissions_left","Modal","has_separator","Button","primary","style","width","type_of_account","category","ui","disableApp","enableApp","modal_title","fallback","UILoader","DesktopWrapper","exit_classname","is_open","toggleModal","MobileWrapper","MobileDialog","portal_element_id","visible","onClose"],"sourceRoot":""}